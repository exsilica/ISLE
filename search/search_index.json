{
    "docs": [
        {
            "location": "/", 
            "text": "Islandora Enterprise (ISLE)\n\n\nWelcome to the Documentation for the Islandora Enterprise (ISLE) project.\n\n\nWhat is Islandora Enterprise (ISLE)?\n\n\nIslandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.\n\n\nHow can you help?\n\n\nISLE is seeking support from the Islandora community to see the project through. This support can take several forms, depending on your institution's resources and ability to contribute. To help ISLE succeed, you can:\n\n Contribute time to testing or development\n\n Contribute funding to enable more MVP Wishlist items or towards Phase II of ISLE\n\n Tell others about ISLE\n\n Add your institution to the \nISLE Supporters\n to express your interest in adopting the finished product (this helps show community interest)\n\n\nContributors welcome!\n\n\n\n\nIf you have questions, please contact \nDavid Keiser-Clark\n or post them on the \nIslandora listserv\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#islandora-enterprise-isle", 
            "text": "Welcome to the Documentation for the Islandora Enterprise (ISLE) project.", 
            "title": "Islandora Enterprise (ISLE)"
        }, 
        {
            "location": "/#what-is-islandora-enterprise-isle", 
            "text": "Islandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.", 
            "title": "What is Islandora Enterprise (ISLE)?"
        }, 
        {
            "location": "/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/#how-can-you-help", 
            "text": "ISLE is seeking support from the Islandora community to see the project through. This support can take several forms, depending on your institution's resources and ability to contribute. To help ISLE succeed, you can:  Contribute time to testing or development  Contribute funding to enable more MVP Wishlist items or towards Phase II of ISLE  Tell others about ISLE  Add your institution to the  ISLE Supporters  to express your interest in adopting the finished product (this helps show community interest)", 
            "title": "How can you help?"
        }, 
        {
            "location": "/#contributors-welcome", 
            "text": "If you have questions, please contact  David Keiser-Clark  or post them on the  Islandora listserv .", 
            "title": "Contributors welcome!"
        }, 
        {
            "location": "/about/", 
            "text": "Islandora Enterprise (ISLE)\n is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.\n\n\nISLE Documents\n\n\n\n\nISLE Executive Summary\n (a concise overview in plain English)\n\n\nISLE Specifications\n (based on the older, now closed, \nISLE MVP\n doc)\n\n\nISLE Supporters\n (list of institutions)", 
            "title": "About"
        }, 
        {
            "location": "/about/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/about/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/about/#isle-documents", 
            "text": "ISLE Executive Summary  (a concise overview in plain English)  ISLE Specifications  (based on the older, now closed,  ISLE MVP  doc)  ISLE Supporters  (list of institutions)", 
            "title": "ISLE Documents"
        }, 
        {
            "location": "/1_system_process_overview/summary/", 
            "text": "Project Overview\n\n\nISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE\n\n\nWhat is Islandora Enterprise (ISLE)?\n\n\nIslandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.\n\n\nHigh Level Objective\n\n\nTo deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.\n\n\nISLE Functional Definition\n\n\nBy ISLE, it is meant a system that will:  \n\n\n\n\nFunction as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.\n\n\nConsist of a public, tagged set of Docker containers.\n\n\nInclude use of an orchestration tool such as Docker Composer.\n\n\nAllow for the replacement of older containers with newer versions.\n\n\nBe updated to include new component security patch releases within one calendar month.\n\n\nSupport institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.\n\n\nThese will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.\n\n\n\n\n\n\nSupport for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.\n\n\nSupport data store flexibility on institutional hosting or an AWS cloud environment.\n\n\nEncompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.\n\n\nInclude an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers\n\n\nInclude documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development", 
            "title": "1.1 - Executive summary"
        }, 
        {
            "location": "/1_system_process_overview/summary/#project-overview", 
            "text": "ISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE", 
            "title": "Project Overview"
        }, 
        {
            "location": "/1_system_process_overview/summary/#what-is-islandora-enterprise-isle", 
            "text": "Islandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.", 
            "title": "What is Islandora Enterprise (ISLE)?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#high-level-objective", 
            "text": "To deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.", 
            "title": "High Level Objective"
        }, 
        {
            "location": "/1_system_process_overview/summary/#isle-functional-definition", 
            "text": "By ISLE, it is meant a system that will:     Function as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.  Consist of a public, tagged set of Docker containers.  Include use of an orchestration tool such as Docker Composer.  Allow for the replacement of older containers with newer versions.  Be updated to include new component security patch releases within one calendar month.  Support institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.  These will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.    Support for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.  Support data store flexibility on institutional hosting or an AWS cloud environment.  Encompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.  Include an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers  Include documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development", 
            "title": "ISLE Functional Definition"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/", 
            "text": "MVP Specs\n\n\nCurrently as this software is in the Alpha stage, we recommend the following for host Servers\n\n\nHost servers infrastructure can be:\n\n\n\n\nBare metal (standalone physical server)\n\n\nVirtual Machines (VMWare, VSphere, Virtualbox etc)\n\n\n\n\nHost Server Operating Systems\n\n\n\n\nCentOS 7 (or RHEL equivalent)\n\n\nUnbunt 16.04 LTS (or Debian equivalent)\n\n\n\n\nHost Server Memory\n\n\n\n\nRecommended\n - Minimum baseline of 16 GB RAM or higher\n\n\n\n\nIf an institution chooses to run more than one ISLE platform (e.g. production, staging and development configurations) all on one host server, increasing RAM is recommended)\n\n\nHost Server CPU\n\n\n\n\nRecommended\n - Minimum baseline of 2 cores or more\n\n\n\n\nHost Server Storage\n\n\n\n\nRecommended\n - Minimum baseline of 2 - 4 TB for data storage (\ncan be added as separate mounts / volumes\n)\n\n\n\n\nIf migrating an existing Islandora Production site, review current production storage and replicate this accordingly\n\n\n\n\n\n\nRecommended\n - While \nISLE\n and its configs, images, software etc are typically cloned to \n/opt/ISLE\n and controlled from that location some data can be stored in \n/var/docker\n.\n\n\n\n\nPlease ensure that both the host server's \n/opt\n and \n/var\n directories are on disks, mounts or storage systems that can accommodate at least 200 GB in size. In some cases, institutions during the Alpha testing of ISLE increased the size of the host server's \nopt\n directory by:\n\n\nIncreasing the overall size of the host server VM beyond 200GB\n\n\nAttaching separate storage capacity directly to \n/opt\n and \n/var\n\n\nAdditional documentation will be forthcoming on how mounts, volumes and directories can be setup to avoid shortages and for data growth.", 
            "title": "1.2 - MVP specs"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#mvp-specs", 
            "text": "Currently as this software is in the Alpha stage, we recommend the following for host Servers", 
            "title": "MVP Specs"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-servers-infrastructure-can-be", 
            "text": "Bare metal (standalone physical server)  Virtual Machines (VMWare, VSphere, Virtualbox etc)", 
            "title": "Host servers infrastructure can be:"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-server-operating-systems", 
            "text": "CentOS 7 (or RHEL equivalent)  Unbunt 16.04 LTS (or Debian equivalent)", 
            "title": "Host Server Operating Systems"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-server-memory", 
            "text": "Recommended  - Minimum baseline of 16 GB RAM or higher   If an institution chooses to run more than one ISLE platform (e.g. production, staging and development configurations) all on one host server, increasing RAM is recommended)", 
            "title": "Host Server Memory"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-server-cpu", 
            "text": "Recommended  - Minimum baseline of 2 cores or more", 
            "title": "Host Server CPU"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-server-storage", 
            "text": "Recommended  - Minimum baseline of 2 - 4 TB for data storage ( can be added as separate mounts / volumes )   If migrating an existing Islandora Production site, review current production storage and replicate this accordingly    Recommended  - While  ISLE  and its configs, images, software etc are typically cloned to  /opt/ISLE  and controlled from that location some data can be stored in  /var/docker .   Please ensure that both the host server's  /opt  and  /var  directories are on disks, mounts or storage systems that can accommodate at least 200 GB in size. In some cases, institutions during the Alpha testing of ISLE increased the size of the host server's  opt  directory by:  Increasing the overall size of the host server VM beyond 200GB  Attaching separate storage capacity directly to  /opt  and  /var  Additional documentation will be forthcoming on how mounts, volumes and directories can be setup to avoid shortages and for data growth.", 
            "title": "Host Server Storage"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/systemoverview/", 
            "text": "Introduction\n\n\nIslandora\n is an open-source software \nframework\n designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\n\n\nISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.\n\n\nISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a \nDocker Engine\n environment.\n\n\nThis process would allows institutions to choose between hosting:  \n\n\n\n\nlocally on a laptop for development work\n\n\nlocally in their Institutional data center\n\n\nin a cloud environment such as (\nAmazon Web Services\n).\n\n\n\n\nISLE\u2019s production-ready platform is to be updated monthly with:\n\n\n\n\ncritical security patches\n\n\nfull stack software updates\n\n\na suite of commonly installed features and solution packs.\n\n\n\n\nISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).", 
            "title": "1.3 - System overview"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/systemoverview/#introduction", 
            "text": "Islandora  is an open-source software  framework  designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.  ISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.  ISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a  Docker Engine  environment.  This process would allows institutions to choose between hosting:     locally on a laptop for development work  locally in their Institutional data center  in a cloud environment such as ( Amazon Web Services ).   ISLE\u2019s production-ready platform is to be updated monthly with:   critical security patches  full stack software updates  a suite of commonly installed features and solution packs.   ISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).", 
            "title": "Introduction"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-specification-matrix-table/", 
            "text": "Software\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\nApache\n\n\n2.4 for all versions\n\n\n\n\n\n\n\n\n\n\nDjatoka\n\n\n1.1 used for all versions\n\n\n\n\n\n\n\n\n\n\nDrupal\n\n\n7.4x\n\n\n7.4x\n\n\n7.5x\n\n\n\n\n\n\nDrupal filter\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\nFedora\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\nGsearch\n\n\n2.7.1\n\n\n2.8\n\n\nDG Patched (2.8.x)\n\n\n\n\n\n\nGSearch Extensions\n\n\n0.1.1\n\n\n0.1.2\n\n\n0.1.3\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n7.x\n\n\nHEAD\n\n\n\n\n\n\nIslandora Transforms (XSLTs)\n\n\nall versions use\n\n\nlatest XSLTs from DG \nrepo\n\n\ntested for all versions\n\n\n\n\n\n\nMySQL\n\n\n5.5\n\n\n5.5\n\n\n5.6\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7\n\n\nJDK 7\n\n\nJDK 8.x\n\n\n\n\n\n\nOracle Java\n\n\nJDK 7\n\n\nJDK 7\n\n\nJDK 8.x\n\n\n\n\n\n\nPHP\n\n\n5.5\n\n\n5.5\n\n\n5.6\n\n\n\n\n\n\nSolr\n\n\n4.2\n\n\n4.6.1\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n7.x\n\n\n8.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-apache\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nApache\n\n\n2.4 for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDjatoka\n\n\n1.1 used for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDrupal\n\n\n7.4x\n\n\n7.4x\n\n\n7.56\n\n\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n7.x\n\n\nHEAD\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nOracle Java\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nPHP\n\n\n5.5.9\n\n\n5.5.9\n\n\n5.6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-fedora\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nApache\n\n\n2.4 for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDjatoka\n\n\n1.1 used for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDrupal filter\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\n\n\nFedora\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\n\n\nGsearch\n\n\n2.7.1\n\n\n2.8\n\n\nDG Patched (2.8.x)\n\n\n\n\n\n\n\n\nGSearch Extensions\n\n\n0.1.1\n\n\n0.1.2\n\n\n0.1.3\n\n\n\n\n\n\n\n\nIslandora Transforms\n\n\nall versions use\n\n\nlatest XSLTs from DG \nrepo\n\n\ntested for all versions\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nOracle Java\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n7.x\n\n\n8.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-mysql\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nMySQL\n\n\n5.5\n\n\n5.5\n\n\n5.6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-solr\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nSolr\n\n\n4.2\n\n\n4.6.1\n\n\n4.10.4\n\n\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n7.x\n\n\n8.x", 
            "title": "1.3 - Supported Specification Matrix table"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-islandora-modules/", 
            "text": "", 
            "title": "1.3 - Supported Islandora Modules"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-drupal-modules/", 
            "text": "", 
            "title": "1.3 - Supported Drupal Modules"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-software-repositories/", 
            "text": "", 
            "title": "1.3 - Supported Software Repositories"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-ssl/", 
            "text": "", 
            "title": "1.3 - Supported SSL"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/release-process/", 
            "text": "To release ISLE code and updates, a public open \nGithub\n repository linked to \nDocker Hub\n, a cloud-based registry service will be used.\n\n\nDocker Hub will provide the centralized resource for ISLE container image discovery and distribution for end-users, automated testing and deploy services to build, test and download images.\n\n\nUsers of ISLE will download \u201ctagged\u201d versions of the software (images) to see what version fits their current needs; either a \u201clegacy\u201d setup to provide a clear \u201cupgration\u201d path or a fully current, tested and stable version for production use.\n\n\n\n\nExample of a \u201ctagged\u201d software version on Docker Hub:\n\n\n\n\n\n\nBy using tagged releases (images) for container software e.g. SOLR versions 4.2 - 4.10, end-users will be able to spin up containers quickly and test a wider variety of configurations with the ultimate goal of being on the most recent and stable version. End-users will also be able to make quick edits to configuration templates from the downloaded Github repositories to establish the basic three environment types;\n\n\n\n\nremote admin (sandbox)\n\n\nstaging\n\n\nproduction.\n\n\n\n\nFor specific tags by version please reference, the Supported Specification Matrix \ntable\n\n\nAdditional platform customization and configuration will be handled by the creation of master Dockerfiles template whose values end-users can change for the appropriate institution specific values e.g. edits to schema.xml, config.xml, XSLTs, xacml permissions etc", 
            "title": "1.3 - Release Process"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/", 
            "text": "Alpha Quickstart Guide Notes\n\n\nThis Alpha Quickstart guide is intended to be the \nfastest\n method of installation i.e. downloading ISLE Docker images from Dockerhub.\n\n\nPrevious guides used a manual \"build\" process which is still possible but not necessary for most endusers due to complexity and process length.\n\n\nCurrent documentation will now refer to an \"install\" process using Dockerhub images instead of a \"build\" process where the enduser manually built these images.\n\n\nIf one would like to manually build the images please refer to one of the following Alpha Build guides:\n\n\n\n\n\n\nFor \nLinux Host Servers\n\n\n\n\n\n\nFor \nMacOS Host Servers\n\n\n\n\n\n\nDockerhub images\n\n\nFour Dockerhub images have already been \"built\" and are stored in a repository thus saving the endusers hours of build time.  \n\n\n\n\n\n\nisle-apache \nhttps://hub.docker.com/r/islandoracollabgroup/isle-apache/\n  \n\n\n\n\n\n\nisle-fedora \nhttps://hub.docker.com/r/islandoracollabgroup/isle-fedora/\n  \n\n\n\n\n\n\nisle-mysql \nhttps://hub.docker.com/r/islandoracollabgroup/isle-mysql/\n  \n\n\n\n\n\n\nisle-solr  \nhttps://hub.docker.com/r/islandoracollabgroup/isle-solr/\n  \n\n\n\n\n\n\nDocument Assumptions / Prerequisites:\n\n\n\n\n\n\nThe Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.  \n\n\n\n\n\n\nHost Server setup for \nCentOS 7\n  \n\n\n\n\n\n\nHost Server setup for \nUbuntu 16.04 LTS\n  \n\n\n\n\n\n\nHost Server setup for \nMac OS\n  \n\n\n\n\n\n\n\n\n\n\nBy default the \nDocker-Compose.yml\n file is configured for Linux Host Servers.\n\n\n\n\nIf one is using a \nMac OS\n Host server, then edit the \ndocker-compose.yml\n file to ensure the following lines look like this:  \n\n\n\n\n\n\n\n\n    # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php  \n    - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\nAlpha install process (same for all host server types)\n\n\nPlease note:\n \nThe first container (MySQL, isle-mysql, mysql) has to be running PRIOR to all others (including fedora \n apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.\n  \nDO NOT RUN\n \ndocker-compose up -d\n during the initial install process as this will download all images and then run all containers at the same time which will trigger this race condition and subsequent chain of service failures.\n\n\n\n\nDuring the initial install process\n do the following steps to individually download each image and run each container.\n\n\n\n\n1. MySQL image pull \n container launch (10-15 mins)\n\n\n\n\ndocker pull islandoracollabgroup/isle-mysql\n  \n\n\ndocker-compose up -d mysql\n  \n\n\n\n\n2. Fedora image pull \n container launch (20 - 30 mins)\n\n\n\n\ndocker pull islandoracollabgroup/isle-fedora\n  \n\n\n\n\ndocker-compose up -d fedora\n  \n\n\n\n\n\n\n(Optional but recommended)\n\n\n\n\nAfter spinning up fedora container, check if the Fedora service is running prior to advancing.\n\n\nNavigate to http://fedora:8080/manager/html a popup login prompt should appear.\n\n\nusing the supplied username and password at the bottom of this page, enter the appropriate values\n\n\nsection #### 2. Fedora container, service Tomcat, user is admin\n\n\nupon login a large display of running Tomcat applications should display, scroll down to \nfedora\n\n\n\n\n\n\nThe application state / status should be \ntrue\n\n\nIf \nfalse\n appears instead, attempt to restart the fedora service manually.\n\n\nSelect the \nrestart\n button to the right of the status area. \n\n\n\n\n\n\nIf it still fails, review the mounted fedora logs. The \ndocker-compose.yml\n file will indicate where the logs are located.\n\n\nusing a command like \ntail -n 300 \npath to fedora logs\n/fedora.log\n should display enough information to troubleshoot.\n\n\n\n\n3. Solr image pull \n container launch (10 - 20 mins)\n\n\n\n\ndocker pull islandoracollabgroup/isle-solr\n  \n\n\ndocker-compose up -d solr\n  \n\n\n\n\n4. Apache image pull \n container launch (30 - 45 mins)\n\n\n\n\n\n\ndocker pull islandoracollabgroup/isle-apache\n  \n\n\n\n\n\n\ndocker-compose up -d apache\n  \n\n\n\n\n\n\nPlease note:\n \nThis container on occasion has failed to start initially for as of yet unlogged and unknown reasons.\n  \n\n\n\n\nOne can check if the container is running: \ndocker ps\n (shows only running containers)  \n\n\nOne can check if the container stopped running or \"exited\": \ndocker ps -a\n (shows all containers running or not)  \n\n\n\n\n\n\n\n\n5. Install script on Apache container (20 - 40 mins)\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache bash\n\n\ncd /tmp\n\n\nchmod 777 *.sh\n\n\n./make_site.sh\n\n\n./install_site.sh\n\n\n\n\n\n\n\n\nOnce finished \ncntrl-D\n or type \nexit\n to get out of the apache container\n\n\n\n\nTest (QC) the resulting setup by opening a web browser to the URL of your new Islandora Docker server (i.e. http://myname.institution.edu)\n\n\n\n\nPlease note:\n The cronjob setting in the \ninstall_site.sh\n script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.\n\n\nTotal build process takes 45 - 75 minutes (depending on system and internet speeds)\n\n\n\n\nFast Facts\n\n\nislandora\n user on host server uses \nisle2017\n as password\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\ndockerfeddb2017\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nislandora_user\n\n\nislandoradockerdb2017\n\n\nislandora_docker\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 11/2017\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\ndockerFEDadmin2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\ndockerfedoraIntCallUserpw2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\ndockerfgsAdminpw2017\n\n\nGsearch\n\n\nhttp://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://127.0.0.1:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://127.0.0.1:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://127.0.0.1:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache\n\n\nsee below\n\n\n80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nislandora_docker_admin\n\n\nislandoradockeradminpw2017\n\n\nDrupal site admin\n\n\nhttp://islandora-docker.com", 
            "title": "1.4. -Testing - Alpha Quickstart Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#alpha-quickstart-guide-notes", 
            "text": "This Alpha Quickstart guide is intended to be the  fastest  method of installation i.e. downloading ISLE Docker images from Dockerhub.  Previous guides used a manual \"build\" process which is still possible but not necessary for most endusers due to complexity and process length.  Current documentation will now refer to an \"install\" process using Dockerhub images instead of a \"build\" process where the enduser manually built these images.  If one would like to manually build the images please refer to one of the following Alpha Build guides:    For  Linux Host Servers    For  MacOS Host Servers", 
            "title": "Alpha Quickstart Guide Notes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#dockerhub-images", 
            "text": "Four Dockerhub images have already been \"built\" and are stored in a repository thus saving the endusers hours of build time.      isle-apache  https://hub.docker.com/r/islandoracollabgroup/isle-apache/       isle-fedora  https://hub.docker.com/r/islandoracollabgroup/isle-fedora/       isle-mysql  https://hub.docker.com/r/islandoracollabgroup/isle-mysql/       isle-solr   https://hub.docker.com/r/islandoracollabgroup/isle-solr/", 
            "title": "Dockerhub images"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#document-assumptions-prerequisites", 
            "text": "The Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.      Host Server setup for  CentOS 7       Host Server setup for  Ubuntu 16.04 LTS       Host Server setup for  Mac OS         By default the  Docker-Compose.yml  file is configured for Linux Host Servers.   If one is using a  Mac OS  Host server, then edit the  docker-compose.yml  file to ensure the following lines look like this:           # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php  \n    - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php", 
            "title": "Document Assumptions / Prerequisites:"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#alpha-install-process-same-for-all-host-server-types", 
            "text": "Please note:   The first container (MySQL, isle-mysql, mysql) has to be running PRIOR to all others (including fedora   apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.    DO NOT RUN   docker-compose up -d  during the initial install process as this will download all images and then run all containers at the same time which will trigger this race condition and subsequent chain of service failures.   During the initial install process  do the following steps to individually download each image and run each container.", 
            "title": "Alpha install process (same for all host server types)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#1-mysql-image-pull-container-launch-10-15-mins", 
            "text": "docker pull islandoracollabgroup/isle-mysql     docker-compose up -d mysql", 
            "title": "1. MySQL image pull &amp; container launch (10-15 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#2-fedora-image-pull-container-launch-20-30-mins", 
            "text": "docker pull islandoracollabgroup/isle-fedora      docker-compose up -d fedora       (Optional but recommended)   After spinning up fedora container, check if the Fedora service is running prior to advancing.  Navigate to http://fedora:8080/manager/html a popup login prompt should appear.  using the supplied username and password at the bottom of this page, enter the appropriate values  section #### 2. Fedora container, service Tomcat, user is admin  upon login a large display of running Tomcat applications should display, scroll down to  fedora    The application state / status should be  true  If  false  appears instead, attempt to restart the fedora service manually.  Select the  restart  button to the right of the status area.     If it still fails, review the mounted fedora logs. The  docker-compose.yml  file will indicate where the logs are located.  using a command like  tail -n 300  path to fedora logs /fedora.log  should display enough information to troubleshoot.", 
            "title": "2. Fedora image pull &amp; container launch (20 - 30 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#3-solr-image-pull-container-launch-10-20-mins", 
            "text": "docker pull islandoracollabgroup/isle-solr     docker-compose up -d solr", 
            "title": "3. Solr image pull &amp; container launch (10 - 20 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#4-apache-image-pull-container-launch-30-45-mins", 
            "text": "docker pull islandoracollabgroup/isle-apache       docker-compose up -d apache       Please note:   This container on occasion has failed to start initially for as of yet unlogged and unknown reasons.      One can check if the container is running:  docker ps  (shows only running containers)    One can check if the container stopped running or \"exited\":  docker ps -a  (shows all containers running or not)", 
            "title": "4. Apache image pull &amp; container launch (30 - 45 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#5-install-script-on-apache-container-20-40-mins", 
            "text": "Run the following shell scripts manually on the apache container     docker exec -it isle-apache bash  cd /tmp  chmod 777 *.sh  ./make_site.sh  ./install_site.sh     Once finished  cntrl-D  or type  exit  to get out of the apache container   Test (QC) the resulting setup by opening a web browser to the URL of your new Islandora Docker server (i.e. http://myname.institution.edu)   Please note:  The cronjob setting in the  install_site.sh  script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.", 
            "title": "5. Install script on Apache container (20 - 40 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#total-build-process-takes-45-75-minutes-depending-on-system-and-internet-speeds", 
            "text": "", 
            "title": "Total build process takes 45 - 75 minutes (depending on system and internet speeds)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#fast-facts", 
            "text": "islandora  user on host server uses  isle2017  as password", 
            "title": "Fast Facts"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql  MySQL 5.6  3306        Account  Password  Database  Perms      root  islemysqlrootpw2017  ALL  ALL    fedora_admin  dockerfeddb2017  fedora3  All  except  Grant  option    islandora_user  islandoradockerdb2017  islandora_docker  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 11/2017    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  dockerFEDadmin2017  Fedora  http://127.0.0.1:8080/fedora/describe    fedoraIntCallUser  dockerfedoraIntCallUserpw2017  Fedora  http://127.0.0.1:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  dockerfgsAdminpw2017  Gsearch  http://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex    admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8080/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8080/manager/html    --  --  Djatoka  http://127.0.0.1:8080/adore-djatoka/    --  --  Apache  http://127.0.0.1:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8091/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8091/manager/html    --  --  Solr  http://127.0.0.1:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_quickstart/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache  see below  80        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      islandora_docker_admin  islandoradockeradminpw2017  Drupal site admin  http://islandora-docker.com", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/", 
            "text": "ISLE Alpha Migration Guide (draft 01.25.2018 v1)\n\n\nThis Alpha Migration guide is the intended process for endusers to migrate their existing production Islandora environment to their respective ISLE Islandora containers and volumes.\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nISLE Host server setup has been completed\n\n\n\n\n\n\nIf one has not setup the ISLE host server please refer to here:\n\n\n\n\n\n\nManual Host Server setup for \nCentOS 7\n w/ ISLE repo clone steps\n\n\n\n\n\n\nManual Host Server setup for \nUbuntu 16.04 LTS\n w/ ISLE repo clone steps   \n\n\n\n\n\n\nAnsible install\n setup for (Ubuntu / Centos) includes ISLE repo clone steps\n\n\n\n\n\n\n\n\n\n\nThe fully qualified domain name of their ISLE host server that will run all of the containers has been created and resolves properly in DNS.\n\n\n\n\n\n\nThe enduser has the IP address of their ISLE host server documented\n\n\n\n\n\n\nThe enduser has the expected fully qualified domain name (fqdn) of the new first Islandora / Drupal website documented and assigned to the appropriate IP in DNS.\n\n\n\n\nPlease Note: this IP address and fqdn are NOT the of current running Production Islandora site!\n\n\n\n\n\n\n\n\nThe enduser has ssh access to ISLE host server\n\n\n\n\n\n\nThe enduser has the ability or access to create git repositories\n\n\n\n\n\n\nThe enduser (or an appropriate IT resource) can \nCOPY\n data, configuration files etc. safely from their Islandora Production server(s) to the new ISLE host server.\n\n\n\n\n\n\nProduction data, configuration files etc. have been \ncopied\n from the currently running Islandora production server to the new ISLE host server following the checklist below of required data, configuration files etc.\n\n\n\n\n\n\nMigration to ISLE Process Overview\n\n\n**TO DO:** Review Ben's outlines from https://github.com/Islandora-Collaboration-Group/ISLE/issues/80\n\n\n\n\n\n\nHere's what's going to happen / why?\n\n\nCopying from prod location to prod location on ISLE host Server\n\n\nBlah blah about mering into config diff solr etc\n\n\n\n\nFriendly note to endusers: While the following process may seem overly cautious or redundant, it saves time and establishes a safer conditions for endusers to work with valuable data.\n\n\n\n\nrepeat entire process (if necessary) for additional ISLE platform e.g. production, staging and development\n\n\n\n\nStep 1: Create appropriate Islandora Production data storage structure on new ISLE host server\n\n\nIt is recommended that endusers use a large volume or attached drive that can store a copy of the entire production storage.\n\n\nPlease note:\n this storage is in addition to any data storage required by ISLE.\n\n\n\n\n\n\nIn an appropriate area / path on one's intended ISLE host server e.g. \n/opt/\n or \n/mnt/\n, create a directory e.g. \nislandora_production_data_storage\n with the following sub-directories:\n\n\n\n\n\n\nExample directory structure\n:\n\n\n\n\n\n\n    islandora_production_data_storage/   \n    \u251c\u2500\u2500 apache  \n    \u251c\u2500\u2500 fedora   \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 apache  \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora  \n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 gsearch  \n    \u251c\u2500\u2500 mysql  \n    \u251c\u2500\u2500 solr  \n    \u2514\u2500\u2500 tomcat  \n\n\n\n\n\n\n\n\nIt is recommended that original copies of data be first copied here to allow for faster workflow as well as for endusers to easily sort through production data.\n\n\n\n\n\n\nThis directory will serve as the \"backup\" of all production data about to be migrated into ISLE\n\n\n\n\n\n\nOnce the migration process is confirmed as completed and successful, the enduser can decide if this data is still worth keeping or backed up.\n\n\n\n\n\n\n\n\nStep 2: \nCOPY\n in all of the directories or files found on the \nMigration Export Checklist\n to the appropriate sub-directory on the ISLE host server as outlined above.\n\n\nPlease review the \nMigration Export Checklist\n \npage\n and ensure all production data detailed within has been \nCOPIED\n over to the ISLE Host Server PRIOR to proceeding with this guide.\n\n\n\n\nStep 3: Setup Git repo for institutional Docker configuration\n\n\nPlease Note\n Because  config folder defines the entire platform setup eseentially keeping the sample\n\n\nThis process is necessary for running multiple versions of ISLE e.g. production, staging and development / sandbox. The config folder\n\n\n\n\n\n\nCreate a private Git repository (Github.com, Bitbucket.com, Gitlab.com or private institutional Git repository)\n\n\n\n\n\n\nNavigate to the ISLE directory `/opt/ISLE/config/``\n\n\n\n\n\n\nCreate a directory on the ISLE server directory e.g. \n/opt/ISLE/config/isle-prod-project.institution\n\n\n\n\n\n\nInstantiate this directory as a git repository\n\n\n\n\nDirections for this process\n\n\nhttps://help.github.com/articles/set-up-git/\n\n\nhttps://help.github.com/articles/create-a-repo/\n\n\n\n\n\n\n\n\n**TO DO**: Add more git URLs non github.com\n\n\n\n\n\n\n\n\nCopy the contents of the \n/opt/ISLE/config/production_template/\n to this new directory e.g. \n/opt/ISLE/config/isle-prod-project.institution\n\n\n\n\n\n\nThe enduser will need to add the \n/home/islandora/.ssh/id_rsa.pub\n as a git ssh deploy key to be able to push pull from the server.\n\n\n\n\n\n\n\n\nStep 4: Copy in production files on the Isle Host Server to the new institutional Docker config directory within the ISLE project directory\n\n\n\n\n\n\nCopy in the \nhighlighted\n files from their locations \n/pathto/islandora_production_data_storage/\n to the appropriate directories of \n/opt/ISLE/config/isle-prod-project.institution\n\n\n\n\n\n\nResulting example structure\n: \n/opt/ISLE/config/isle-prod-project.institution\n\n\n\n\n\n\nisle-prod-project.institution/\n\u251c\u2500\u2500 apache\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 php.ini\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.php\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 site.conf\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tmpreaper\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 cron\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 fedora\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 apache\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 site.conf\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora-users.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora.fcfg\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 filter-drupal.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 log4j.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 logback.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repository-policies\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 default\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-apim-if-not-localhost.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-inactive-or-deleted-objects-or-datastreams-if-not-administrator.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-reloadPolicies-if-not-localhost.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-unallowed-file-resolution.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-anything-to-administrator.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-apia-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-dsstate-check-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-oai-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-serverStatus-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 readme.txt\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 islandora\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 permit-apim-to-authenticated-user.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 permit-getDatastream-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 permit-getDatastreamHistory-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 permit-upload-to-authenticated-user.xml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gsearch\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedoragsearch.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fgsconfig-basic-configForIslandora.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fgsconfigObjects.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repository.properties\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 tmpreaper\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 cron\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tomcat\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 server.xml\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 tomcat-users.xml\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 web.xml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 create_drupal_user.sql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 create_fedora_user.sql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 my.cnf\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 production_site_db.sql\n\u2514\u2500\u2500 solr\n    \u251c\u2500\u2500 solr\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 schema.xml\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 solr.xml\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 solrconfig.xml\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 stopwords.txt\n    \u2514\u2500\u2500 tomcat\n        \u251c\u2500\u2500 server.xml\n        \u251c\u2500\u2500 tomcat-users.xml\n        \u2514\u2500\u2500 web.xml\n\n\n\n\nStep 5: Edit the \ndocker-compose.yml\n file\n\n\nMysql Service section\n\n\nservices:\n  mysql:\n\n\n\n\n\n\n\n\nIn the \nimage:\n section,the image names to the appropriate images needed\n\n\n\n\nAs of Jan 25, 2018 please use the alpha2 tag (this documentation will change)\n\n\n\n\n\n\n\n\nIn the \nenvironment:\n section, change the MYSQL_ROOT_PASSWORD\n\n\n\n\n\n\nIn the \nvolumes:\n section, change the following:\n\n\n\n\n/pathto/isle_production_data_storage/data/mysql:/var/lib/mysql\n\n\n\n\n/pathto/isle_production_data_storage/data/mysql/log:/var/log/mysql\n\n\n\n\n\n\nPlease Note:\n \nThe docker bind-mount process will automatically create the \n/data/mysql\n directories\n\n\n\n\n\n\n\n\n\n\nIn the \ncontainer_name:\n section, change to \nisle-mysql-institution\n or \nisle-mysql-v1\n\n\n\n\n\n\nIn the \nextra_hosts:\n section, change: (\nthis is NOT to be literally copied, example only\n)\n\n\n\n\n\"isle.institution.edu:isle_host_server_IP\"  to \"yourislesite.institution.edu:10.10.10.10\"\n\n\n\n\n\n\n\n\nFedora Service section\n\n\nfedora:\n\n\n\n\n**TO DO:**  remaining edits for fedora\n\n**TO DO:**  solr service edits\n\nTO DO : apache service edits\n\n**TO DO:**  git commit changes \n push to repo\n\n**TO DO:**  git clone from the institutional git repo e.g. `ISLE-config` to the /opt/ISLE/config/ (on ISLE host server using terminal)\n\n\n\n\n\nStep 7: Review or Pull down ISLE Docker images\n\n\nPlease Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.\n\n\n\n\nCheck if all ISLE images have been downloaded\n\n\ndocker image ls\n\n\n\n\n  * **TO DO:**  show sample output here\n\n\n\n\n\n\n\n\nIf yes, then proceed to Step 8\n\n\n\n\n\n\nIf no, the perform the following:\n\n\n\n\ndocker pull islandoracollabgroup/isle-mysql:alpha2\n\n\ndocker pull islandoracollabgroup/isle-fedora:alpha2\n\n\ndocker pull islandoracollabgroup/isle-solr:alpha2\n\n\ndocker pull islandoracollabgroup/isle-apache:alpha2\n\n\n\n\n\n\n\n\nStep 8: Spin up mysql container and import production databases\n\n\n\n\ncd /opt/ISLE/config/isle-prod-project.institution\n\n\ndocker-compose up -d mysql\n\n\n\n\n**TO DO:**  steps and scripts for mysql cli import\n       use GUI and recommended clients e.g. Sequel pro, Navicat etc.\n       if encountering errors use _Alternative longer method_ from above\n\n       * _Alternative longer method_\n         * one can skip running the drush command on the production apache webserver\n         * export the databases as usual from the production mysql server\n         * import databases into the isle-mysql container (_with errors being ignored_)\n         * truncate all tables that start with `cache` on the isle-mysql container\n         * export this new database to the `mysql` directory on the isle host server\n         * delete all tables (_not the database itself_) on the isle-mysql container\n         * Reimport the new lighter database to the isle-mysql container\n\n\n\n\n\n\nStep 9: Spin up fedora container and run reindex processes\n\n\n**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/isle-prod-project.institution`\n* `docker-compose up -d fedora`\n* check if fedora is running properly e.g. `http://isle-prod-project.institution:8080/manager/html`\n* `docker exec -it isle-fedora-institution bash`\n* turn off tomcat `service tomcat stop`\n* reindex Fedora RI `process steps here`\n* reindex SQL RI `process steps here`\n* confirm PID contents in SQL table `QC process here`\n\n\n\n\nStep 10: Spin up solr container and rerun index processes\n\n\n**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/isle-prod-project.institution`\n* `docker-compose up -d solr`\n* check if solr is running properly e.g. `http://isle-prod-project.institution:8777/manager/html`\n* `docker exec -it isle-fedora-institution bash` NOTE FEDORA NOT SOLR\n* reindex SOLR `process steps here` Use screen\n* TAKES HOURS DEPENDING ON DATA SIZE\n\n\n\n\nStep 11: Spin up apache container and run provision script\n\n\n**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/isle-prod-project.institution`\n* `docker-compose up -d apache`\n* check if apache is running properly e.g. `http://isle-prod-project.institution`\n* `docker exec -it isle-apache-institution bash`\n* cd /tmp location\n* `/tmp/isle-build-tools/apache-provision.sh` (check if this is appropriate)\n* Check site and outline qC process\n\n\n\n\nDONE", 
            "title": "1.4. -Testing - Alpha Migration Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#isle-alpha-migration-guide-draft-01252018-v1", 
            "text": "This Alpha Migration guide is the intended process for endusers to migrate their existing production Islandora environment to their respective ISLE Islandora containers and volumes.", 
            "title": "ISLE Alpha Migration Guide (draft 01.25.2018 v1)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#assumptions-prerequisites", 
            "text": "ISLE Host server setup has been completed    If one has not setup the ISLE host server please refer to here:    Manual Host Server setup for  CentOS 7  w/ ISLE repo clone steps    Manual Host Server setup for  Ubuntu 16.04 LTS  w/ ISLE repo clone steps       Ansible install  setup for (Ubuntu / Centos) includes ISLE repo clone steps      The fully qualified domain name of their ISLE host server that will run all of the containers has been created and resolves properly in DNS.    The enduser has the IP address of their ISLE host server documented    The enduser has the expected fully qualified domain name (fqdn) of the new first Islandora / Drupal website documented and assigned to the appropriate IP in DNS.   Please Note: this IP address and fqdn are NOT the of current running Production Islandora site!     The enduser has ssh access to ISLE host server    The enduser has the ability or access to create git repositories    The enduser (or an appropriate IT resource) can  COPY  data, configuration files etc. safely from their Islandora Production server(s) to the new ISLE host server.    Production data, configuration files etc. have been  copied  from the currently running Islandora production server to the new ISLE host server following the checklist below of required data, configuration files etc.", 
            "title": "Assumptions / Prerequisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#migration-to-isle-process-overview", 
            "text": "**TO DO:** Review Ben's outlines from https://github.com/Islandora-Collaboration-Group/ISLE/issues/80   Here's what's going to happen / why?  Copying from prod location to prod location on ISLE host Server  Blah blah about mering into config diff solr etc   Friendly note to endusers: While the following process may seem overly cautious or redundant, it saves time and establishes a safer conditions for endusers to work with valuable data.   repeat entire process (if necessary) for additional ISLE platform e.g. production, staging and development", 
            "title": "Migration to ISLE Process Overview"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-1-create-appropriate-islandora-production-data-storage-structure-on-new-isle-host-server", 
            "text": "It is recommended that endusers use a large volume or attached drive that can store a copy of the entire production storage.  Please note:  this storage is in addition to any data storage required by ISLE.    In an appropriate area / path on one's intended ISLE host server e.g.  /opt/  or  /mnt/ , create a directory e.g.  islandora_production_data_storage  with the following sub-directories:    Example directory structure :        islandora_production_data_storage/   \n    \u251c\u2500\u2500 apache  \n    \u251c\u2500\u2500 fedora   \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 apache  \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora  \n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 gsearch  \n    \u251c\u2500\u2500 mysql  \n    \u251c\u2500\u2500 solr  \n    \u2514\u2500\u2500 tomcat      It is recommended that original copies of data be first copied here to allow for faster workflow as well as for endusers to easily sort through production data.    This directory will serve as the \"backup\" of all production data about to be migrated into ISLE    Once the migration process is confirmed as completed and successful, the enduser can decide if this data is still worth keeping or backed up.", 
            "title": "Step 1: Create appropriate Islandora Production data storage structure on new ISLE host server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-2-copy-in-all-of-the-directories-or-files-found-on-the-migration-export-checklist-to-the-appropriate-sub-directory-on-the-isle-host-server-as-outlined-above", 
            "text": "Please review the  Migration Export Checklist   page  and ensure all production data detailed within has been  COPIED  over to the ISLE Host Server PRIOR to proceeding with this guide.", 
            "title": "Step 2: COPY in all of the directories or files found on the Migration Export Checklist to the appropriate sub-directory on the ISLE host server as outlined above."
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-3-setup-git-repo-for-institutional-docker-configuration", 
            "text": "Please Note  Because  config folder defines the entire platform setup eseentially keeping the sample  This process is necessary for running multiple versions of ISLE e.g. production, staging and development / sandbox. The config folder    Create a private Git repository (Github.com, Bitbucket.com, Gitlab.com or private institutional Git repository)    Navigate to the ISLE directory `/opt/ISLE/config/``    Create a directory on the ISLE server directory e.g.  /opt/ISLE/config/isle-prod-project.institution    Instantiate this directory as a git repository   Directions for this process  https://help.github.com/articles/set-up-git/  https://help.github.com/articles/create-a-repo/     **TO DO**: Add more git URLs non github.com    Copy the contents of the  /opt/ISLE/config/production_template/  to this new directory e.g.  /opt/ISLE/config/isle-prod-project.institution    The enduser will need to add the  /home/islandora/.ssh/id_rsa.pub  as a git ssh deploy key to be able to push pull from the server.", 
            "title": "Step 3: Setup Git repo for institutional Docker configuration"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-4-copy-in-production-files-on-the-isle-host-server-to-the-new-institutional-docker-config-directory-within-the-isle-project-directory", 
            "text": "Copy in the  highlighted  files from their locations  /pathto/islandora_production_data_storage/  to the appropriate directories of  /opt/ISLE/config/isle-prod-project.institution    Resulting example structure :  /opt/ISLE/config/isle-prod-project.institution    isle-prod-project.institution/\n\u251c\u2500\u2500 apache\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 php.ini\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.php\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 site.conf\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tmpreaper\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 cron\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 fedora\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 apache\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 site.conf\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora-users.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora.fcfg\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 filter-drupal.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 log4j.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 logback.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repository-policies\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 default\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-apim-if-not-localhost.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-inactive-or-deleted-objects-or-datastreams-if-not-administrator.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-reloadPolicies-if-not-localhost.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 deny-unallowed-file-resolution.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-anything-to-administrator.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-apia-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-dsstate-check-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-oai-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 permit-serverStatus-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 readme.txt\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 islandora\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 permit-apim-to-authenticated-user.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 permit-getDatastream-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 permit-getDatastreamHistory-unrestricted.xml\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 permit-upload-to-authenticated-user.xml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 gsearch\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedoragsearch.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fgsconfig-basic-configForIslandora.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 fgsconfigObjects.properties\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 repository.properties\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 tmpreaper\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 cron\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tomcat\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 server.xml\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 tomcat-users.xml\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 web.xml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 create_drupal_user.sql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 create_fedora_user.sql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 my.cnf\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 production_site_db.sql\n\u2514\u2500\u2500 solr\n    \u251c\u2500\u2500 solr\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 schema.xml\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 solr.xml\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 solrconfig.xml\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 stopwords.txt\n    \u2514\u2500\u2500 tomcat\n        \u251c\u2500\u2500 server.xml\n        \u251c\u2500\u2500 tomcat-users.xml\n        \u2514\u2500\u2500 web.xml", 
            "title": "Step 4: Copy in production files on the Isle Host Server to the new institutional Docker config directory within the ISLE project directory"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-5-edit-the-docker-composeyml-file", 
            "text": "Mysql Service section  services:\n  mysql:    In the  image:  section,the image names to the appropriate images needed   As of Jan 25, 2018 please use the alpha2 tag (this documentation will change)     In the  environment:  section, change the MYSQL_ROOT_PASSWORD    In the  volumes:  section, change the following:   /pathto/isle_production_data_storage/data/mysql:/var/lib/mysql   /pathto/isle_production_data_storage/data/mysql/log:/var/log/mysql    Please Note:   The docker bind-mount process will automatically create the  /data/mysql  directories      In the  container_name:  section, change to  isle-mysql-institution  or  isle-mysql-v1    In the  extra_hosts:  section, change: ( this is NOT to be literally copied, example only )   \"isle.institution.edu:isle_host_server_IP\"  to \"yourislesite.institution.edu:10.10.10.10\"     Fedora Service section  fedora:  **TO DO:**  remaining edits for fedora\n\n**TO DO:**  solr service edits\n\nTO DO : apache service edits\n\n**TO DO:**  git commit changes   push to repo\n\n**TO DO:**  git clone from the institutional git repo e.g. `ISLE-config` to the /opt/ISLE/config/ (on ISLE host server using terminal)", 
            "title": "Step 5: Edit the docker-compose.yml file"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-7-review-or-pull-down-isle-docker-images", 
            "text": "Please Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.   Check if all ISLE images have been downloaded  docker image ls     * **TO DO:**  show sample output here    If yes, then proceed to Step 8    If no, the perform the following:   docker pull islandoracollabgroup/isle-mysql:alpha2  docker pull islandoracollabgroup/isle-fedora:alpha2  docker pull islandoracollabgroup/isle-solr:alpha2  docker pull islandoracollabgroup/isle-apache:alpha2", 
            "title": "Step 7: Review or Pull down ISLE Docker images"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-8-spin-up-mysql-container-and-import-production-databases", 
            "text": "cd /opt/ISLE/config/isle-prod-project.institution  docker-compose up -d mysql   **TO DO:**  steps and scripts for mysql cli import\n       use GUI and recommended clients e.g. Sequel pro, Navicat etc.\n       if encountering errors use _Alternative longer method_ from above\n\n       * _Alternative longer method_\n         * one can skip running the drush command on the production apache webserver\n         * export the databases as usual from the production mysql server\n         * import databases into the isle-mysql container (_with errors being ignored_)\n         * truncate all tables that start with `cache` on the isle-mysql container\n         * export this new database to the `mysql` directory on the isle host server\n         * delete all tables (_not the database itself_) on the isle-mysql container\n         * Reimport the new lighter database to the isle-mysql container", 
            "title": "Step 8: Spin up mysql container and import production databases"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-9-spin-up-fedora-container-and-run-reindex-processes", 
            "text": "**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/isle-prod-project.institution`\n* `docker-compose up -d fedora`\n* check if fedora is running properly e.g. `http://isle-prod-project.institution:8080/manager/html`\n* `docker exec -it isle-fedora-institution bash`\n* turn off tomcat `service tomcat stop`\n* reindex Fedora RI `process steps here`\n* reindex SQL RI `process steps here`\n* confirm PID contents in SQL table `QC process here`", 
            "title": "Step 9: Spin up fedora container and run reindex processes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-10-spin-up-solr-container-and-rerun-index-processes", 
            "text": "**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/isle-prod-project.institution`\n* `docker-compose up -d solr`\n* check if solr is running properly e.g. `http://isle-prod-project.institution:8777/manager/html`\n* `docker exec -it isle-fedora-institution bash` NOTE FEDORA NOT SOLR\n* reindex SOLR `process steps here` Use screen\n* TAKES HOURS DEPENDING ON DATA SIZE", 
            "title": "Step 10: Spin up solr container and rerun index processes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_guide/#step-11-spin-up-apache-container-and-run-provision-script", 
            "text": "**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/isle-prod-project.institution`\n* `docker-compose up -d apache`\n* check if apache is running properly e.g. `http://isle-prod-project.institution`\n* `docker exec -it isle-apache-institution bash`\n* cd /tmp location\n* `/tmp/isle-build-tools/apache-provision.sh` (check if this is appropriate)\n* Check site and outline qC process  DONE", 
            "title": "Step 11: Spin up apache container and run provision script"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_export_checklist/", 
            "text": "Migration Export Checklist\n\n\nThis section is a checklist of materials to \nCOPY\n from the current running institutional Islandora Production server(s) to the appropriate storage location / directory on the new ISLE Host Server.\n\n\nPlease Note:\n \nUbuntu / Debian style paths are used for all examples file locations below, endusers might have different locations for these files HOWEVER the file and directory names etc should be roughly the same.\n\n\nCaution\n: While the ISLE Project recommends use of export methods or tools such as rsync, scp etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data.\nEnsure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.\n\n\nISLE assumes no responsibility or liability in this matter.\n\n\n\n\nApache\n\n\nCopy the following below to the suggested directory \n/path_to/islandora_production_data_storage/apache/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with the Apache container (\nisle-apache\n).\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhtml\n\n\nIslandora/Drupal Website\n\n\n/var/www/\n\n\n/islandora_production_data_storage/apache/\n\n\n--\n\n\n\n\n\n\nsettings.php\n\n\nDrupal settings.php file\n\n\n/var/www/html/sites/default/\n\n\n/islandora_production_data_storage/apache/\n\n\nsee below\n\n\n\n\n\n\nphp.ini\n\n\nPHP configuration file\n\n\n/etc/\n\n\n/islandora_production_data_storage/apache/\n\n\nsee below\n\n\n\n\n\n\nyoursite.conf\n\n\nApache webserver vhost file\n\n\n/etc/apache2/sites-available/\n\n\n/islandora_production_data_storage/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\nApache Notes\n:\n\n\n\n\n\n\n/var/www/\nhtml\n (\nEntire contents unless size prohibits\n)\n\n\n\n\n\n\n(\nIf \nhtml\n is not used, then substitute with the appropriate directory for the Islandora / Drupal site\n)\n\n\n\n\n\n\nsettings.php\n (\nif running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on...\n)\n\n\n\n\n\n\nyoursite.conf\n (\nfile will have different name\n)\n\n\n\n\n\n\n\n\nFedora\n\n\nCopy the following below to the suggested directory \n/path_to/islandora_production_data_storage/fedora/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with the Apache container (\nisle-fedora\n).  \n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nyoursite.conf\n\n\nApache webserver vhost file\n\n\n/etc/apache2/sites-available/\n\n\n/islandora_production_data_storage/fedora/\n\n\nsee below\n\n\n\n\n\n\ndata\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\nfedora.fcfg\n\n\nFedora repository config file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\nfedora-users.xml\n\n\nFedora users config file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\nfilter-drupal.xml\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\n\n\nFedora Notes\n:\n\n\n\n\nyoursite.conf\n (\nif you use Adore-Djatoka with a reverse proxy otherwise it is possible this file is not necessary\n)\n\n\n\n\n\n\nGsearch\n\n\nCopy the following below to the suggested directory \n/path_to/islandora_production_data_storage/gsearch/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with the Apache container (\nisle-fedora\n).\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfedoragsearch.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nfgsconfig-basic-configForIslandora.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nfgsconfigObjects.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nrepository.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nislandora_transforms\n\n\nTransformation XSLTs directory\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nfoxmlToSolr.xslt\n\n\n\"top-level\" transformational XSLT\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\n\n\nMySQL\n\n\nCopy the following below to the suggested directory \n/path_to/islandora_production_data_storage/mysql/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with the Apache container (\nisle-mysql\n).\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested COPY Method\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nDatabases\n\n\nDrupal website databases\n\n\n/var/lib/mysql\n\n\nCLI, MySQL Workbench or Sequel Pro etc.\n\n\n/islandora_production_data_storage/mysql/\n\n\nsee below\n\n\n\n\n\n\nmy.cnf\n\n\nMySQL server config file\n\n\n/etc/mysql/my.cnf\n\n\nrsync / scp\n\n\n/islandora_production_data_storage/mysql/\n\n\n--\n\n\n\n\n\n\n\n\nMySQL Notes\n:\n\n\n\n\n\n\nDrupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.\n\n\n\n\n\n\nCLI == Command line\n\n\n\n\n\n\nRecommended that the production databases be exported using the \n.sql\n and \n.gz\n file formats e.g. \ndrupal_site_2018.sql.gz\n for better compression and minimal storage footprint.\n\n\n\n\n\n\nIf the enduser is running multi-sites, there will be additional databases to export.\n\n\n\n\n\n\nDo not export the \nfedora3\n database as it will be recreated by the SQL index in later steps of the Migration Guide\n\n\n\n\n\n\nIf possible, on the production Apache webserver, run \ndrush cc all\n from the command line on the production server in the appropriate sites directory PRIOR to db export(s)\n\n\n\n\nOtherwise issues can occur on import due to all cache tables being larger than \ninnodb_log_file_size\n allows\n\n\n\n\nMySQL Tools for Export\n\n\n\n\nOfficial MySQL documentation\n\n\nDigital Ocean quick start for cli export\n\n\nOfficial MySQL GUI app - Workbench\n \nFor Linux, MacOS and Windows\n\n\nSequel Pro\n \nMacOS only\n\n\n\n\nTomcat\n\n\n\n\nCopy from the following locations below on the current running Islandora Production server(s) to the ISLE Host server \n/pathto/islandora_production_data_storage/tomcat\n\n\n\n\nThis data will be used in conjunction with the Apache containers (\nisle-fedora\n \n \nisle-solr\n).\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserver.xml\n\n\nTomcat server config file\n\n\n/var/lib/tomcat7/conf/server.xml\n\n\n/islandora_production_data_storage/tomcat/\n\n\n--\n\n\n\n\n\n\ntomcat-users.xml\n\n\nTomcat server config file\n\n\n/var/lib/tomcat7/conf/tomcat-users.xml\n\n\n/islandora_production_data_storage/tomcat/\n\n\n--\n\n\n\n\n\n\n\n\nSolr\n\n\n\n\nCopy from the following locations below on the current running Islandora Production server(s) to the ISLE Host server \n/pathto/islandora_production_data_storage/solr\n\n\n\n\nThis data will be used in conjunction with the Apache containers (\nisle-solr\n).\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nschema.xml\n\n\nSolr schema file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml\n\n\n/islandora_production_data_storage/solr\n\n\nsee below\n\n\n\n\n\n\nsolrconfig.xml\n\n\nSolr config file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml\n\n\n/islandora_production_data_storage/solr\n\n\nsee below\n\n\n\n\n\n\nstopwords.txt\n\n\nSolr file for filtering out common words\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt\n\n\n/islandora_production_data_storage/solr\n\n\nsee below", 
            "title": "1.4. -Testing - Alpha Migration Export Checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_export_checklist/#migration-export-checklist", 
            "text": "This section is a checklist of materials to  COPY  from the current running institutional Islandora Production server(s) to the appropriate storage location / directory on the new ISLE Host Server.  Please Note:   Ubuntu / Debian style paths are used for all examples file locations below, endusers might have different locations for these files HOWEVER the file and directory names etc should be roughly the same.  Caution : While the ISLE Project recommends use of export methods or tools such as rsync, scp etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data.\nEnsure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.  ISLE assumes no responsibility or liability in this matter.", 
            "title": "Migration Export Checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_export_checklist/#apache", 
            "text": "Copy the following below to the suggested directory  /path_to/islandora_production_data_storage/apache/  on the ISLE Host server.  This data will be used in conjunction with the Apache container ( isle-apache ).     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      html  Islandora/Drupal Website  /var/www/  /islandora_production_data_storage/apache/  --    settings.php  Drupal settings.php file  /var/www/html/sites/default/  /islandora_production_data_storage/apache/  see below    php.ini  PHP configuration file  /etc/  /islandora_production_data_storage/apache/  see below    yoursite.conf  Apache webserver vhost file  /etc/apache2/sites-available/  /islandora_production_data_storage/apache/  see below     Apache Notes :    /var/www/ html  ( Entire contents unless size prohibits )    ( If  html  is not used, then substitute with the appropriate directory for the Islandora / Drupal site )    settings.php  ( if running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on... )    yoursite.conf  ( file will have different name )", 
            "title": "Apache"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_export_checklist/#fedora", 
            "text": "Copy the following below to the suggested directory  /path_to/islandora_production_data_storage/fedora/  on the ISLE Host server.  This data will be used in conjunction with the Apache container ( isle-fedora ).       Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      yoursite.conf  Apache webserver vhost file  /etc/apache2/sites-available/  /islandora_production_data_storage/fedora/  see below    data  Entire Fedora data directory  /usr/local/fedora/  /islandora_production_data_storage/fedora/  --    fedora.fcfg  Fedora repository config file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  --    fedora-users.xml  Fedora users config file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  --    filter-drupal.xml  Fedora Drupal filter file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  --     Fedora Notes :   yoursite.conf  ( if you use Adore-Djatoka with a reverse proxy otherwise it is possible this file is not necessary )", 
            "title": "Fedora"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_export_checklist/#gsearch", 
            "text": "Copy the following below to the suggested directory  /path_to/islandora_production_data_storage/gsearch/  on the ISLE Host server.  This data will be used in conjunction with the Apache container ( isle-fedora ).     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      fedoragsearch.properties  Gsearch config file  /var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /islandora_production_data_storage/gsearch/  --    fgsconfig-basic-configForIslandora.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /islandora_production_data_storage/gsearch/  --    fgsconfigObjects.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /islandora_production_data_storage/gsearch/  --    repository.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/  /islandora_production_data_storage/gsearch/  --    islandora_transforms  Transformation XSLTs directory  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /islandora_production_data_storage/gsearch/  --    foxmlToSolr.xslt  \"top-level\" transformational XSLT  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /islandora_production_data_storage/gsearch/  --", 
            "title": "Gsearch"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_migration_export_checklist/#mysql", 
            "text": "Copy the following below to the suggested directory  /path_to/islandora_production_data_storage/mysql/  on the ISLE Host server.  This data will be used in conjunction with the Apache container ( isle-mysql ).     Data  Description  Possible Location  Suggested COPY Method  Suggested ISLE Path Destination  Notes      Databases  Drupal website databases  /var/lib/mysql  CLI, MySQL Workbench or Sequel Pro etc.  /islandora_production_data_storage/mysql/  see below    my.cnf  MySQL server config file  /etc/mysql/my.cnf  rsync / scp  /islandora_production_data_storage/mysql/  --     MySQL Notes :    Drupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.    CLI == Command line    Recommended that the production databases be exported using the  .sql  and  .gz  file formats e.g.  drupal_site_2018.sql.gz  for better compression and minimal storage footprint.    If the enduser is running multi-sites, there will be additional databases to export.    Do not export the  fedora3  database as it will be recreated by the SQL index in later steps of the Migration Guide    If possible, on the production Apache webserver, run  drush cc all  from the command line on the production server in the appropriate sites directory PRIOR to db export(s)   Otherwise issues can occur on import due to all cache tables being larger than  innodb_log_file_size  allows   MySQL Tools for Export   Official MySQL documentation  Digital Ocean quick start for cli export  Official MySQL GUI app - Workbench   For Linux, MacOS and Windows  Sequel Pro   MacOS only   Tomcat   Copy from the following locations below on the current running Islandora Production server(s) to the ISLE Host server  /pathto/islandora_production_data_storage/tomcat   This data will be used in conjunction with the Apache containers ( isle-fedora     isle-solr ).     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      server.xml  Tomcat server config file  /var/lib/tomcat7/conf/server.xml  /islandora_production_data_storage/tomcat/  --    tomcat-users.xml  Tomcat server config file  /var/lib/tomcat7/conf/tomcat-users.xml  /islandora_production_data_storage/tomcat/  --     Solr   Copy from the following locations below on the current running Islandora Production server(s) to the ISLE Host server  /pathto/islandora_production_data_storage/solr   This data will be used in conjunction with the Apache containers ( isle-solr ).     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      schema.xml  Solr schema file  /var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml  /islandora_production_data_storage/solr  see below    solrconfig.xml  Solr config file  /var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml  /islandora_production_data_storage/solr  see below    stopwords.txt  Solr file for filtering out common words  /var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt  /islandora_production_data_storage/solr  see below", 
            "title": "MySQL"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/", 
            "text": "CentOS 7\n Host Server Setup\n\n\n\n\nThis alpha build uses \nislandora-docker.com\n as the test domain along with the Docker Compose service names e.g. \nmysql, fedora, apache\n etc.\n\n\nIf your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:\n\n\nTo ensure this domain resolves properly, one will need to edit the servers and/or their own local \n/etc/hosts\n file.\n\n\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\n\n\n\n\nAdd one or more of the following: (\nExamples ONLY\n)\n\n\n\n\n\n\nUbuntu 16.04 LTS Host Server (or VM)\n\n\n127.0.0.1       localhost islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com\n\n\n\n\n\n\nEnduser local laptop\n \n127.0.0.1 localhost   \n 192.156.123.26       islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall / run on CentOS 7 server\n\n\n\n\nVirtualbox Virtual Machine (VM)  \n\n\na Vagrant image (recommend using \nbento/centos-7.2\n)  \n\n\nCloud based server e.g. Digital Ocean or Amazon Web Services  \n\n\nPost-installation, add the appropriate ssh keys to the root user's \n.ssh/authorized_keys\n file.  \n\n\n\n\nDocker setup for CentOS 7\n\n\n\n\nOpen a terminal, ssh to the CentOS server as root and install the following:  \n\n\nyum install openssl git htop ntp wget curl\n\n\n\n\n\n\n\n\nInstall Docker on CentOS 7 (as root user)\n\n\n\n\nwget -qO- https://get.docker.com/ | sh\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nAdd islandora user to wheel group \nsudo usermod -aG wheel islandora\n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the ssh session from the host server as the root user \nexit\n\n\n\n\n\n\nssh back in as \nislandora\n\n\n\n\n\n\nEnable the Docker service to start on host server boot\n\n\n\n\nsudo systemctl enable docker.service\n\n\n\n\n\n\n\n\nStart the Docker service\n\n\n\n\nsudo systemctl start docker.service\n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7\n\n\n\n\n\n\nOpen a terminal and ssh back into the CentOS Host Server/VM as the \nislandora\n user and perform the following:\n\n\n\n\n\n\nAdd the RHEL/CENTOS epel-release package repository\n\n\n\n\nsudo yum install epel-release\n\n\n\n\n\n\n\n\nInstall Python Pip (package manager for Python Scripting Language)\n\n\n\n\nsudo yum install -y python-pip\n\n\n\n\n\n\n\n\nUpgrade Python to latest version\n\n\n\n\nsudo yum upgrade python*\n\n\n\n\n\n\n\n\nUpgrade Python Pip\n\n\n\n\nsudo pip install --upgrade pip\n\n\n\n\n\n\n\n\nInstall Docker compose\n\n\n\n\nsudo pip install docker-compose\n\n\n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nReturn to Quickstart Guide\n\n\n* Continue with next steps on \n1.4. -Testing - Alpha Quickstart Guide", 
            "title": "1.4. -Testing - Host Server Build - Centos"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#centos-7-host-server-setup", 
            "text": "This alpha build uses  islandora-docker.com  as the test domain along with the Docker Compose service names e.g.  mysql, fedora, apache  etc.  If your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:  To ensure this domain resolves properly, one will need to edit the servers and/or their own local  /etc/hosts  file.   Open up a terminal and enter:  sudo vi /etc/hosts    Add one or more of the following: ( Examples ONLY )    Ubuntu 16.04 LTS Host Server (or VM)  127.0.0.1       localhost islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com    Enduser local laptop\n  127.0.0.1 localhost   \n 192.156.123.26       islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com", 
            "title": "CentOS 7 Host Server Setup"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#install-run-on-centos-7-server", 
            "text": "Virtualbox Virtual Machine (VM)    a Vagrant image (recommend using  bento/centos-7.2 )    Cloud based server e.g. Digital Ocean or Amazon Web Services    Post-installation, add the appropriate ssh keys to the root user's  .ssh/authorized_keys  file.", 
            "title": "Install / run on CentOS 7 server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#docker-setup-for-centos-7", 
            "text": "Open a terminal, ssh to the CentOS server as root and install the following:    yum install openssl git htop ntp wget curl", 
            "title": "Docker setup for CentOS 7"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#install-docker-on-centos-7-as-root-user", 
            "text": "wget -qO- https://get.docker.com/ | sh", 
            "title": "Install Docker on CentOS 7 (as root user)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Add islandora user to wheel group  sudo usermod -aG wheel islandora    Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.    cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the ssh session from the host server as the root user  exit    ssh back in as  islandora    Enable the Docker service to start on host server boot   sudo systemctl enable docker.service     Start the Docker service   sudo systemctl start docker.service", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-centos-7", 
            "text": "Open a terminal and ssh back into the CentOS Host Server/VM as the  islandora  user and perform the following:    Add the RHEL/CENTOS epel-release package repository   sudo yum install epel-release     Install Python Pip (package manager for Python Scripting Language)   sudo yum install -y python-pip     Upgrade Python to latest version   sudo yum upgrade python*     Upgrade Python Pip   sudo pip install --upgrade pip     Install Docker compose   sudo pip install docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#return-to-quickstart-guide", 
            "text": "", 
            "title": "Return to Quickstart Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_centos/#continue-with-next-steps-on-14-testing-alpha-quickstart-guide", 
            "text": "", 
            "title": "* Continue with next steps on 1.4. -Testing - Alpha Quickstart Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/", 
            "text": "Ubuntu 16.04 LTS\n Host Server Setup\n\n\n\n\nThis alpha build uses \nislandora-docker.com\n as the test domain along with the Docker Compose service names e.g. \nmysql, fedora, apache\n etc.\n\n\nIf your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:\n\n\nTo ensure this domain resolves properly, one will need to edit the servers and/or their own local \n/etc/hosts\n file.\n\n\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\n\n\n\n\nAdd one or more of the following: (\nExamples ONLY\n)\n\n\n\n\n\n\nUbuntu 16.04 LTS Host Server (or VM)\n\n\n127.0.0.1       localhost islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com\n\n\n\n\n\n\nEnduser local laptop\n \n127.0.0.1 localhost   \n 192.156.123.26       islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall / run on Ubuntu 16.04 LTS server\n\n\n\n\nVirtualbox Virtual Machine (VM)  \n\n\na Vagrant image (recommend using \nbento/ubuntu-16.04\n)  \n\n\nCloud based server e.g. Digital Ocean or Amazon Web Services  \n\n\nPost-installation, add the appropriate ssh keys to the root user's \n.ssh/authorized_keys\n file.  \n\n\n\n\nDocker setup for Ubuntu 16.04 LTS\n\n\n\n\n\n\nOpen a terminal, ssh to the Ubuntu server as root and install the following:\n\n\n\n\n\n\nIf you are not root, \nsudo -s\n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install openssl git htop ntp curl\n  \n\n\n\n\n\n\n\n\n\n\nInstall Docker on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n  \n\n\n\n\n\n\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  \n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install -y docker-ce\n  \n\n\n\n\n\n\nCheck if running \nsystemctl status docker\n  \n\n\n\n\nYou may need to PRESS Shift-Z twice to exit out.\n\n\n\n\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the session as the root user.\n\n\n\n\nexit\n\n\nsu islandora\n  \n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncd /home/islandora\n\n\n\n\n\n\nsudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n\n\n\n\n\nsudo chmod +x /usr/local/bin/docker-compose\n  \n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nReturn to Quickstart Guide\n\n\n\n\nContinue with next steps on \n1.4. -Testing - Alpha Quickstart Guide", 
            "title": "1.4. -Testing - Host Server Build - Ubuntu"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#ubuntu-1604-lts-host-server-setup", 
            "text": "This alpha build uses  islandora-docker.com  as the test domain along with the Docker Compose service names e.g.  mysql, fedora, apache  etc.  If your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:  To ensure this domain resolves properly, one will need to edit the servers and/or their own local  /etc/hosts  file.   Open up a terminal and enter:  sudo vi /etc/hosts    Add one or more of the following: ( Examples ONLY )    Ubuntu 16.04 LTS Host Server (or VM)  127.0.0.1       localhost islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com    Enduser local laptop\n  127.0.0.1 localhost   \n 192.156.123.26       islandora-docker.com fedora apache fedora.islandora-docker.com apache.islandora-docker.com", 
            "title": "Ubuntu 16.04 LTS Host Server Setup"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#install-run-on-ubuntu-1604-lts-server", 
            "text": "Virtualbox Virtual Machine (VM)    a Vagrant image (recommend using  bento/ubuntu-16.04 )    Cloud based server e.g. Digital Ocean or Amazon Web Services    Post-installation, add the appropriate ssh keys to the root user's  .ssh/authorized_keys  file.", 
            "title": "Install / run on Ubuntu 16.04 LTS server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#docker-setup-for-ubuntu-1604-lts", 
            "text": "Open a terminal, ssh to the Ubuntu server as root and install the following:    If you are not root,  sudo -s    apt-get update       apt-get install openssl git htop ntp curl", 
            "title": "Docker setup for Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#install-docker-on-ubuntu-1604-lts", 
            "text": "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -       add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"       apt-get update       apt-get install -y docker-ce       Check if running  systemctl status docker      You may need to PRESS Shift-Z twice to exit out.", 
            "title": "Install Docker on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.    cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the session as the root user.   exit  su islandora", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-ubuntu-1604-lts", 
            "text": "cd /home/islandora    sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose    sudo chmod +x /usr/local/bin/docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ubuntu/#return-to-quickstart-guide", 
            "text": "Continue with next steps on  1.4. -Testing - Alpha Quickstart Guide", 
            "title": "Return to Quickstart Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_macos/", 
            "text": "Alpha Manual Build MacOS Pre-Requisites\n\n\n\n\n\n\nThis current alpha has been built and tested on \nDocker For Mac\n only. (11/2017)\n\n\n\n\n\n\nA MacOS System (Sierra 10.12.6 or High Sierra 10.13.x) with 8 - 16 GB RAM and 128GB+ of Storage.\n\n\n\n\n\n\nPlease install the \nlatest version\n from the \nDocker store\n\n\n\n\n\n\nPlease note this will include Docker \n Docker Compose in one package.\n\n\n\n\n\n\nGit will need to be installed prior as well.\n\n\n\n\nOpen a terminal and enter: \ngit --version\n\n\nThis will trigger the \nInstall Command Line Developer Tools\n prompt, click on the blue \nInstall\n button for the license agreement; then click the white \nAgree\n button.\n\n\nThe package will take 1-2 minutes to download. Click the \nDone\n button once finished.\n\n\n\n\n\n\n\n\nThis alpha build uses \nislandora-docker.com\n as the test domain along with the Docker Compose service names e.g. \nmysql, fedora, apache\n etc.\n\n\n\n\nTo ensure this domain resolves properly, one will need to edit their local \n/etc/hosts\n file.\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\nAdd the following:\n\n\n127.0.0.1       localhost islandora-docker.com solr fedora apache mysql fedora.islandora-docker.com apache.islandora-docker.com\n\n\n\n\n\n\n\n\n\n\n\n\nClone the ISLE repository\n\n\n\n\nOpen a terminal and enter: \ngit clone https://github.com/Islandora-Collaboration-Group/ISLE\n\n\ncd /yourpathto/ISLE\n\n\nThis process will take 3 - 5 minutes depending on internet bandwidth\n\n\n\n\n\n\n\n\nReturn to Quickstart Guide\n\n\n\n\nContinue with next steps on \n1.4. -Testing - Alpha Quickstart Guide", 
            "title": "1.4. -Testing - Host Server Build - MacOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_macos/#alpha-manual-build-macos-pre-requisites", 
            "text": "This current alpha has been built and tested on  Docker For Mac  only. (11/2017)    A MacOS System (Sierra 10.12.6 or High Sierra 10.13.x) with 8 - 16 GB RAM and 128GB+ of Storage.    Please install the  latest version  from the  Docker store    Please note this will include Docker   Docker Compose in one package.    Git will need to be installed prior as well.   Open a terminal and enter:  git --version  This will trigger the  Install Command Line Developer Tools  prompt, click on the blue  Install  button for the license agreement; then click the white  Agree  button.  The package will take 1-2 minutes to download. Click the  Done  button once finished.     This alpha build uses  islandora-docker.com  as the test domain along with the Docker Compose service names e.g.  mysql, fedora, apache  etc.   To ensure this domain resolves properly, one will need to edit their local  /etc/hosts  file.  Open up a terminal and enter:  sudo vi /etc/hosts  Add the following:  127.0.0.1       localhost islandora-docker.com solr fedora apache mysql fedora.islandora-docker.com apache.islandora-docker.com       Clone the ISLE repository   Open a terminal and enter:  git clone https://github.com/Islandora-Collaboration-Group/ISLE  cd /yourpathto/ISLE  This process will take 3 - 5 minutes depending on internet bandwidth", 
            "title": "Alpha Manual Build MacOS Pre-Requisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_macos/#return-to-quickstart-guide", 
            "text": "Continue with next steps on  1.4. -Testing - Alpha Quickstart Guide", 
            "title": "Return to Quickstart Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/", 
            "text": "Ansible Host Server Setup\n\n\nEndusers now have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named \nansible\n.\n\n\nAnsible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration (\nrunning tasks in sequence on several different servers or devices\n).\n\n\nIf you are not familiar with the Ansible, it is recommended to start with their documentation.\n\n\n\n\nAnsible website\n\n\nWhat is Ansible?\n\n\nAnsible Documentation\n\n\n\n\nPrerequisites / Assumptions\n\n\n\n\n\n\nFamiliarity or knowledge of Ansible\n\n\n\n\n\n\nAnsible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:\n\n\n\n\nAnsible 2.2+\n (choice of \ninstall methods\n)\n\n\nopenssh\n (2.2.x+)\n\n\ngit\n (2.15.1+)\n\n\npython\n (2.7+)\n\n\n\n\nThe \nISLE project repository\n cloned to an appropriate location.\n\n\n\n\n\n\nA previously created ISLE Host Server running either of these operating systems:\n\n\n\n\nUbuntu 16.04 LTS / Debian Stretch\n\n\n\n\nCentOS 7 / RHEL equivalent  \n\n\n\n\n\n\nAn account with ssh access to the ISLE Host Server\n\n\n\n\n\n\nAn account with passwordless sudo access on the ISLE Host Server\n\n\n\n\n\n\nThe IP of the ISLE Host server\n\n\n\n\n\n\n\n\nAnsible Deploy Script Explanation\n\n\nWithin the \ndocker_install.yml\n Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.\n\n\n\n\n\n\n\n\nAnsible Role\n\n\nAction / Event\n\n\n\n\n\n\n\n\n\n\ndependencies\n\n\nInstalls software dependencies \n tools as described above\n\n\n\n\n\n\nusers_groups\n\n\nAdds users, groups and updates permissions as described above\n\n\n\n\n\n\ndocker\n\n\nInstalls Docker\n\n\n\n\n\n\ndocker_compose\n\n\nInstalls Docker Compose\n\n\n\n\n\n\ngit_clone\n\n\nClones the current ISLE git repository to \n/opt/ISLE\n\n\n\n\n\n\ndocker_images\n\n\nPulls down the latest ISLE Docker Images from Dockerhub.com\n\n\n\n\n\n\n\n\nInstalls software dependencies \n tools including:\n\n\nThe Ansible script will deploy the following to the ISLE Host server:\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS / RHEL\n\n\n\n\n\n\n\n\n\n\nsoftware-properties-common\n\n\nlibselinux-python\n\n\n\n\n\n\npython-software-properties\n\n\nlibsemanage-python\n\n\n\n\n\n\n--\n\n\nyum-utils\n\n\n\n\n\n\nntp\n\n\nntp\n\n\n\n\n\n\nopenssh-client\n\n\nopenssh-clients\n\n\n\n\n\n\nrsync\n\n\nrsync\n\n\n\n\n\n\ncurl\n\n\ncurl\n\n\n\n\n\n\nwget\n\n\nwget\n\n\n\n\n\n\ngit\n\n\ngit\n\n\n\n\n\n\nzip\n\n\nzip\n\n\n\n\n\n\nunzip\n\n\nunzip\n\n\n\n\n\n\nvim\n\n\nvim\n\n\n\n\n\n\nnano\n\n\nnano\n\n\n\n\n\n\nemacs24-nox\n\n\nemacs\n\n\n\n\n\n\nhtop\n\n\nhtop\n\n\n\n\n\n\napt-transport-https\n\n\n--\n\n\n\n\n\n\nca-certificates\n\n\n--\n\n\n\n\n\n\n\n\nMakes ISLE Host service changes\n\n\nPlease Note:\n \nAny of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS / RHEL\n\n\n\n\n\n\n\n\n\n\nenables ntp service\n\n\nenables ntp service\n\n\n\n\n\n\ndisables ufw\n\n\ndisables iptables\n\n\n\n\n\n\n--\n\n\nsets selinux to permissive\n\n\n\n\n\n\n\n\nAdds users, groups and updates permissions\n\n\n\n\nCreates the \nislandora\n user\n\n\nAlong with an appropriate password\n\n\ngenerates a ssh key\n\n\nbestows sudo password-less access\n\n\n\n\nGives the \nislandora\n user the ability to run Docker \n Docker Compose by adding the account to the Docker group.  \n\n\n\n\n\n\nDisables \nroot\n user access via ssh\n\n\n\n\nDisables use of passwords with ssh.\n\n\nkey based access only to the ISLE Host server\n\n\n\n\nInstalls additional software\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nGit clones the ISLE repo to \n/opt/ISLE\n\n\n\n\n\n\nPulls down the most recent ISLE images\n\n\n\n\n\n\nAnsible script directory structure\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 debian_ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 rhel_centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml\n\n\n\n\nConfigure Ansible Script to deploy to ISLE Host\n\n\nTo configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the \nansible\n directory.\n\n\n\n\nansible/docker_install.yml\n\n\nansible/inventory\n\n\nansible/host_vars/isle-prod-project.institution.yml\n\n\n\n\nBasically wherever \nisle-prod-project.institution\n appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name (\nfqdn\n) e.g. \nyourislesite.institution.com\n\n\nOne can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.\n\n\nansible/docker_install.yml\n\n\nThis is the Ansible playbook necessary to deploy software to the ISLE host server.\n\n\n\n\nAt the top of the file remove \nisle-prod-project.institution\n and replace with the appropriate \nfqdn\n.  \n\n\n\n\nansible/inventory.yml\n\n\nThis is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).\n\n\nPlease Note:\n These instructions below are repeated within the file itself.\n\n\n\n\n\n\nLine 7: remove \nisle-prod-project.institution\n from in between the brackets and replace with the appropriate \nfqdn\n\n\n\n\n\n\nLine 8: Add the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions to the end of \nansible_ssh_user=\n\n\nExample\n: \nansible_ssh_user=janesmith\n\n\n\n\n\n\nLine 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of \nansible_ssh_private_key_file=\n\n\n\n\n\n\nExample\n of inventory using settings for local Ansible deploy laptop:\n\n\n\n\n\n\nansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nPlease Note:\n This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\nFinal Example\n end result for inventory file with all settings above\n\n\n\n\n[yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nansible/isle-prod-project.institution.yml\n\n\n\n\n\n\nCopy this file and rename the copy to with the appropriate \nfqdn\n\n\n\n\n\n\nExample\n of how \nhost_vars\n directory should now contain two files:  \n\n\n\n\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n\n\n\n\n\n\n\n\nEdit the following lines within the newly created file i.e. \nyourislesite.institution.com.yml\n and remove the comments (#) as asked\n\n\n\n\n\n\nPlease Note:\n \nThe \nfqdn\n in the \ninventory\n file should match this filename as well.\n\n\n\n\n\n\nExamples ONLY\n (\nDo not enter these literal values\n)  \n\n\n\n\n\n\nLine 9: \nansible_ssh_host: 192.168.1.16\n\n\n\n\nThis is the IP address of the ISLE Host server\n\n\n\n\n\n\n\n\nLine 10: \nansible_ssh_user: janesmith\n  \n\n\n\n\nThis is the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions.\n\n\n\n\n\n\n\n\nLine 15: \npub_locale: /home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nThis is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nAnsible commands to test connection\n\n\n\n\nTest if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:\n\n\n\n\ncd /path/to/ISLE/repo\n\nansible -i inventory isle-host-server -m ping\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n\n\n[WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =\n {\n     \nchanged\n: false,\n     \nping\n: \npong\n\n   }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\nAnsible commands for deploy\n\n\n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\nansible-playbook -i inventory docker_install.yml\n\n\n\n\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.\n\n\nQC Review checklist\n\n\nTo ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.\n\n\nOpen a terminal window on the Ansible control laptop /workstation and \nssh\n into the Islandora Host server using the appropriate enduser account setup prior to the deploy.\n\n\nExample\n:\n\n\nssh enduser@isle-prod-project.institution\n\n\n\n\nDocker\n\n\n\n\n\n\nTo check where Docker has been installed to, enter:  \n\n\nwhich docker\n    \n\n\nExample\n output:      \n\n\n/usr/bin/docker\n\n\n\n\n\n\nTo check which version of Docker has been installed, enter:\n\n\ndocker --version\n\n\nExample\n output:\n\n\nDocker version 17.12.0-ce, build c97c6d6\n\n\n\n\n\n\nTo check if Docker is running, enter:\n\n\nservice docker status\n   \n\n\nExample\n output:\n\n\n\n\n\n\nRedirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....\n\n\n\n\n\n\n\n\nTo check if the ISLE images have been downloaded on the ISLE Host server, enter:\n\n\ndocker image ls\n\n\nExample\n output:  \n\n\n\n\n\n\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   alpha2              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   alpha2              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     alpha2              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    alpha2              f34162f1e0f8        2 weeks ago         299MB\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nTo check where Docker-compose has been installed to, enter:  \n\n\nwhich docker-compose\n\n\nExample\n output:\n\n\n/usr/local/bin/docker-compose\n\n\n\n\n\n\nTo check which version of Docker-compose has been installed, enter:\n\n\ndocker-compose -version\n\n\nExample\n output:\n\n\ndocker-compose version 1.17.1, build 6d101fb\n\n\n\n\n\n\nIslandora user\n\n\n\n\n\n\nTo check if the \nislandora\n user has been created, enter:\n\n\ncat /etc/passwd\n  \n\n\nExample\n output:\n\n\nislandora:x:1002:1002::/home/islandora:/bin/bash\n\n\n\n\n\n\nISLE Project directory\n\n\n\n\n\n\nTo check if the ISLE project git repo has been cloned to \n/opt/ISLE\n, enter:\n\n\nls -lh /opt/ISLE\n\n\nExample\n output:\n\n\n\n\n\n\ntotal 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr\n\n\n\n\n\n\nPost Server Deploy or next steps\n\n\nOnce this script has finished one can:\n\n\n\n\n\n\nAdd any appropriate public ssh keys to \n/home/islandora/.ssh/authorized_keys\n prior to attempting to ssh to the Islandora Host server as the \nislandora\n user.\n\n\n\n\n\n\nAdd the \n/home/islandora/.ssh/id_rsa.pub\n key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)\n\n\n\n\n\n\nContinue next steps with the \n1.4. -Testing - Alpha Quickstart Guide\n\n\n\n\n\n\nContinue next steps with \n1.4. -Testing - Migration Guide", 
            "title": "1.4. -Testing - Host Server Build - Ansible"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansible-host-server-setup", 
            "text": "Endusers now have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named  ansible .  Ansible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration ( running tasks in sequence on several different servers or devices ).  If you are not familiar with the Ansible, it is recommended to start with their documentation.   Ansible website  What is Ansible?  Ansible Documentation", 
            "title": "Ansible Host Server Setup"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#prerequisites-assumptions", 
            "text": "Familiarity or knowledge of Ansible    Ansible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:   Ansible 2.2+  (choice of  install methods )  openssh  (2.2.x+)  git  (2.15.1+)  python  (2.7+)   The  ISLE project repository  cloned to an appropriate location.    A previously created ISLE Host Server running either of these operating systems:   Ubuntu 16.04 LTS / Debian Stretch   CentOS 7 / RHEL equivalent      An account with ssh access to the ISLE Host Server    An account with passwordless sudo access on the ISLE Host Server    The IP of the ISLE Host server", 
            "title": "Prerequisites / Assumptions"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansible-deploy-script-explanation", 
            "text": "Within the  docker_install.yml  Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.     Ansible Role  Action / Event      dependencies  Installs software dependencies   tools as described above    users_groups  Adds users, groups and updates permissions as described above    docker  Installs Docker    docker_compose  Installs Docker Compose    git_clone  Clones the current ISLE git repository to  /opt/ISLE    docker_images  Pulls down the latest ISLE Docker Images from Dockerhub.com", 
            "title": "Ansible Deploy Script Explanation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#installs-software-dependencies-tools-including", 
            "text": "The Ansible script will deploy the following to the ISLE Host server:     Ubuntu / Debian  CentOS / RHEL      software-properties-common  libselinux-python    python-software-properties  libsemanage-python    --  yum-utils    ntp  ntp    openssh-client  openssh-clients    rsync  rsync    curl  curl    wget  wget    git  git    zip  zip    unzip  unzip    vim  vim    nano  nano    emacs24-nox  emacs    htop  htop    apt-transport-https  --    ca-certificates  --", 
            "title": "Installs software dependencies &amp; tools including:"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#makes-isle-host-service-changes", 
            "text": "Please Note:   Any of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.     Ubuntu / Debian  CentOS / RHEL      enables ntp service  enables ntp service    disables ufw  disables iptables    --  sets selinux to permissive", 
            "title": "Makes ISLE Host service changes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#adds-users-groups-and-updates-permissions", 
            "text": "Creates the  islandora  user  Along with an appropriate password  generates a ssh key  bestows sudo password-less access   Gives the  islandora  user the ability to run Docker   Docker Compose by adding the account to the Docker group.      Disables  root  user access via ssh   Disables use of passwords with ssh.  key based access only to the ISLE Host server", 
            "title": "Adds users, groups and updates permissions"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#installs-additional-software", 
            "text": "Docker    Docker Compose    Git clones the ISLE repo to  /opt/ISLE    Pulls down the most recent ISLE images", 
            "title": "Installs additional software"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansible-script-directory-structure", 
            "text": "ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 debian_ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 rhel_centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml", 
            "title": "Ansible script directory structure"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#configure-ansible-script-to-deploy-to-isle-host", 
            "text": "To configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the  ansible  directory.   ansible/docker_install.yml  ansible/inventory  ansible/host_vars/isle-prod-project.institution.yml   Basically wherever  isle-prod-project.institution  appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name ( fqdn ) e.g.  yourislesite.institution.com  One can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.", 
            "title": "Configure Ansible Script to deploy to ISLE Host"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansibledocker_installyml", 
            "text": "This is the Ansible playbook necessary to deploy software to the ISLE host server.   At the top of the file remove  isle-prod-project.institution  and replace with the appropriate  fqdn .", 
            "title": "ansible/docker_install.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansibleinventoryyml", 
            "text": "This is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).  Please Note:  These instructions below are repeated within the file itself.    Line 7: remove  isle-prod-project.institution  from in between the brackets and replace with the appropriate  fqdn    Line 8: Add the appropriate ISLE Host server user account that has  sudo  passwordless permissions to the end of  ansible_ssh_user=  Example :  ansible_ssh_user=janesmith    Line 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of  ansible_ssh_private_key_file=    Example  of inventory using settings for local Ansible deploy laptop:    ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub  Please Note:  This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.   Final Example  end result for inventory file with all settings above   [yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub", 
            "title": "ansible/inventory.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansibleisle-prod-projectinstitutionyml", 
            "text": "Copy this file and rename the copy to with the appropriate  fqdn    Example  of how  host_vars  directory should now contain two files:      ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles    Edit the following lines within the newly created file i.e.  yourislesite.institution.com.yml  and remove the comments (#) as asked    Please Note:   The  fqdn  in the  inventory  file should match this filename as well.    Examples ONLY  ( Do not enter these literal values )      Line 9:  ansible_ssh_host: 192.168.1.16   This is the IP address of the ISLE Host server     Line 10:  ansible_ssh_user: janesmith      This is the appropriate ISLE Host server user account that has  sudo  passwordless permissions.     Line 15:  pub_locale: /home/janesmith/.ssh/id_rsa.pub   This is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.", 
            "title": "ansible/isle-prod-project.institution.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansible-commands-to-test-connection", 
            "text": "Test if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:   cd /path/to/ISLE/repo\n\nansible -i inventory isle-host-server -m ping   Example  output of above command ( IGNORE THE WARNING )   [WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =  {\n      changed : false,\n      ping :  pong \n   }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.", 
            "title": "Ansible commands to test connection"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#ansible-commands-for-deploy", 
            "text": "To deploy to the ISLE Host Server, run this command.  ansible-playbook -i inventory docker_install.yml    Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.", 
            "title": "Ansible commands for deploy"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#qc-review-checklist", 
            "text": "To ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.  Open a terminal window on the Ansible control laptop /workstation and  ssh  into the Islandora Host server using the appropriate enduser account setup prior to the deploy.  Example :  ssh enduser@isle-prod-project.institution", 
            "title": "QC Review checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#docker", 
            "text": "To check where Docker has been installed to, enter:    which docker       Example  output:        /usr/bin/docker    To check which version of Docker has been installed, enter:  docker --version  Example  output:  Docker version 17.12.0-ce, build c97c6d6    To check if Docker is running, enter:  service docker status      Example  output:    Redirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....    To check if the ISLE images have been downloaded on the ISLE Host server, enter:  docker image ls  Example  output:      REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   alpha2              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   alpha2              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     alpha2              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    alpha2              f34162f1e0f8        2 weeks ago         299MB", 
            "title": "Docker"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#docker-compose", 
            "text": "To check where Docker-compose has been installed to, enter:    which docker-compose  Example  output:  /usr/local/bin/docker-compose    To check which version of Docker-compose has been installed, enter:  docker-compose -version  Example  output:  docker-compose version 1.17.1, build 6d101fb", 
            "title": "Docker Compose"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#islandora-user", 
            "text": "To check if the  islandora  user has been created, enter:  cat /etc/passwd     Example  output:  islandora:x:1002:1002::/home/islandora:/bin/bash", 
            "title": "Islandora user"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#isle-project-directory", 
            "text": "To check if the ISLE project git repo has been cloned to  /opt/ISLE , enter:  ls -lh /opt/ISLE  Example  output:    total 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr", 
            "title": "ISLE Project directory"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_server_setup_ansible/#post-server-deploy-or-next-steps", 
            "text": "Once this script has finished one can:    Add any appropriate public ssh keys to  /home/islandora/.ssh/authorized_keys  prior to attempting to ssh to the Islandora Host server as the  islandora  user.    Add the  /home/islandora/.ssh/id_rsa.pub  key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)    Continue next steps with the  1.4. -Testing - Alpha Quickstart Guide    Continue next steps with  1.4. -Testing - Migration Guide", 
            "title": "Post Server Deploy or next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/", 
            "text": "Alpha Manual Build\n\n\nPlease note this an alternative method of building the Docker images and the slower of the two processes.\n\n\nPlease refer to the Alpha Quickstart \nGuide\n for the \nfaster\n version.\n\n\nAlpha Manual Build Pre-Requisites\n\n\n\n\n\n\nThe Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.\n\n\n\n\n\n\nHost Server setup for \nCentOS 7\n\n\n\n\n\n\nHost Server setup for \nUbuntu 16.04 LTS\n\n\n\n\n\n\nHost Server setup for \nMac OS\n\n\n\n\n\n\nBy default the \nDocker-Compose.yml\n file is configured for Linux Host Servers.\n\n\n\n\nIf one is using a \nMac OS\n Host server, then edit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n\n\n    # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php  \n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\nManual Build process (same for Ubuntu 16.04 or CentOS 7)\n\n\nPlease note:\n \nThe first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora \n apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.\n  \n\n\n\n\nDO NOT RUN\n \ndocker-compose up -d\n during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.\n\n\n\n\n1. MySQL image build \n container launch (10-15 mins)\n\n\n\n\ndocker-compose build mysql\n  \n\n\ndocker-compose up -d mysql\n  \n\n\n\n\n2. Fedora image build \n container launch (20 - 30 mins)\n\n\n\n\ndocker-compose build fedora\n  \n\n\ndocker-compose up -d fedora\n  \n\n\n\n\n3. Solr image build \n container launch (10 - 20 mins)\n\n\n\n\ndocker-compose build solr\n  \n\n\ndocker-compose up -d solr\n  \n\n\n\n\n4. Apache image build \n container launch (30 - 45 mins)\n\n\n\n\n\n\ndocker-compose build apache\n  \n\n\n\n\n\n\nEdit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n    - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    # - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\n\n\ndocker-compose up -d apache\n  \n\n\nPlease note:\n \nThis container on occasion has failed to start initially for as of yet unlogged and unknown reasons.\n\n\nOne can check if the container is running: \ndocker ps\n (shows only running containers)  \n\n\nOne can check if the container stopped running or \"exited\": \ndocker ps -a\n (shows all containers running or not)  \n\n\n\n\n\n\n\n\n\n\n\n\n5. Install script on Apache container (20 - 40 mins)\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache bash\n\n\ncd /tmp\n\n\nchmod 777 *.sh\n\n\n./make_site.sh\n\n\n./install_site.sh\n\n\n\n\n\n\n\n\nOnce finished \ncntrl-D\n or type \nexit\n to get out of the apache container \n QC the resulting setup\n\n\n\n\n\n\nPlease note:\n The cronjob setting in the \ninstall_site.sh\n script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.\n\n\nTotal build process takes 1.5 -2.5 hours (depending on system and internet speeds)\n\n\n\n\nFast Facts\n\n\nislandora\n user on host server uses \nisle2017\n as password\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\ndockerfeddb2017\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nislandora_user\n\n\nislandoradockerdb2017\n\n\nislandora_docker\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 11/2017\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\ndockerFEDadmin2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\ndockerfedoraIntCallUserpw2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\ndockerfgsAdminpw2017\n\n\nGsearch\n\n\nhttp://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://127.0.0.1:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://127.0.0.1:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://127.0.0.1:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache\n\n\nsee below\n\n\n80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nislandora_docker_admin\n\n\nislandoradockeradminpw2017\n\n\nDrupal site admin\n\n\nhttp://islandora-docker.com", 
            "title": "1.4. -Testing - Alpha Build Guide - Linux"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#alpha-manual-build", 
            "text": "Please note this an alternative method of building the Docker images and the slower of the two processes.  Please refer to the Alpha Quickstart  Guide  for the  faster  version.", 
            "title": "Alpha Manual Build"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#alpha-manual-build-pre-requisites", 
            "text": "The Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.    Host Server setup for  CentOS 7    Host Server setup for  Ubuntu 16.04 LTS    Host Server setup for  Mac OS    By default the  Docker-Compose.yml  file is configured for Linux Host Servers.   If one is using a  Mac OS  Host server, then edit the  docker-compose.yml  file to ensure the following lines look like this:            # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php  \n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php", 
            "title": "Alpha Manual Build Pre-Requisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#manual-build-process-same-for-ubuntu-1604-or-centos-7", 
            "text": "Please note:   The first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora   apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.      DO NOT RUN   docker-compose up -d  during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.", 
            "title": "Manual Build process (same for Ubuntu 16.04 or CentOS 7)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#1-mysql-image-build-container-launch-10-15-mins", 
            "text": "docker-compose build mysql     docker-compose up -d mysql", 
            "title": "1. MySQL image build &amp; container launch (10-15 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#2-fedora-image-build-container-launch-20-30-mins", 
            "text": "docker-compose build fedora     docker-compose up -d fedora", 
            "title": "2. Fedora image build &amp; container launch (20 - 30 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#3-solr-image-build-container-launch-10-20-mins", 
            "text": "docker-compose build solr     docker-compose up -d solr", 
            "title": "3. Solr image build &amp; container launch (10 - 20 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#4-apache-image-build-container-launch-30-45-mins", 
            "text": "docker-compose build apache       Edit the  docker-compose.yml  file to ensure the following lines look like this:           - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    # - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php     docker-compose up -d apache     Please note:   This container on occasion has failed to start initially for as of yet unlogged and unknown reasons.  One can check if the container is running:  docker ps  (shows only running containers)    One can check if the container stopped running or \"exited\":  docker ps -a  (shows all containers running or not)", 
            "title": "4. Apache image build &amp; container launch (30 - 45 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#5-install-script-on-apache-container-20-40-mins", 
            "text": "Run the following shell scripts manually on the apache container     docker exec -it isle-apache bash  cd /tmp  chmod 777 *.sh  ./make_site.sh  ./install_site.sh     Once finished  cntrl-D  or type  exit  to get out of the apache container   QC the resulting setup    Please note:  The cronjob setting in the  install_site.sh  script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.", 
            "title": "5. Install script on Apache container (20 - 40 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#total-build-process-takes-15-25-hours-depending-on-system-and-internet-speeds", 
            "text": "", 
            "title": "Total build process takes 1.5 -2.5 hours (depending on system and internet speeds)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#fast-facts", 
            "text": "islandora  user on host server uses  isle2017  as password", 
            "title": "Fast Facts"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql  MySQL 5.6  3306        Account  Password  Database  Perms      root  islemysqlrootpw2017  ALL  ALL    fedora_admin  dockerfeddb2017  fedora3  All  except  Grant  option    islandora_user  islandoradockerdb2017  islandora_docker  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 11/2017    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  dockerFEDadmin2017  Fedora  http://127.0.0.1:8080/fedora/describe    fedoraIntCallUser  dockerfedoraIntCallUserpw2017  Fedora  http://127.0.0.1:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  dockerfgsAdminpw2017  Gsearch  http://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex    admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8080/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8080/manager/html    --  --  Djatoka  http://127.0.0.1:8080/adore-djatoka/    --  --  Apache  http://127.0.0.1:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8091/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8091/manager/html    --  --  Solr  http://127.0.0.1:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_linux/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache  see below  80        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      islandora_docker_admin  islandoradockeradminpw2017  Drupal site admin  http://islandora-docker.com", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/", 
            "text": "Alpha Manual Build - MacOS\n\n\nPlease note this an alternative method of building the Docker images and the slower of the two processes.\n\n\nPlease refer to the Alpha Quickstart \nGuide\n for the \nfaster\n version.\n\n\nAlpha Manual Build Pre-Requisites\n\n\n\n\n\n\nThe Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.\n\n\n\n\n\n\nHost Server setup for \nCentOS 7\n\n\n\n\n\n\nHost Server setup for \nUbuntu 16.04 LTS\n\n\n\n\n\n\nHost Server setup for \nMac OS\n\n\n\n\n\n\n\n\n\n\nBy default the \nDocker-Compose.yml\n file is configured for Linux Host Servers.\n\n\n\n\nIf one is using a \nMac OS\n Host server, then edit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n\n\n    # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\n\n\nAlpha Manual Build MacOS\n\n\nPlease note:\n \nThe first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora \n apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.\n  \n\n\n\n\nDO NOT RUN\n \ndocker-compose up -d\n during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.\n\n\n\n\n1. MySQL image build \n container launch (10-15 mins)\n\n\n\n\ndocker-compose build mysql\n  \n\n\ndocker-compose up -d mysql\n  \n\n\n\n\n2. Fedora image build \n container launch (30 - 45 mins)\n\n\n\n\ndocker-compose build fedora\n  \n\n\ndocker-compose up -d fedora\n  \n\n\n\n\n3. Solr image build \n container launch (20 - 40 mins)\n\n\n\n\ndocker-compose build solr\n  \n\n\ndocker-compose up -d solr\n  \n\n\n\n\n4. Apache image build \n container launch (45 - 60 mins)\n\n\n\n\n\n\ndocker-compose build apache\n\n\n\n\n\n\nEdit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n    # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\n\n\ndocker-compose up -d apache\n  \n\n\nPlease note:\n \nThis container on occasion has failed to start initially for as of yet unlogged and unknown reasons.\n\n\nOne can check if the container is running: \ndocker ps\n (shows only running containers)  \n\n\nOne can check if the container stopped running or \"exited\": \ndocker ps -a\n (shows all containers running or not)  \n\n\n\n\n\n\n\n\n\n\n\n\n5. Install script on Apache container (45 - 60 mins)\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache bash\n\n\ncd /tmp\n\n\nchmod 777 *.sh\n\n\n./make_site.sh\n\n\n./install_site.sh\n\n\n\n\n\n\n\n\nOnce finished \ncntrl-D\n or type \nexit\n to get out of the apache container \n QC the resulting setup\n\n\n\n\n\n\nPlease note:\n The cronjob setting in the \ninstall_site.sh\n script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.\n\n\nTotal build process takes 2.5 - 4 hours (depending on system and internet speeds)\n\n\n\n\nFast Facts\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\ndockerfeddb2017\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nislandora_user\n\n\nislandoradockerdb2017\n\n\nislandora_docker\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 11/2017\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\ndockerFEDadmin2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\ndockerfedoraIntCallUserpw2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\ndockerfgsAdminpw2017\n\n\nGsearch\n\n\nhttp://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://127.0.0.1:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://127.0.0.1:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://127.0.0.1:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache\n\n\nsee below\n\n\n80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nislandora_docker_admin\n\n\nislandoradockeradminpw2017\n\n\nDrupal site admin\n\n\nhttp://islandora-docker.com", 
            "title": "1.4. -Testing - Alpha Build Guide - Mac OSX"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#alpha-manual-build-macos", 
            "text": "Please note this an alternative method of building the Docker images and the slower of the two processes.  Please refer to the Alpha Quickstart  Guide  for the  faster  version.", 
            "title": "Alpha Manual Build - MacOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#alpha-manual-build-pre-requisites", 
            "text": "The Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.    Host Server setup for  CentOS 7    Host Server setup for  Ubuntu 16.04 LTS    Host Server setup for  Mac OS      By default the  Docker-Compose.yml  file is configured for Linux Host Servers.   If one is using a  Mac OS  Host server, then edit the  docker-compose.yml  file to ensure the following lines look like this:            # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php", 
            "title": "Alpha Manual Build Pre-Requisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#alpha-manual-build-macos_1", 
            "text": "Please note:   The first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora   apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.      DO NOT RUN   docker-compose up -d  during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.", 
            "title": "Alpha Manual Build MacOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#1-mysql-image-build-container-launch-10-15-mins", 
            "text": "docker-compose build mysql     docker-compose up -d mysql", 
            "title": "1. MySQL image build &amp; container launch (10-15 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#2-fedora-image-build-container-launch-30-45-mins", 
            "text": "docker-compose build fedora     docker-compose up -d fedora", 
            "title": "2. Fedora image build &amp; container launch (30 - 45 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#3-solr-image-build-container-launch-20-40-mins", 
            "text": "docker-compose build solr     docker-compose up -d solr", 
            "title": "3. Solr image build &amp; container launch (20 - 40 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#4-apache-image-build-container-launch-45-60-mins", 
            "text": "docker-compose build apache    Edit the  docker-compose.yml  file to ensure the following lines look like this:           # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php     docker-compose up -d apache     Please note:   This container on occasion has failed to start initially for as of yet unlogged and unknown reasons.  One can check if the container is running:  docker ps  (shows only running containers)    One can check if the container stopped running or \"exited\":  docker ps -a  (shows all containers running or not)", 
            "title": "4. Apache image build &amp; container launch (45 - 60 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#5-install-script-on-apache-container-45-60-mins", 
            "text": "Run the following shell scripts manually on the apache container     docker exec -it isle-apache bash  cd /tmp  chmod 777 *.sh  ./make_site.sh  ./install_site.sh     Once finished  cntrl-D  or type  exit  to get out of the apache container   QC the resulting setup    Please note:  The cronjob setting in the  install_site.sh  script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.", 
            "title": "5. Install script on Apache container (45 - 60 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#total-build-process-takes-25-4-hours-depending-on-system-and-internet-speeds", 
            "text": "", 
            "title": "Total build process takes 2.5 - 4 hours (depending on system and internet speeds)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#fast-facts", 
            "text": "", 
            "title": "Fast Facts"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql  MySQL 5.6  3306        Account  Password  Database  Perms      root  islemysqlrootpw2017  ALL  ALL    fedora_admin  dockerfeddb2017  fedora3  All  except  Grant  option    islandora_user  islandoradockerdb2017  islandora_docker  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 11/2017    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  dockerFEDadmin2017  Fedora  http://127.0.0.1:8080/fedora/describe    fedoraIntCallUser  dockerfedoraIntCallUserpw2017  Fedora  http://127.0.0.1:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  dockerfgsAdminpw2017  Gsearch  http://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex    admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8080/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8080/manager/html    --  --  Djatoka  http://127.0.0.1:8080/adore-djatoka/    --  --  Apache  http://127.0.0.1:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8091/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8091/manager/html    --  --  Solr  http://127.0.0.1:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide_mac/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache  see below  80        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      islandora_docker_admin  islandoradockeradminpw2017  Drupal site admin  http://islandora-docker.com", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/sampledata/", 
            "text": "", 
            "title": "1.4 - Testing - \"Sample Data\""
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/travis-ci/", 
            "text": "", 
            "title": "1.4 - Testing - Travis CI"
        }, 
        {
            "location": "/1_system_process_overview/alphas/", 
            "text": "Following is a preliminary list of institutions who have volunteered for the Alpha testing phase:\n\n\nManaged by Born-Digital\n\n\n\n\nWilliams\n\n\nRPI\n\n\nGrinnell\n\n\n\n\nCommunity Alphas\n\n\n\n\nHamilton\n\n\nU. of Pittsburgh\n\n\n?", 
            "title": "1.5 - Alphas"
        }, 
        {
            "location": "/1_system_process_overview/alphas/#managed-by-born-digital", 
            "text": "Williams  RPI  Grinnell", 
            "title": "Managed by Born-Digital"
        }, 
        {
            "location": "/1_system_process_overview/alphas/#community-alphas", 
            "text": "Hamilton  U. of Pittsburgh  ?", 
            "title": "Community Alphas"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-basic/", 
            "text": "", 
            "title": "2.1 - Basic Host Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/host-storage-requirements/", 
            "text": "", 
            "title": "2.1 - Storage Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-laptops/", 
            "text": "", 
            "title": "2.1 - Local Laptop Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-cloud/", 
            "text": "", 
            "title": "2.1 - Cloud (AWS) Hosting Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-onsite/", 
            "text": "", 
            "title": "2.1 - Onsite - Institutional datacenter Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-multi-environments/", 
            "text": "", 
            "title": "2.1 - Multi-Environment Requirements"
        }, 
        {
            "location": "/2_enduser_guide/usage-guide/", 
            "text": "", 
            "title": "2.2 - Overview"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-install-ansible/", 
            "text": "", 
            "title": "2.2 - Ansible Installation"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-isle-playbooks/", 
            "text": "", 
            "title": "2.2 - Ansible Playbooks"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-usage/", 
            "text": "", 
            "title": "2.2 - Ansible Usage"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-quick-start/", 
            "text": "[STUB]\n\n\n\n\n\n\nDeploy Host Server (Linux, Cloud etc)\n\n\n\n\n\n\nDeploy Docker and Docker Compose", 
            "title": "2.2 - Ansible Quick Start Guide"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-quick-start/#stub", 
            "text": "Deploy Host Server (Linux, Cloud etc)    Deploy Docker and Docker Compose", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-laptop-setup/", 
            "text": "", 
            "title": "2.2 - Laptop Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-cloud-setup/", 
            "text": "", 
            "title": "2.2 - Cloud (AWS) Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-onsite-setup/", 
            "text": "", 
            "title": "2.2 - Onsite - Institutional datacenter setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-multi-environments-setup/", 
            "text": "", 
            "title": "2.2 - Multi-Environment setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-security/", 
            "text": "[STUB]\n\n\n\n\nHow to configure fail2ban\n\n\nProcesses ports etc", 
            "title": "2.2 - Basic Security"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-security/#stub", 
            "text": "How to configure fail2ban  Processes ports etc", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-coms-ports/", 
            "text": "", 
            "title": "2.2 - Communication and Ports"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/host-environmental-vars/", 
            "text": "", 
            "title": "2.2 - Host Environmental Variables"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-firewall/", 
            "text": "[STUB]\n\n\n\n\nHow to configure csf / iptables", 
            "title": "2.2 - Basic Firewall Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-firewall/#stub", 
            "text": "How to configure csf / iptables", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-hosts-packages/", 
            "text": "", 
            "title": "2.2 - Packages"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/", 
            "text": "Docker image commands\n\n\nHow to list Docker images\n\n\nTo list Docker images: \ndocker image ls\n\n\nHow to remove Docker images\n\n\nTo remove a Docker container: \ndocker image rm -f \nimage name\n\n\n\n\nDocker container commands\n\n\nHow to list Docker containers\n\n\nTo check if containers are running in Docker:\n\n\n\n\nOpen up a command line terminal on the host machine and enter: \ndocker ps -a\n\n\n\n\nOutput should display like:\n\n\nExample:\n  \n\n\n(use screenshot?)\n\n\nHow to start or stop Docker containers using Docker-Compose\n\n\nTo execute the next two commands, you'll need to \ncd\n into the root of project directory where the \ndocker-compose.yml\n file is within a command line terminal.\n\n\n\n\n\n\nTo stop all containers at once: \ndocker-compose stop\n\n\n\n\n\n\nTo start all containers at once: (once built) \ndocker-compose up\n\n\n\n\n\n\n\n\nHow to access running Docker containers\n\n\nTo shell into a container properly without shutting it down:\n\n\nExample:\n\n\ndocker exec -it isle-apache bash\n\n\nIn some cases, one may need to use \nCntrl-D\n to exit the container without shutting it down.\n\n\n\n\nHow to remove Docker containers\n\n\nTo remove a Docker container: \ndocker rm -f \ncontainer name", 
            "title": "2.3 - Docker Commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#docker-image-commands", 
            "text": "", 
            "title": "Docker image commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-list-docker-images", 
            "text": "To list Docker images:  docker image ls", 
            "title": "How to list Docker images"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-remove-docker-images", 
            "text": "To remove a Docker container:  docker image rm -f  image name", 
            "title": "How to remove Docker images"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#docker-container-commands", 
            "text": "", 
            "title": "Docker container commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-list-docker-containers", 
            "text": "To check if containers are running in Docker:   Open up a command line terminal on the host machine and enter:  docker ps -a   Output should display like:  Example:     (use screenshot?)", 
            "title": "How to list Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-start-or-stop-docker-containers-using-docker-compose", 
            "text": "To execute the next two commands, you'll need to  cd  into the root of project directory where the  docker-compose.yml  file is within a command line terminal.    To stop all containers at once:  docker-compose stop    To start all containers at once: (once built)  docker-compose up", 
            "title": "How to start or stop Docker containers using Docker-Compose"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-access-running-docker-containers", 
            "text": "To shell into a container properly without shutting it down:  Example:  docker exec -it isle-apache bash  In some cases, one may need to use  Cntrl-D  to exit the container without shutting it down.", 
            "title": "How to access running Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-remove-docker-containers", 
            "text": "To remove a Docker container:  docker rm -f  container name", 
            "title": "How to remove Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-compose-commands/", 
            "text": "", 
            "title": "2.3 - Docker Compose Commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-inventory/", 
            "text": "[STUB] Container Inventory\n\n\n\n\ninclude environmental variables specific to containers\n\n\n\n\ninclude accounts and passwords specific to containers.\n\n\n\n\n\n\nMySQL\n\n    a. has the Drupal site (tbd name) database\n\n    b. has the fedora3 database  \n\n\n\n\nApache\n\n    a. capable of running multi-sites  \n\n\nFedora\n\n    a. single repository\n\n    b. has Djatoka dependency\n\n    c. Runs Tomcat service  \n\n\nGsearch\n\n    a. Discovery Garden \"patched version\"\n\n    b. Runs Tomcat service\n\n    c. Uses Discovery Garden Islandora Transforms (XSLTs)\n\n    d. Uses Discovery Garden Search Extensions  \n\n\nSolr\n\n    a. Uses Discovery Garden basic-solr-config\n\n    b. Runs Tomcat service  \n\n\nCertbot\n\n    a. Runs Let's Encrypt", 
            "title": "2.3 - Container Inventory"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-inventory/#stub-container-inventory", 
            "text": "include environmental variables specific to containers   include accounts and passwords specific to containers.    MySQL \n    a. has the Drupal site (tbd name) database \n    b. has the fedora3 database     Apache \n    a. capable of running multi-sites    Fedora \n    a. single repository \n    b. has Djatoka dependency \n    c. Runs Tomcat service    Gsearch \n    a. Discovery Garden \"patched version\" \n    b. Runs Tomcat service \n    c. Uses Discovery Garden Islandora Transforms (XSLTs) \n    d. Uses Discovery Garden Search Extensions    Solr \n    a. Uses Discovery Garden basic-solr-config \n    b. Runs Tomcat service    Certbot \n    a. Runs Let's Encrypt", 
            "title": "[STUB] Container Inventory"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-apache/", 
            "text": "", 
            "title": "2.3 - Container - Apache"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/", 
            "text": "The MySQL container will be using the following versions:\n\n\n\n\nLatest (5.6) - Dockerhub\n\n\n\n\nLatest (5.6) - Github Repository\n\n\n\n\n\n\nLegacy (5.5) - Dockerhub\n\n\n\n\nLegacy (5.5) - Github Repository\n\n\n\n\n\n\nDocker Compose service description\n\n\nThis container will only create an empty MySQL \nfedora3\n database (upon launch) using the Docker \nenvironment\n setting (displayed above). The Drupal site and/or multi-site databases will need to be created post launch.\n\n\n Please note: This container must be created and launched first, prior to all other containers.\n\n\nWithin the docker-compose.yml file, found at the root of the ISLE project Github repository, this container is described / controlled as follows:\n\n\n\n\nmysql:\n  build: ./mysql\n  image: isle-mysql:latest\n  environment:\n    - MYSQL_ROOT_PASSWORD=islemysqlrootpw2017\n    - MYSQL_DATABASE=fedora3\n    - MYSQL_USER=fedora_admin\n    - MYSQL_PASSWORD=islefeddb2017\n  ports:\n    - \"3306:3306\"\n  volumes:\n    - ./data/mysql:/var/lib/mysql\n    - ./mysql/initscripts:/docker-entrypoint-initdb.d\n  container_name: isle-mysql\n\n\n\n\nMethod 1: Docker Compose commands for standard use of pulling Dockerhub image and running containers via Docker Compose\n\n\nMethod 2: Docker Compose commands for building image and running containers manually\n\n\n\n\nTo build only this container (no others): \ndocker-compose build mysql\n  \n\n\nTo create only this container (no others): \ndocker-compose create mysql\n\n\nTo start only this container (no others): \ndocker-compose up -d mysql\n  \n\n\n\n\nImage Name\n\n\n\n\nLatest \nmysql:5.6\n\n\nhttps://hub.docker.com/r/islandoracollabgroup/isle-mysql/\n\n\n\n\nContainer name(s)\n\n\nisle-mysql\n\n\nDatabases\n\n\n\n\nfedora3\n Fedora database created by build process (empty)\n\n\nislandora_docker\n Drupal site database created by build process (empty, default)\n\n\n\n\nPer the guidelines of the official MySQl Docker image \nREADME\n, section \nInitializing a fresh instance\n:\n\n\n\n\n\"When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d. Files will be executed in alphabetical order. You can easily populate your mysql services by mounting a SQL dump into that directory and provide custom images with contributed data. SQL files will be imported by default to the database specified by the MYSQL_DATABASE variable.\"\n\"\n\n\n\n\nBy default, the \ndocker-compose.yml\n script creates the \nfedora3\n database by setting environmental variables in the \nenvironment\n section of the \nmysql\n service.\n\n\nThe second database \nislandora_docker\n is created when the mount process \n./mysql/initscripts:/docker-entrypoint-initdb.d\n occurs upon container launch.\n\n\nWithin this project directory, there is a directory \ninitscripts\n which contains a SQL script \nsiteinit.sql\n\n\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 apache\n\u251c\u2500\u2500 customize\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 fedora\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Dockerfile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 initscripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 siteinit.sql\n\u251c\u2500\u2500 site\n\u2514\u2500\u2500 solr\n\n\n\n\nThe default contents of this script are:\n\n\nExample\n\n\nCREATE DATABASE isle_site CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n\nCREATE USER islandora_user@'127.0.0.1' IDENTIFIED BY 'islandoraisledb2017';\n\n\nGRANT SELECT, INSERT, UPDATE ON islandora_docker.* TO 'islandora_user'@'127.0.0.1'\";\n  \n\n\nThis script can be modified to create more databases upon container launch.\n\n\n\n\n\n\n\n\n\n\nUser\n\n\nPassword\n\n\nDatabase\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nhas access to all databases with all privileges\n\n\n\n\n\n\nfedora_admin\n\n\nislefeddb2017\n\n\nfedora3\n\n\nhas access to only the \nfedora3\n Fedora database. No grant privileges.\n\n\n\n\n\n\nislandora_user\n\n\nislandoraisledb2017\n\n\nislandora_docker\n\n\nhas access to only the \nislandora_docker\n Drupal site database. No grant privileges.\n\n\n\n\n\n\n\n\nPorts\n\n\nPort 3306 on the MySQL container is mapped to 3306 on Host\n\n\nVolumes\n\n\n\n\n./data/mysql:/var/lib/mysql\n\n\n\n\nThis volume is created to allow MySQL databases to persist. All MySQL data is stored here. The container can be turned off, destroyed or upgraded and this data will remain.\n\n\n\n\n./mysql/initscripts:/docker-entrypoint-initdb.d\n\n\n\n\nThis volume is created to allow for the creation of additional databases beyond the initial \nfedora3\n creation. A default empty Drupal site database is also supplied using a SQL script file called \nsiteinit.sql\n found within the \ninitscripts\n directory. By mounting this directory directly into the container's \ndocker-entrypoint-initdb.d\n directory, the MySQL service is able to run the SQL script automatically upon container launch.", 
            "title": "2.3 - Container - MySQL"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#docker-compose-service-description", 
            "text": "This container will only create an empty MySQL  fedora3  database (upon launch) using the Docker  environment  setting (displayed above). The Drupal site and/or multi-site databases will need to be created post launch.   Please note: This container must be created and launched first, prior to all other containers.  Within the docker-compose.yml file, found at the root of the ISLE project Github repository, this container is described / controlled as follows:   mysql:\n  build: ./mysql\n  image: isle-mysql:latest\n  environment:\n    - MYSQL_ROOT_PASSWORD=islemysqlrootpw2017\n    - MYSQL_DATABASE=fedora3\n    - MYSQL_USER=fedora_admin\n    - MYSQL_PASSWORD=islefeddb2017\n  ports:\n    - \"3306:3306\"\n  volumes:\n    - ./data/mysql:/var/lib/mysql\n    - ./mysql/initscripts:/docker-entrypoint-initdb.d\n  container_name: isle-mysql", 
            "title": "Docker Compose service description"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#method-1-docker-compose-commands-for-standard-use-of-pulling-dockerhub-image-and-running-containers-via-docker-compose", 
            "text": "", 
            "title": "Method 1: Docker Compose commands for standard use of pulling Dockerhub image and running containers via Docker Compose"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#method-2-docker-compose-commands-for-building-image-and-running-containers-manually", 
            "text": "To build only this container (no others):  docker-compose build mysql     To create only this container (no others):  docker-compose create mysql  To start only this container (no others):  docker-compose up -d mysql", 
            "title": "Method 2: Docker Compose commands for building image and running containers manually"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#image-name", 
            "text": "Latest  mysql:5.6  https://hub.docker.com/r/islandoracollabgroup/isle-mysql/", 
            "title": "Image Name"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#container-names", 
            "text": "isle-mysql", 
            "title": "Container name(s)"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#databases", 
            "text": "fedora3  Fedora database created by build process (empty)  islandora_docker  Drupal site database created by build process (empty, default)   Per the guidelines of the official MySQl Docker image  README , section  Initializing a fresh instance :   \"When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d. Files will be executed in alphabetical order. You can easily populate your mysql services by mounting a SQL dump into that directory and provide custom images with contributed data. SQL files will be imported by default to the database specified by the MYSQL_DATABASE variable.\" \"   By default, the  docker-compose.yml  script creates the  fedora3  database by setting environmental variables in the  environment  section of the  mysql  service.  The second database  islandora_docker  is created when the mount process  ./mysql/initscripts:/docker-entrypoint-initdb.d  occurs upon container launch.  Within this project directory, there is a directory  initscripts  which contains a SQL script  siteinit.sql  \u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 apache\n\u251c\u2500\u2500 customize\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 fedora\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Dockerfile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 initscripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 siteinit.sql\n\u251c\u2500\u2500 site\n\u2514\u2500\u2500 solr  The default contents of this script are:  Example  CREATE DATABASE isle_site CHARACTER SET utf8 COLLATE utf8_general_ci;  CREATE USER islandora_user@'127.0.0.1' IDENTIFIED BY 'islandoraisledb2017';  GRANT SELECT, INSERT, UPDATE ON islandora_docker.* TO 'islandora_user'@'127.0.0.1'\";     This script can be modified to create more databases upon container launch.      User  Password  Database  Description      root  islemysqlrootpw2017  ALL  has access to all databases with all privileges    fedora_admin  islefeddb2017  fedora3  has access to only the  fedora3  Fedora database. No grant privileges.    islandora_user  islandoraisledb2017  islandora_docker  has access to only the  islandora_docker  Drupal site database. No grant privileges.", 
            "title": "Databases"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#ports", 
            "text": "Port 3306 on the MySQL container is mapped to 3306 on Host", 
            "title": "Ports"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#volumes", 
            "text": "./data/mysql:/var/lib/mysql   This volume is created to allow MySQL databases to persist. All MySQL data is stored here. The container can be turned off, destroyed or upgraded and this data will remain.   ./mysql/initscripts:/docker-entrypoint-initdb.d   This volume is created to allow for the creation of additional databases beyond the initial  fedora3  creation. A default empty Drupal site database is also supplied using a SQL script file called  siteinit.sql  found within the  initscripts  directory. By mounting this directory directly into the container's  docker-entrypoint-initdb.d  directory, the MySQL service is able to run the SQL script automatically upon container launch.", 
            "title": "Volumes"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-fedora/", 
            "text": "", 
            "title": "2.3 - Container - Fedora"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-gsearch/", 
            "text": "", 
            "title": "2.3 - Container - Gsearch"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-solr/", 
            "text": "", 
            "title": "2.3 - Container - Solr"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-certbot/", 
            "text": "", 
            "title": "2.3 - Container - Certbot"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-points/", 
            "text": "", 
            "title": "2.4 - ISLE Customization Overview"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-accounts/", 
            "text": "", 
            "title": "2.4 - Default accounts and passwords"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-directories/", 
            "text": "", 
            "title": "2.4 - Directories"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-yaml-files/", 
            "text": "", 
            "title": "2.4 - YAML files"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-drupal-applications/", 
            "text": "", 
            "title": "2.4 - Drupal Application"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-xacml-policies/", 
            "text": "", 
            "title": "2.4 - XACML policies"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-xslts/", 
            "text": "", 
            "title": "2.4 - XSLTs"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-drupal-modules/", 
            "text": "", 
            "title": "2.4 - Drupal Modules"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-compile-processes/", 
            "text": "", 
            "title": "2.4 - Compile Processes"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-repositories/", 
            "text": "", 
            "title": "2.4 - Repositories"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-config-tools/", 
            "text": "", 
            "title": "2.4 - Configuration tools and commands"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-logs/", 
            "text": "", 
            "title": "2.4 - Logs - How to configure logs"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-apache-manual/", 
            "text": "", 
            "title": "2.4 - SSL - Apache - How to manually configure SSL certificates"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-apache-certbot/", 
            "text": "", 
            "title": "2.4 - SSL - Apache - How to configure SSL certificates using Certbot and Lets Encrypt"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-tomcat-manual/", 
            "text": "", 
            "title": "2.4 - SSL - Tomcat - How to manually configure SSL certificates"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-tomcat-certbot/", 
            "text": "", 
            "title": "2.4 - SSL - Tomcat - How to configure SSL certificates using Certbot and Lets Encrypt"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-pre-existing/", 
            "text": "", 
            "title": "2.4 - How to migrate Customized settings, configurations and data from pre-existing sytems"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-download-files/", 
            "text": "", 
            "title": "2.4 - Configuration files overview"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-apache-files/", 
            "text": "", 
            "title": "2.4 - Apache"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-djatoka-files/", 
            "text": "", 
            "title": "2.4 - Djatoka"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-fedora-files/", 
            "text": "", 
            "title": "2.4 - Fedora"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-gsearch-files/", 
            "text": "", 
            "title": "2.4 - Gsearch"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-logrotate-files/", 
            "text": "", 
            "title": "2.4 - Logrotate"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-mysql-files/", 
            "text": "", 
            "title": "2.4 - MySQL"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-php-files/", 
            "text": "", 
            "title": "2.4 - PHP"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-solr-files/", 
            "text": "", 
            "title": "2.4 - Solr"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-topmcat-files/", 
            "text": "", 
            "title": "2.4 - Tomcat"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-security/", 
            "text": "", 
            "title": "2.4 - Security modifications"
        }, 
        {
            "location": "/2_enduser_guide/2_5_container_selection/container-selection/", 
            "text": "", 
            "title": "2.5 - ISLE Container Selection + Docker Compose Usage"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/mountpoints/", 
            "text": "", 
            "title": "2.6 - Mount Points"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/pre-existing-datastores/", 
            "text": "", 
            "title": "2.6 - How to attach pre-existing datastores to new containers"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/config-paths/", 
            "text": "", 
            "title": "2.6 - Configuration files paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-logs/", 
            "text": "", 
            "title": "2.6 - Log files paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-indicies/", 
            "text": "", 
            "title": "2.6 - Indices paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-databases/", 
            "text": "", 
            "title": "2.6 - Databases paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-triplestores/", 
            "text": "", 
            "title": "2.6 - Triplestores paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/data-migration/", 
            "text": "", 
            "title": "2.6 - How to migrate data from existing systems"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/migration-tools-scripts/", 
            "text": "", 
            "title": "2.6 - Migration Tools and scripts"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/upgrations/", 
            "text": "", 
            "title": "2.6 - Upgrations"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-sandbox/", 
            "text": "", 
            "title": "2.7 - Sandbox"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-staging/", 
            "text": "", 
            "title": "2.7 - Staging"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-production/", 
            "text": "", 
            "title": "2.7 - Production"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-workflow/", 
            "text": "", 
            "title": "2.7 - Workflow process across environments"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-git-structure/", 
            "text": "", 
            "title": "2.7 - Recommended Git structure"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-data-replications/", 
            "text": "", 
            "title": "2.7 - Data Replications and Movement"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-container-movement/", 
            "text": "", 
            "title": "2.7 - Container Movement"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/", 
            "text": "How to edit ISLE Documentation\n\n\nThanks in advance for contributions to the ISLE Documentation.\n\n\nThe Islandora Community, the ISLE Team and its stakeholders greatly appreciates all contributor's time and efforts in creating, editing, revising and growing this collected documentation.\n\n\nThe ISLE Team asks that all potential contributors please familiarize themselves with the \nDocumentation and Style Guide\n and its requirements \nPRIOR\n to committing documentation changes.\n\n\nThere are two different ways one can edit or create documentation for the ISLE project.\n\n\nPlease note:\n One will need to have signed up for a Github.com account \nhere\n prior to attempting either of these two methods.\n\n\nMethod 1: Edit page on Github.com\n\n\n\n\nOpen a web browser and navigate to the ISLE project \nrepository\n on Github.com\n\n\nClick on the \ndocs\n directory\n\n\nNavigate to and click on the desired \n.md\n file (documentation page) for editing\n\n\nLocate and click on the \npencil\n icon on the right hand side of the page. (To the right of Raw | Blame | History etc)\n\n\nThe page should now be ready for editing and the \nEdit file\n tab should display at the top. Make changes as needed.\n\n\nTo save changes for review by the ISLE project team, simply scroll down to the bottom of the page to the \nCommit Changes\n section.\n\n\nWithin the first empty field, enter a comment like \nEdited filename.md with changes to ...\n (The key is one sentence with a very minimal description)\n\n\nWithin the second empty field, if needed enter a more verbose list of comments with changes.\n\n\nClick the second radio button \nCreate a new branch for this commit and start a pull request.\n \nDO NOT CLICK THE 1ST BUTTON PLEASE!\n\n\nUpon clicking the second radio button, there should be a new field created with an entry e.g. \ngithubusername-patch-1\n\n\nClick the green \nPropose file change\n button\n\n\nA new page opens with the title \nOpen a pull request\n. The previous information from the new branch process should now populate the new fields\n\n\nClick the green \nCreate pull request\n and now the documentation changes have been submitted for review.\n\n\nAssigned ISLE  project members will review, approve or comment on the pull request as time allows.\n\n\n\n\n\n\nMethod 2: Edit page via local Mkdocs workflow\n\n\n\n\nPlease follow the \nDocumentation Requirements\n page to install Mkdocs and the appropriate \nmaterial\n theme\n\n\nOpen up a terminal and navigate to the ISLE project directory e.g. \ncd ~/ISLE\n\n\nTo start Mkdocs: \nmkdocs serve\n\n\nOne can view the static pages by opening a browser and navigating to \nhttp://127.0.0.1:8000\n\n\nCheckout a new branch in git e.g. \ngit checkout -b new_branch\n\n\nEdit the appropriate Markdown (.md) file within the \ndocs\n directory and save the edited file. Changes are almost immediate, the page should refresh. Should errors occur and the page does not display check the terminal output for issues.\n\n\nOnce ready to push changes to the ISLE repository:  \ngit add edited-documentation-page.md\n  \n\n\ngit commit -m \"Your description of changes, why and affected files if possible\"\n  \n\n\ngit push origin new_branch\n  \n\n\nManually create a pull request on the Github page for the ISLE \nrepository\n  \n\n\nAssigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "3.1 - Contributing to Docs"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#how-to-edit-isle-documentation", 
            "text": "Thanks in advance for contributions to the ISLE Documentation.  The Islandora Community, the ISLE Team and its stakeholders greatly appreciates all contributor's time and efforts in creating, editing, revising and growing this collected documentation.  The ISLE Team asks that all potential contributors please familiarize themselves with the  Documentation and Style Guide  and its requirements  PRIOR  to committing documentation changes.  There are two different ways one can edit or create documentation for the ISLE project.  Please note:  One will need to have signed up for a Github.com account  here  prior to attempting either of these two methods.", 
            "title": "How to edit ISLE Documentation"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#method-1-edit-page-on-githubcom", 
            "text": "Open a web browser and navigate to the ISLE project  repository  on Github.com  Click on the  docs  directory  Navigate to and click on the desired  .md  file (documentation page) for editing  Locate and click on the  pencil  icon on the right hand side of the page. (To the right of Raw | Blame | History etc)  The page should now be ready for editing and the  Edit file  tab should display at the top. Make changes as needed.  To save changes for review by the ISLE project team, simply scroll down to the bottom of the page to the  Commit Changes  section.  Within the first empty field, enter a comment like  Edited filename.md with changes to ...  (The key is one sentence with a very minimal description)  Within the second empty field, if needed enter a more verbose list of comments with changes.  Click the second radio button  Create a new branch for this commit and start a pull request.   DO NOT CLICK THE 1ST BUTTON PLEASE!  Upon clicking the second radio button, there should be a new field created with an entry e.g.  githubusername-patch-1  Click the green  Propose file change  button  A new page opens with the title  Open a pull request . The previous information from the new branch process should now populate the new fields  Click the green  Create pull request  and now the documentation changes have been submitted for review.  Assigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "Method 1: Edit page on Github.com"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#method-2-edit-page-via-local-mkdocs-workflow", 
            "text": "Please follow the  Documentation Requirements  page to install Mkdocs and the appropriate  material  theme  Open up a terminal and navigate to the ISLE project directory e.g.  cd ~/ISLE  To start Mkdocs:  mkdocs serve  One can view the static pages by opening a browser and navigating to  http://127.0.0.1:8000  Checkout a new branch in git e.g.  git checkout -b new_branch  Edit the appropriate Markdown (.md) file within the  docs  directory and save the edited file. Changes are almost immediate, the page should refresh. Should errors occur and the page does not display check the terminal output for issues.  Once ready to push changes to the ISLE repository:   git add edited-documentation-page.md     git commit -m \"Your description of changes, why and affected files if possible\"     git push origin new_branch     Manually create a pull request on the Github page for the ISLE  repository     Assigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "Method 2: Edit page via local Mkdocs workflow"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/", 
            "text": "ISLE Documentation Style Guide and Requirements\n\n\nThe ISLE Team asks that all potential contributors please familiarize themselves with this guide and its requirements \nPRIOR\n to committing documentation changes.\n\n\nThis document and project has been created to provide the ISLE project team and larger Islandora community with:\n\n\n\n\n\n\nMarkdown resources, on-boarding material and tools\n\n\n\n\n\n\nHow Markdown can be used for Documentation of ISLE Projects and additional efforts\n\n\n\n\n\n\nHow \nMkdocs\n is used for the creation of static Documentation pages from Markdown files.\n\n\n\n\n\n\nDocumentation Requirements\n\n\n\n\n\n\nAll documentation will be kept within the \ndocs\n directory within the Github.com hosted git repository.\n\n\n\n\n\n\nMarkdown (.md) files are to be used for all documentation.\n\n\n\n\n\n\nAny other type of submitted file type e.g. \n.txt,.pdf,.doc,.rtf\n will not be accepted.\n\n\n\n\n\n\nMkdocs\n is to be used for the generation of static documentation pages to be hosted on Github pages or locally.\n\n\n\n\n\n\nDocumentation Style\n\n\n\n\nHow-to(s) should be written for technical and non-technical audiences alike with clear fully tested steps, explanations and outcomes.\n\n\nAssumptions of prior technical knowledge should be avoided. If additional explanations potentially exceed an appropriate file length or context, the ISLE team recommends creating a \nReferences\n section with topical URLs providing additional documentation for further reading by endusers.\n\n\nAvoid gender specific references e.g. \nhe, she, her, him\n, personification or casual first person perspective e.g. \nyou\n. Use gender-neutral terms like \"\nenduser, one, they, a person\n\" etc.\n\n\nPlease follow the \nFile Layout\n \nsection\n of the \nMkdocs\n documentation when creating new documentation sections.\n\n\n\n\nWhat is Markdown?\n\n\n\n\n\n\nMarkdown is a text to HTML conversion tool.\n\n\n\n\n\n\nThe ISLE team prefers to use the \"\nGitHub Flavored Markdown\n\" syntax.\n\n\n\n\n\n\nMarkdown was created by John Gruber of \nDaring Fireball\n fame\n\n\n\n\n\n\nWhat is Markdown?\n\n\n\n\n\n\nMarkdown Requirements\n\n\n\n\nA text editor like \nAtom\n, Textedit or Notepad.\n\n\nSaving files with the \n.md\n extension\n\n\n\n\nMarkdown Syntax\n\n\n\n\n\n\nMastering Markdown offical Github guide\n\n\n\n\n\n\nMarkdown Syntax (official Github cheat sheet)\n\n\n\n\n\n\nMarkdown cheat sheet\n\n\n\n\n\n\nMarkdown Style\n\n\n\n\n\n\nA great starter \nTemplate\n\n\n\n\n\n\nGood example of \u201chow to\u201d use a README.md. (Not all sections germane. \nExample\n\n\n\n\n\n\nMore elaborate though clean example from \nNetflix", 
            "title": "3.1 - Documentation Style Guide"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#isle-documentation-style-guide-and-requirements", 
            "text": "The ISLE Team asks that all potential contributors please familiarize themselves with this guide and its requirements  PRIOR  to committing documentation changes.  This document and project has been created to provide the ISLE project team and larger Islandora community with:    Markdown resources, on-boarding material and tools    How Markdown can be used for Documentation of ISLE Projects and additional efforts    How  Mkdocs  is used for the creation of static Documentation pages from Markdown files.", 
            "title": "ISLE Documentation Style Guide and Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#documentation-requirements", 
            "text": "All documentation will be kept within the  docs  directory within the Github.com hosted git repository.    Markdown (.md) files are to be used for all documentation.    Any other type of submitted file type e.g.  .txt,.pdf,.doc,.rtf  will not be accepted.    Mkdocs  is to be used for the generation of static documentation pages to be hosted on Github pages or locally.", 
            "title": "Documentation Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#documentation-style", 
            "text": "How-to(s) should be written for technical and non-technical audiences alike with clear fully tested steps, explanations and outcomes.  Assumptions of prior technical knowledge should be avoided. If additional explanations potentially exceed an appropriate file length or context, the ISLE team recommends creating a  References  section with topical URLs providing additional documentation for further reading by endusers.  Avoid gender specific references e.g.  he, she, her, him , personification or casual first person perspective e.g.  you . Use gender-neutral terms like \" enduser, one, they, a person \" etc.  Please follow the  File Layout   section  of the  Mkdocs  documentation when creating new documentation sections.", 
            "title": "Documentation Style"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#what-is-markdown", 
            "text": "Markdown is a text to HTML conversion tool.    The ISLE team prefers to use the \" GitHub Flavored Markdown \" syntax.    Markdown was created by John Gruber of  Daring Fireball  fame    What is Markdown?", 
            "title": "What is Markdown?"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-requirements", 
            "text": "A text editor like  Atom , Textedit or Notepad.  Saving files with the  .md  extension", 
            "title": "Markdown Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-syntax", 
            "text": "Mastering Markdown offical Github guide    Markdown Syntax (official Github cheat sheet)    Markdown cheat sheet", 
            "title": "Markdown Syntax"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-style", 
            "text": "A great starter  Template    Good example of \u201chow to\u201d use a README.md. (Not all sections germane.  Example    More elaborate though clean example from  Netflix", 
            "title": "Markdown Style"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-mkdocs-requirements/", 
            "text": "Documentation Requirements\n\n\nThis project uses \nMkdocs\n for its documentation.\n\n\n\n\n\"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"\n \n- Mkdocs\n\n\n\n\nTo install Mkdocs:\n\n\n\n\nPlease follow their \nguide\n for the appropriate operating system\n\n\n\n\nThis projects uses the \nmaterial\n theme.\n\n\nTo install the \nmaterial\n theme.\n\n\n\n\nPlease follow this \nguide\n - or -\n\n\n\n\nInstall the latest version of Material with pip:\n\n\npip install mkdocs-material", 
            "title": "3.1 - Mkdocs Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-mkdocs-requirements/#documentation-requirements", 
            "text": "This project uses  Mkdocs  for its documentation.   \"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"   - Mkdocs   To install Mkdocs:   Please follow their  guide  for the appropriate operating system   This projects uses the  material  theme.  To install the  material  theme.   Please follow this  guide  - or -   Install the latest version of Material with pip:  pip install mkdocs-material", 
            "title": "Documentation Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-modify-ansible-scripts/", 
            "text": "", 
            "title": "3.2 - Considerations for future modification of ansible scripts"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-ansible-scripts-customize/", 
            "text": "", 
            "title": "3.2 - How to customize the Ansible scripts"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-ansible-resources/", 
            "text": "", 
            "title": "3.2 - Ansible Resources"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-overview-docker/", 
            "text": "", 
            "title": "3.3 - Overview of Docker and Docker Compose"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-inventory/", 
            "text": "", 
            "title": "3.3 - Inventory and description of customization elements"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-compose/", 
            "text": "", 
            "title": "3.3 - How to customize Docker Compose files"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-dockerfile/", 
            "text": "", 
            "title": "3.3 - How to customize Dockerfiles"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/", 
            "text": "What is Docker?\n\n\n\n\n\"Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.\"\n\n\n- Opensource.com\n\n\n\n\nReference:\n\n\n\n\nhttps://www.docker.com/\n\n\nhttps://www.docker.com/what-docker\n\n\nhttps://www.docker.com/technologies/overview#/software_infrastructure\n\n\nhttps://docs.docker.com/engine/docker-overview/\n\n\n\n\nWhat are Docker Containers?\n\n\n\n\n\"A container image is a lightweight, stand-alone, executable package of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. A container is a runtime instance of a docker image.\"\n  \n\n\n\"The concept is borrowed from Shipping Containers, which define a standard to ship goods globally. Docker defines a standard to ship software.\"\n\n \n- Docker.com\n\n\n\n\nA Docker container consists of:\n\n\n\n\na Docker image\n\n\nAn execution environment\n\n\nA standard set of instructions\n\n\n\n\nReference:\n\n\n\n\nhttps://opensource.com/resources/what-are-linux-containers?intcmp=7016000000127cYAAQ\n\n\nhttps://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/\n\n\n\n\nWhat are Docker Images?\n\n\n\n\n\"An image is an inert, immutable, file that's essentially a snapshot of a container. Images are created with the build command, and they'll produce a container when started with run. Images are stored in a Docker registry such as registry.hub.docker.com\"\n\n\n- stackoverflow\n\n\n\n\n\n\nhttps://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/\n\n\nhttps://docs.docker.com/engine/reference/commandline/images/\n\n\n\n\nWhat is Docker Compose?\n\n\n\n\nFor this project, Docker Compose is used as an \norchestration\n tool to run and manage all containers.\n\n\n\n\n\n\n\"Orchestration is the automated arrangement, coordination, and management of computer systems, middleware, and services.\"\n\n\n- Wikipedia\n\n\n\"Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application's services. Then, using a single command, you create and start all the services from your configuration.\"\n\n\n- Docker Compose\n\n\n\n\nReference:\n\n\n\n\nhttps://docs.docker.com/compose/overview/\n\n\nhttps://docs.docker.com/compose/\n\n\nhttps://docs.docker.com/compose/environment-variables/\n\n\n\n\nWhat is Docker Hub\n\n\n\n\n\"Docker Hub is a cloud-based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker Cloud so you can deploy images to your hosts. Provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.\"\n\n\n- Docker Hub\n\n\n\n\n\n\nhttps://docs.docker.com/docker-hub/\n\n\nhttps://hub.docker.com/\n\n\n\n\nDocker Documentation\n\n\n\n\nhttps://docs.docker.com/\n\n\nDocker MySQL Documentation \nhttps://github.com/docker-library/docs/tree/master/mysql#mysql_database", 
            "title": "3.3 - Docker Resources"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker", 
            "text": "\"Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.\"  - Opensource.com   Reference:   https://www.docker.com/  https://www.docker.com/what-docker  https://www.docker.com/technologies/overview#/software_infrastructure  https://docs.docker.com/engine/docker-overview/", 
            "title": "What is Docker?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-are-docker-containers", 
            "text": "\"A container image is a lightweight, stand-alone, executable package of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. A container is a runtime instance of a docker image.\"     \"The concept is borrowed from Shipping Containers, which define a standard to ship goods globally. Docker defines a standard to ship software.\" \n  - Docker.com   A Docker container consists of:   a Docker image  An execution environment  A standard set of instructions   Reference:   https://opensource.com/resources/what-are-linux-containers?intcmp=7016000000127cYAAQ  https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/", 
            "title": "What are Docker Containers?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-are-docker-images", 
            "text": "\"An image is an inert, immutable, file that's essentially a snapshot of a container. Images are created with the build command, and they'll produce a container when started with run. Images are stored in a Docker registry such as registry.hub.docker.com\"  - stackoverflow    https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/  https://docs.docker.com/engine/reference/commandline/images/", 
            "title": "What are Docker Images?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker-compose", 
            "text": "For this project, Docker Compose is used as an  orchestration  tool to run and manage all containers.    \"Orchestration is the automated arrangement, coordination, and management of computer systems, middleware, and services.\"  - Wikipedia  \"Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application's services. Then, using a single command, you create and start all the services from your configuration.\"  - Docker Compose   Reference:   https://docs.docker.com/compose/overview/  https://docs.docker.com/compose/  https://docs.docker.com/compose/environment-variables/", 
            "title": "What is Docker Compose?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker-hub", 
            "text": "\"Docker Hub is a cloud-based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker Cloud so you can deploy images to your hosts. Provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.\"  - Docker Hub    https://docs.docker.com/docker-hub/  https://hub.docker.com/", 
            "title": "What is Docker Hub"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#docker-documentation", 
            "text": "https://docs.docker.com/  Docker MySQL Documentation  https://github.com/docker-library/docs/tree/master/mysql#mysql_database", 
            "title": "Docker Documentation"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-hub/", 
            "text": "", 
            "title": "3.4 - Overview of Docker Hub System"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-build-images/", 
            "text": "", 
            "title": "3.4 - Docker Build Images"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-update-build-images/", 
            "text": "", 
            "title": "3.4 - How to update Docker build images"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-tagging-policy/", 
            "text": "", 
            "title": "3.4 - Docker Tagging Policy"
        }, 
        {
            "location": "/4_nongit/demos/", 
            "text": "", 
            "title": "4.1 - Demos"
        }, 
        {
            "location": "/4_nongit/video-examples/", 
            "text": "", 
            "title": "4.2 - Video Examples"
        }
    ]
}