{
    "docs": [
        {
            "location": "/", 
            "text": "Islandora Enterprise (ISLE)\n\n\nWelcome to the Documentation for the Islandora Enterprise (ISLE) project.\n\n\nWhat is Islandora Enterprise (ISLE)?\n\n\nIslandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.\n\n\nHow can you help?\n\n\nISLE is seeking support from the Islandora community to see the project through. This support can take several forms, depending on your institution's resources and ability to contribute. To help ISLE succeed, you can:\n\n Contribute time to testing or development\n\n Contribute funding to enable more MVP Wishlist items or towards Phase II of ISLE\n\n Tell others about ISLE\n\n Add your institution to the \nISLE Supporters\n to express your interest in adopting the finished product (this helps show community interest)\n\n\nContributors welcome!\n\n\n\n\nIf you have questions, please contact \nDavid Keiser-Clark\n or post them on the \nIslandora listserv\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#islandora-enterprise-isle", 
            "text": "Welcome to the Documentation for the Islandora Enterprise (ISLE) project.", 
            "title": "Islandora Enterprise (ISLE)"
        }, 
        {
            "location": "/#what-is-islandora-enterprise-isle", 
            "text": "Islandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.", 
            "title": "What is Islandora Enterprise (ISLE)?"
        }, 
        {
            "location": "/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/#how-can-you-help", 
            "text": "ISLE is seeking support from the Islandora community to see the project through. This support can take several forms, depending on your institution's resources and ability to contribute. To help ISLE succeed, you can:  Contribute time to testing or development  Contribute funding to enable more MVP Wishlist items or towards Phase II of ISLE  Tell others about ISLE  Add your institution to the  ISLE Supporters  to express your interest in adopting the finished product (this helps show community interest)", 
            "title": "How can you help?"
        }, 
        {
            "location": "/#contributors-welcome", 
            "text": "If you have questions, please contact  David Keiser-Clark  or post them on the  Islandora listserv .", 
            "title": "Contributors welcome!"
        }, 
        {
            "location": "/about/", 
            "text": "Islandora Enterprise (ISLE)\n is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.\n\n\nISLE Documents\n\n\n\n\nISLE Executive Summary\n (a concise overview in plain English)\n\n\nISLE Specifications\n (based on the older, now closed, \nISLE MVP\n doc)\n\n\nISLE Supporters\n (list of institutions)", 
            "title": "About"
        }, 
        {
            "location": "/about/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/about/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing members to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/about/#isle-documents", 
            "text": "ISLE Executive Summary  (a concise overview in plain English)  ISLE Specifications  (based on the older, now closed,  ISLE MVP  doc)  ISLE Supporters  (list of institutions)", 
            "title": "ISLE Documents"
        }, 
        {
            "location": "/1_system_process_overview/summary/", 
            "text": "Project Overview\n\n\nISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE\n\n\nWhat is Islandora Enterprise (ISLE)?\n\n\nIslandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.\n\n\nHigh Level Objective\n\n\nTo deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.\n\n\nISLE Functional Definition\n\n\nBy ISLE, it is meant a system that will:  \n\n\n\n\nFunction as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.\n\n\nConsist of a public, tagged set of Docker containers.\n\n\nInclude use of an orchestration tool such as Docker Composer.\n\n\nAllow for the replacement of older containers with newer versions.\n\n\nBe updated to include new component security patch releases within one calendar month.\n\n\nSupport institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.\n\n\nThese will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.\n\n\n\n\n\n\nSupport for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.\n\n\nSupport data store flexibility on institutional hosting or an AWS cloud environment.\n\n\nEncompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.\n\n\nInclude an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers\n\n\nInclude documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development", 
            "title": "1.1 - Executive summary"
        }, 
        {
            "location": "/1_system_process_overview/summary/#project-overview", 
            "text": "ISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE", 
            "title": "Project Overview"
        }, 
        {
            "location": "/1_system_process_overview/summary/#what-is-islandora-enterprise-isle", 
            "text": "Islandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.", 
            "title": "What is Islandora Enterprise (ISLE)?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#high-level-objective", 
            "text": "To deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.", 
            "title": "High Level Objective"
        }, 
        {
            "location": "/1_system_process_overview/summary/#isle-functional-definition", 
            "text": "By ISLE, it is meant a system that will:     Function as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.  Consist of a public, tagged set of Docker containers.  Include use of an orchestration tool such as Docker Composer.  Allow for the replacement of older containers with newer versions.  Be updated to include new component security patch releases within one calendar month.  Support institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.  These will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.    Support for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.  Support data store flexibility on institutional hosting or an AWS cloud environment.  Encompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.  Include an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers  Include documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development", 
            "title": "ISLE Functional Definition"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/", 
            "text": "", 
            "title": "1.2 - MVP specs"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/systemoverview/", 
            "text": "Introduction\n\n\nIslandora\n is an open-source software \nframework\n designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\n\n\nISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.\n\n\nISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a \nDocker Engine\n environment.\n\n\nThis process would allows institutions to choose between hosting:  \n\n\n\n\nlocally on a laptop for development work\n\n\nlocally in their Institutional data center\n\n\nin a cloud environment such as (\nAmazon Web Services\n).\n\n\n\n\nISLE\u2019s production-ready platform is to be updated monthly with:\n\n\n\n\ncritical security patches\n\n\nfull stack software updates\n\n\na suite of commonly installed features and solution packs.\n\n\n\n\nISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).", 
            "title": "1.3 - System overview"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/systemoverview/#introduction", 
            "text": "Islandora  is an open-source software  framework  designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.  ISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.  ISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a  Docker Engine  environment.  This process would allows institutions to choose between hosting:     locally on a laptop for development work  locally in their Institutional data center  in a cloud environment such as ( Amazon Web Services ).   ISLE\u2019s production-ready platform is to be updated monthly with:   critical security patches  full stack software updates  a suite of commonly installed features and solution packs.   ISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).", 
            "title": "Introduction"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-specification-matrix-table/", 
            "text": "Software / Service\n\n\nLegacy Versions\n\n\nStable / Newest Version\n\n\n\n\n\n\n\n\n\n\nTomcat\n\n\n7\n\n\n8.x\n\n\n\n\n\n\nOracle Java\n\n\nJDK 7\n\n\nJDK 8.x\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7\n\n\nJDK 8.x\n\n\n\n\n\n\nFedora\n\n\n3.7.1 or 3.8\n\n\n3.8.1\n\n\n\n\n\n\nDrupal filter\n\n\n3.7.1 or 3.8\n\n\n3.8.1\n\n\n\n\n\n\nGsearch\n\n\n2.7.1 or HEAD (2.8.1)\n\n\nDiscovery Garden Patched (2.8.x)\n\n\n\n\n\n\nDGI GSearch Extensions\n\n\n0.1.1\n\n\n0.1.3\n\n\n\n\n\n\nGsearch Transforms (XSLTs)\n\n\nrequires Solr 4.2 or 4.6.1, GSearch 2.71 or HEAD (2.8.x) \n DG Basic Solr\n\n\nrequires Solr 4.10+, GSearch DG Patched (2.8.x) \n DG Basic Solr Config\n\n\n\n\n\n\nSolr\n\n\n4.2\n\n\n4.6.1\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n1.1\n\n\n\n\n\n\nApache\n\n\n2.2\n\n\n2.4\n\n\n\n\n\n\nPHP\n\n\n5.5\n\n\n5.6\n\n\n\n\n\n\nDrupal\n\n\n7.4x\n\n\n7.56\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\nHEAD\n\n\n\n\n\n\nMySQL\n\n\n5.5\n\n\n5.6", 
            "title": "1.3 - Supported Specification Matrix table"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-islandora-modules/", 
            "text": "", 
            "title": "1.3 - Supported Islandora Modules"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-drupal-modules/", 
            "text": "", 
            "title": "1.3 - Supported Drupal Modules"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-software-repositories/", 
            "text": "", 
            "title": "1.3 - Supported Software Repositories"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-ssl/", 
            "text": "", 
            "title": "1.3 - Supported SSL"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/release-process/", 
            "text": "To release ISLE code and updates, a public open \nGithub\n repository linked to \nDocker Hub\n, a cloud-based registry service will be used.\n\n\nDocker Hub will provide the centralized resource for ISLE container image discovery and distribution for end-users, automated testing and deploy services to build, test and download images.\n\n\nUsers of ISLE will download \u201ctagged\u201d versions of the software (images) to see what version fits their current needs; either a \u201clegacy\u201d setup to provide a clear \u201cupgration\u201d path or a fully current, tested and stable version for production use.\n\n\n\n\nExample of a \u201ctagged\u201d software version on Docker Hub:\n\n\n\n\n\n\nBy using tagged releases (images) for container software e.g. SOLR versions 4.2 - 4.10, end-users will be able to spin up containers quickly and test a wider variety of configurations with the ultimate goal of being on the most recent and stable version. End-users will also be able to make quick edits to configuration templates from the downloaded Github repositories to establish the basic three environment types;\n\n\n\n\nremote admin (sandbox)\n\n\nstaging\n\n\nproduction.\n\n\n\n\nFor specific tags by version please reference, the Supported Specification Matrix \ntable\n\n\nAdditional platform customization and configuration will be handled by the creation of master Dockerfiles template whose values end-users can change for the appropriate institution specific values e.g. edits to schema.xml, config.xml, XSLTs, xacml permissions etc", 
            "title": "1.3 - Release Process"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/", 
            "text": "Alpha Build Pre-Requisites\n\n\n\n\n\n\nThis current alpha has been build and tested on \nDocker For Mac\n only. (11/2017)\n\n\n\n\nPlease install the \nlatest version\n from the \nDocker store\n\n\n\n\n\n\n\n\nGit will need to be installed prior as well.\n\n\n\n\nOpen a terminal and enter: \ngit --version\n\n\nThis will trigger the \nInstall Command Line Developer Tools\n prompt, click on the blue \nAccept / Yes\n button for the license agreement\n\n\nThe package will take 1-2 minutes to download. Click the \nDone\n button once finished.\n\n\n\n\n\n\n\n\nGit LFS will also need to be installed due to issue with large binary files\n\n\n\n\nInstall following instructions \nhere\n\n\nbrew install git-lfs\n (if you have \nhomebrew\n installed) or download the .tar.gz file from the website above\n\n\nOnce installed, open a terminal and enter \ngit lfs install\n\n\n\n\nThis should allow one to download the full binary files\n\n\n\n\n\n\nThis alpha build uses \nislandora-docker.com\n as the test domain along with the Docker Compose service names e.g. \ndb, fedora, web\n etc.\n\n\n\n\nTo ensure this domain resolves properly, one will need to edit their local \n/etc/hosts\n file.\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\nAdd the following:\n\n\n127.0.0.1       localhost islandora-docker.com fedora web fedora.islandora-docker.com web.islandora-docker.com\n\n\n\n\n\n\n\n\n\n\n\n\nClone the ISLE repository\n\n\n\n\nOpen a terminal and enter: \ngit clone https://github.com/Islandora-Collaboration-Group/ISLE\n\n\ncd /yourpathto/ISLE\n\n\nThis process will take 3 - 5 minutes depending on internet bandwidth\n\n\n\n\n\n\n\n\n\n\nBuild process\n\n\nPlease note:\n \nThe first container (MySQL, isle-db, db) has to be built and running PRIOR to all others (including Fedora \n web) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.\n  \n\n\n\n\nDO NOT RUN\n \ndocker-compose up -d\n during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.\n\n\n\n\n1. MySQL container (10-15 mins)\n\n\n\n\ndocker-compose build db\n  \n\n\ndocker-compose up -d db\n  \n\n\n\n\n2. Fedora container (30 - 45 mins)\n\n\n\n\ndocker-compose build fedora\n  \n\n\ndocker-compose up -d fedora\n  \n\n\n\n\n3. Solr container (20 - 40 mins)\n\n\n\n\ndocker-compose build solr\n  \n\n\ndocker-compose up -d solr\n  \n\n\n\n\n4. Web container (45 - 60 mins)\n\n\n\n\ndocker-compose build web\n  \n\n\ndocker-compose up -d web\n  \n\n\nPlease note:\n \nThis container on occasion has failed to start initially for as of yet unlogged and unknown reasons.\n\n\nOne can check if the container is running: \ndocker ps\n (shows only running containers)  \n\n\nOne can check if the container stopped running or \"exited\": \ndocker ps -a\n (shows all containers running or not)  \n\n\n\n\n\n\n\n\n\n\n\n\n5. Install script on Web container (45 - 60 mins)\n\n\nThe following manual steps will be folded into the web build process.\n\n\n\n\n\n\nRun the drush.sh script manually on the web container  \n\n\n\n\ndocker exec -it isle-web bash\n\n\ncd /tmp\n\n\nchmod 777 drush.sh\n\n\n./drush.sh\n\n\n\n\n\n\n\n\nFix open-seadragon issue\n\n\n\n\ncd /var/www/html/sites/all/libraries\n\n\nwget https://github.com/openseadragon/openseadragon/releases/download/v2.2.1/openseadragon-bin-2.2.1.zip\n\n\nunzip https://github.com/openseadragon/openseadragon/releases/download/v2.2.1/openseadragon-bin-2.2.1.zip\n\n\nmv openseadragon-bin-2.2.1 openseadragon\n\n\ncd /var/www/html/sites/all/modules\n\n\ndrush -u 1 en islandora_openseadragon\n\n\nThe following message will appear:\n\n\nThe following extensions will be enabled: islandora_openseadragon\n\n    Do you really want to continue? (y/n): y\n\n\n\n\n\n\nHit \ny\n to continue\n\n\nThe following message should appear:\n\n\nislandora_openseadragon was enabled successfully. [ok]\n\n\n\n\n\n\nEnter: \ndrush openseadragon-plugin\n\n\n\n\n\n\n\n\nOnce finished \ncntrl-D\n or type \nexit\n to get out of the web container \n QC the resulting setup\n\n\n\n\n\n\nPlease note:\n The cronjob setting in the \ndrush.sh\n script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.\n\n\nTotal build process takes 2.5 - 4 hours (depending on system and internet speeds)\n\n\n\n\nFast Facts\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\ndb\n\n\nisle-db\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\ndockerfeddb2017\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nislandora_user\n\n\nislandoradockerdb2017\n\n\nislandora_docker\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 11/2017\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\ndockerFEDadmin2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\ndockerfedoraIntCallUserpw2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\ndockerfgsAdminpw2017\n\n\nGsearch\n\n\nhttp://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://127.0.0.1:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://127.0.0.1:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://127.0.0.1:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Web container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nweb\n\n\nisle-web\n\n\nsee below\n\n\n80 (on container) mapped to 8888 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nislandora_docker_admin\n\n\nislandoradockeradminpw2017\n\n\nDrupal site admin\n\n\nhttp://islandora-docker.com:8888", 
            "title": "1.4. -Testing - Alpha Build Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#alpha-build-pre-requisites", 
            "text": "This current alpha has been build and tested on  Docker For Mac  only. (11/2017)   Please install the  latest version  from the  Docker store     Git will need to be installed prior as well.   Open a terminal and enter:  git --version  This will trigger the  Install Command Line Developer Tools  prompt, click on the blue  Accept / Yes  button for the license agreement  The package will take 1-2 minutes to download. Click the  Done  button once finished.     Git LFS will also need to be installed due to issue with large binary files   Install following instructions  here  brew install git-lfs  (if you have  homebrew  installed) or download the .tar.gz file from the website above  Once installed, open a terminal and enter  git lfs install   This should allow one to download the full binary files    This alpha build uses  islandora-docker.com  as the test domain along with the Docker Compose service names e.g.  db, fedora, web  etc.   To ensure this domain resolves properly, one will need to edit their local  /etc/hosts  file.  Open up a terminal and enter:  sudo vi /etc/hosts  Add the following:  127.0.0.1       localhost islandora-docker.com fedora web fedora.islandora-docker.com web.islandora-docker.com       Clone the ISLE repository   Open a terminal and enter:  git clone https://github.com/Islandora-Collaboration-Group/ISLE  cd /yourpathto/ISLE  This process will take 3 - 5 minutes depending on internet bandwidth", 
            "title": "Alpha Build Pre-Requisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#build-process", 
            "text": "Please note:   The first container (MySQL, isle-db, db) has to be built and running PRIOR to all others (including Fedora   web) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.      DO NOT RUN   docker-compose up -d  during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.", 
            "title": "Build process"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#1-mysql-container-10-15-mins", 
            "text": "docker-compose build db     docker-compose up -d db", 
            "title": "1. MySQL container (10-15 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#2-fedora-container-30-45-mins", 
            "text": "docker-compose build fedora     docker-compose up -d fedora", 
            "title": "2. Fedora container (30 - 45 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#3-solr-container-20-40-mins", 
            "text": "docker-compose build solr     docker-compose up -d solr", 
            "title": "3. Solr container (20 - 40 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#4-web-container-45-60-mins", 
            "text": "docker-compose build web     docker-compose up -d web     Please note:   This container on occasion has failed to start initially for as of yet unlogged and unknown reasons.  One can check if the container is running:  docker ps  (shows only running containers)    One can check if the container stopped running or \"exited\":  docker ps -a  (shows all containers running or not)", 
            "title": "4. Web container (45 - 60 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#5-install-script-on-web-container-45-60-mins", 
            "text": "The following manual steps will be folded into the web build process.    Run the drush.sh script manually on the web container     docker exec -it isle-web bash  cd /tmp  chmod 777 drush.sh  ./drush.sh     Fix open-seadragon issue   cd /var/www/html/sites/all/libraries  wget https://github.com/openseadragon/openseadragon/releases/download/v2.2.1/openseadragon-bin-2.2.1.zip  unzip https://github.com/openseadragon/openseadragon/releases/download/v2.2.1/openseadragon-bin-2.2.1.zip  mv openseadragon-bin-2.2.1 openseadragon  cd /var/www/html/sites/all/modules  drush -u 1 en islandora_openseadragon  The following message will appear:  The following extensions will be enabled: islandora_openseadragon \n    Do you really want to continue? (y/n): y    Hit  y  to continue  The following message should appear:  islandora_openseadragon was enabled successfully. [ok]    Enter:  drush openseadragon-plugin     Once finished  cntrl-D  or type  exit  to get out of the web container   QC the resulting setup    Please note:  The cronjob setting in the  drush.sh  script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.", 
            "title": "5. Install script on Web container (45 - 60 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#total-build-process-takes-25-4-hours-depending-on-system-and-internet-speeds", 
            "text": "", 
            "title": "Total build process takes 2.5 - 4 hours (depending on system and internet speeds)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#fast-facts", 
            "text": "", 
            "title": "Fast Facts"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      db  isle-db  MySQL 5.6  3306        Account  Password  Database  Perms      root  islemysqlrootpw2017  ALL  ALL    fedora_admin  dockerfeddb2017  fedora3  All  except  Grant  option    islandora_user  islandoradockerdb2017  islandora_docker  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 11/2017    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  dockerFEDadmin2017  Fedora  http://127.0.0.1:8080/fedora/describe    fedoraIntCallUser  dockerfedoraIntCallUserpw2017  Fedora  http://127.0.0.1:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  dockerfgsAdminpw2017  Gsearch  http://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex    admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8080/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8080/manager/html    --  --  Djatoka  http://127.0.0.1:8080/adore-djatoka/    --  --  Apache  http://127.0.0.1:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8091/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8091/manager/html    --  --  Solr  http://127.0.0.1:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/alpha_build_guide/#4-web-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      web  isle-web  see below  80 (on container) mapped to 8888 (on host)        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      islandora_docker_admin  islandoradockeradminpw2017  Drupal site admin  http://islandora-docker.com:8888", 
            "title": "4. Web container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/sampledata/", 
            "text": "", 
            "title": "1.4 - Testing - \"Sample Data\""
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/travis-ci/", 
            "text": "", 
            "title": "1.4 - Testing - Travis CI"
        }, 
        {
            "location": "/1_system_process_overview/alphas/", 
            "text": "Following is a preliminary list of institutions who have volunteered for the Alpha testing phase:\n\n\nManaged by Born-Digital\n\n\n\n\nWilliams\n\n\nRPI\n\n\nGrinnell\n\n\n\n\nCommunity Alphas\n\n\n\n\nHamilton\n\n\nU. of Pittsburgh\n\n\n?", 
            "title": "1.5 - Alphas"
        }, 
        {
            "location": "/1_system_process_overview/alphas/#managed-by-born-digital", 
            "text": "Williams  RPI  Grinnell", 
            "title": "Managed by Born-Digital"
        }, 
        {
            "location": "/1_system_process_overview/alphas/#community-alphas", 
            "text": "Hamilton  U. of Pittsburgh  ?", 
            "title": "Community Alphas"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-basic/", 
            "text": "", 
            "title": "2.1 - Basic Host Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/host-storage-requirements/", 
            "text": "", 
            "title": "2.1 - Storage Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-laptops/", 
            "text": "", 
            "title": "2.1 - Local Laptop Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-cloud/", 
            "text": "", 
            "title": "2.1 - Cloud (AWS) Hosting Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-onsite/", 
            "text": "", 
            "title": "2.1 - Onsite - Institutional datacenter Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-multi-environments/", 
            "text": "", 
            "title": "2.1 - Multi-Environment Requirements"
        }, 
        {
            "location": "/2_enduser_guide/usage-guide/", 
            "text": "", 
            "title": "2.2 - Overview"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-install-ansible/", 
            "text": "", 
            "title": "2.2 - Ansible Installation"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-isle-playbooks/", 
            "text": "", 
            "title": "2.2 - Ansible Playbooks"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-usage/", 
            "text": "", 
            "title": "2.2 - Ansible Usage"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-quick-start/", 
            "text": "[STUB]\n\n\n\n\n\n\nDeploy Host Server (Linux, Cloud etc)\n\n\n\n\n\n\nDeploy Docker and Docker Compose", 
            "title": "2.2 - Ansible Quick Start Guide"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-quick-start/#stub", 
            "text": "Deploy Host Server (Linux, Cloud etc)    Deploy Docker and Docker Compose", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-laptop-setup/", 
            "text": "", 
            "title": "2.2 - Laptop Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-cloud-setup/", 
            "text": "", 
            "title": "2.2 - Cloud (AWS) Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-onsite-setup/", 
            "text": "", 
            "title": "2.2 - Onsite - Institutional datacenter setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-multi-environments-setup/", 
            "text": "", 
            "title": "2.2 - Multi-Environment setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-security/", 
            "text": "[STUB]\n\n\n\n\nHow to configure fail2ban\n\n\nProcesses ports etc", 
            "title": "2.2 - Basic Security"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-security/#stub", 
            "text": "How to configure fail2ban  Processes ports etc", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-coms-ports/", 
            "text": "", 
            "title": "2.2 - Communication and Ports"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/host-environmental-vars/", 
            "text": "", 
            "title": "2.2 - Host Environmental Variables"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-firewall/", 
            "text": "[STUB]\n\n\n\n\nHow to configure csf / iptables", 
            "title": "2.2 - Basic Firewall Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-firewall/#stub", 
            "text": "How to configure csf / iptables", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-hosts-packages/", 
            "text": "", 
            "title": "2.2 - Packages"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/", 
            "text": "Docker image commands\n\n\nHow to list Docker images\n\n\nTo list Docker images: \ndocker image ls\n\n\nHow to remove Docker images\n\n\nTo remove a Docker container: \ndocker image rm -f \nimage name\n\n\n\n\nDocker container commands\n\n\nHow to list Docker containers\n\n\nTo check if containers are running in Docker:\n\n\n\n\nOpen up a command line terminal on the host machine and enter: \ndocker ps -a\n\n\n\n\nOutput should display like:\n\n\nExample:\n  \n\n\n(use screenshot?)\n\n\nHow to start or stop Docker containers using Docker-Compose\n\n\nTo execute the next two commands, you'll need to \ncd\n into the root of project directory where the \ndocker-compose.yml\n file is within a command line terminal.\n\n\n\n\n\n\nTo stop all containers at once: \ndocker-compose stop\n\n\n\n\n\n\nTo start all containers at once: (once built) \ndocker-compose up\n\n\n\n\n\n\n\n\nHow to access running Docker containers\n\n\nTo shell into a container properly without shutting it down:\n\n\nExample:\n\n\ndocker exec -it isle-islandora-web bash\n\n\nIn some cases, one may need to use \nCntrl-D\n to exit the container without shutting it down.\n\n\n\n\nHow to remove Docker containers\n\n\nTo remove a Docker container: \ndocker rm -f \ncontainer name", 
            "title": "2.3 - Docker Commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#docker-image-commands", 
            "text": "", 
            "title": "Docker image commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-list-docker-images", 
            "text": "To list Docker images:  docker image ls", 
            "title": "How to list Docker images"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-remove-docker-images", 
            "text": "To remove a Docker container:  docker image rm -f  image name", 
            "title": "How to remove Docker images"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#docker-container-commands", 
            "text": "", 
            "title": "Docker container commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-list-docker-containers", 
            "text": "To check if containers are running in Docker:   Open up a command line terminal on the host machine and enter:  docker ps -a   Output should display like:  Example:     (use screenshot?)", 
            "title": "How to list Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-start-or-stop-docker-containers-using-docker-compose", 
            "text": "To execute the next two commands, you'll need to  cd  into the root of project directory where the  docker-compose.yml  file is within a command line terminal.    To stop all containers at once:  docker-compose stop    To start all containers at once: (once built)  docker-compose up", 
            "title": "How to start or stop Docker containers using Docker-Compose"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-access-running-docker-containers", 
            "text": "To shell into a container properly without shutting it down:  Example:  docker exec -it isle-islandora-web bash  In some cases, one may need to use  Cntrl-D  to exit the container without shutting it down.", 
            "title": "How to access running Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-remove-docker-containers", 
            "text": "To remove a Docker container:  docker rm -f  container name", 
            "title": "How to remove Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-compose-commands/", 
            "text": "", 
            "title": "2.3 - Docker Compose Commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-inventory/", 
            "text": "[STUB] Container Inventory\n\n\n\n\ninclude environmental variables specific to containers\n\n\n\n\ninclude accounts and passwords specific to containers.\n\n\n\n\n\n\nMySQL\n\n    a. has the Drupal site (tbd name) database\n\n    b. has the fedora3 database  \n\n\n\n\nApache\n\n    a. capable of running multi-sites  \n\n\nFedora\n\n    a. single repository\n\n    b. has Djatoka dependency\n\n    c. Runs Tomcat service  \n\n\nGsearch\n\n    a. Discovery Garden \"patched version\"\n\n    b. Runs Tomcat service\n\n    c. Uses Discovery Garden Islandora Transforms (XSLTs)\n\n    d. Uses Discovery Garden Search Extensions  \n\n\nSolr\n\n    a. Uses Discovery Garden basic-solr-config\n\n    b. Runs Tomcat service  \n\n\nCertbot\n\n    a. Runs Let's Encrypt", 
            "title": "2.3 - Container Inventory"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-inventory/#stub-container-inventory", 
            "text": "include environmental variables specific to containers   include accounts and passwords specific to containers.    MySQL \n    a. has the Drupal site (tbd name) database \n    b. has the fedora3 database     Apache \n    a. capable of running multi-sites    Fedora \n    a. single repository \n    b. has Djatoka dependency \n    c. Runs Tomcat service    Gsearch \n    a. Discovery Garden \"patched version\" \n    b. Runs Tomcat service \n    c. Uses Discovery Garden Islandora Transforms (XSLTs) \n    d. Uses Discovery Garden Search Extensions    Solr \n    a. Uses Discovery Garden basic-solr-config \n    b. Runs Tomcat service    Certbot \n    a. Runs Let's Encrypt", 
            "title": "[STUB] Container Inventory"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-apache/", 
            "text": "", 
            "title": "2.3 - Container - Apache"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/", 
            "text": "The MySQL container will be using the following versions:\n\n\n\n\nLatest (5.6) - Dockerhub\n\n\n\n\nLatest (5.6) - Github Repository\n\n\n\n\n\n\nLegacy (5.5) - Dockerhub\n\n\n\n\nLegacy (5.5) - Github Repository\n\n\n\n\n\n\nDocker Compose service description\n\n\nThis container will only create an empty MySQL \nfedora3\n database (upon launch) using the Docker \nenvironment\n setting (displayed above). The Drupal site and/or multi-site databases will need to be created post launch.\n\n\n Please note: This container must be created and launched first, prior to all other containers.\n\n\nWithin the docker-compose.yml file, found at the root of the ISLE project Github repository, this container is described / controlled as follows:\n\n\n\n\ndb:\n  build: ./mysql\n  image: isle-db:latest\n  environment:\n    - MYSQL_ROOT_PASSWORD=islemysqlrootpw2017\n    - MYSQL_DATABASE=fedora3\n    - MYSQL_USER=fedora_admin\n    - MYSQL_PASSWORD=islefeddb2017\n  ports:\n    - \"3306:3306\"\n  volumes:\n    - ./data/mysql:/var/lib/mysql\n    - ./mysql/initscripts:/docker-entrypoint-initdb.d\n  container_name: isle-db\n\n\n\n\nDocker Compose commands:\n\n\n\n\nTo build only this container (no others): \ndocker-compose build db\n  \n\n\nTo create only this container (no others): \ndocker-compose create db\n\n\nTo start only this container (no others): \ndocker-compose up -d db\n  \n\n\n\n\nImage Name\n\n\n\n\nLatest \nmysql:5.6 (db)\n\n\nLegacy \nmysql:5.5.55 (db)\n\n\n\n\nContainer name(s)\n\n\nisle-db\n\n\nDatabases\n\n\n\n\nfedora3\n Fedora database created by build process (empty)\n\n\nisle_site\n Drupal site database created by build process (empty, default)\n\n\n\n\nPer the guidelines of the official MySQl Docker image \nREADME\n, section \nInitializing a fresh instance\n:\n\n\n\n\n\"When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d. Files will be executed in alphabetical order. You can easily populate your mysql services by mounting a SQL dump into that directory and provide custom images with contributed data. SQL files will be imported by default to the database specified by the MYSQL_DATABASE variable.\"\n\"\n\n\n\n\nBy default, the \ndocker-compose.yml\n script creates the \nfedora3\n database by setting environmental variables in the \nenvironment\n section of the \ndb\n service.\n\n\nThe second database \nisle_site\n is created when the mount process \n./mysql/initscripts:/docker-entrypoint-initdb.d\n occurs upon container launch.\n\n\nWithin this project directory, there is a directory \ninitscripts\n which contains a SQL script \nsiteinit.sql\n\n\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 fedora\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Dockerfile\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 docker-entrypoint.sh\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 initscripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 siteinit.sql\n\u251c\u2500\u2500 site\n\u2514\u2500\u2500 web\n\n\n\n\nThe default contents of this script are:\n\n\nExample\n\n\nCREATE DATABASE isle_site CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n\nCREATE USER islandora_user@'127.0.0.1' IDENTIFIED BY 'islandoraisledb2017';\n\n\nGRANT SELECT, INSERT, UPDATE ON islandora_docker.* TO 'islandora_user'@'127.0.0.1'\";\n  \n\n\nThis script can be modified to create more databases upon container launch.\n\n\n\n\n\n\n\n\n\n\nUser\n\n\nPassword\n\n\nDatabase\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nhas access to all databases with all db privileges\n\n\n\n\n\n\nfedora_admin\n\n\nislefeddb2017\n\n\nfedora3\n\n\nhas access to only the \nfedora3\n Fedora database. No grant privileges.\n\n\n\n\n\n\nislandora_user\n\n\nislandoraisledb2017\n\n\nisle_site\n\n\nhas access to only the \nisle_site\n Drupal site database. No grant privileges.\n\n\n\n\n\n\n\n\nPorts\n\n\nPort 3306 on the MySQL container is mapped to 3306 on Host\n\n\nVolumes\n\n\n\n\n./data/mysql:/var/lib/mysql\n\n\n\n\nThis volume is created to allow MySQL databases to persist. All MySQL data is stored here. The container can be turned off, destroyed or upgraded and this data will remain.\n\n\n\n\n./mysql/initscripts:/docker-entrypoint-initdb.d\n\n\n\n\nThis volume is created to allow for the creation of additional databases beyond the initial \nfedora3\n creation. A default empty Drupal site database is also supplied using a SQL script file called \nsiteinit.sql\n found within the \ninitscripts\n directory. By mounting this directory directly into the container's \ndocker-entrypoint-initdb.d\n directory, the MySQL service is able to run the SQL script automatically upon container launch.\n\n\nNotes\n\n\nPlease only review this if building containers manually:\n  \n\n\nThe \ndocker-entrypoint.sh\n file contained within the \nmysql\n folder next to the Dockerfile needs to have \n755\n file permissions prior to the build.  \n\n\nExample:\n\nRun \nchmod 755 docker-entrypoint.sh\n to fix PRIOR to the build.", 
            "title": "2.3 - Container - MySQL"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#docker-compose-service-description", 
            "text": "This container will only create an empty MySQL  fedora3  database (upon launch) using the Docker  environment  setting (displayed above). The Drupal site and/or multi-site databases will need to be created post launch.   Please note: This container must be created and launched first, prior to all other containers.  Within the docker-compose.yml file, found at the root of the ISLE project Github repository, this container is described / controlled as follows:   db:\n  build: ./mysql\n  image: isle-db:latest\n  environment:\n    - MYSQL_ROOT_PASSWORD=islemysqlrootpw2017\n    - MYSQL_DATABASE=fedora3\n    - MYSQL_USER=fedora_admin\n    - MYSQL_PASSWORD=islefeddb2017\n  ports:\n    - \"3306:3306\"\n  volumes:\n    - ./data/mysql:/var/lib/mysql\n    - ./mysql/initscripts:/docker-entrypoint-initdb.d\n  container_name: isle-db", 
            "title": "Docker Compose service description"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#docker-compose-commands", 
            "text": "To build only this container (no others):  docker-compose build db     To create only this container (no others):  docker-compose create db  To start only this container (no others):  docker-compose up -d db", 
            "title": "Docker Compose commands:"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#image-name", 
            "text": "Latest  mysql:5.6 (db)  Legacy  mysql:5.5.55 (db)", 
            "title": "Image Name"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#container-names", 
            "text": "isle-db", 
            "title": "Container name(s)"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#databases", 
            "text": "fedora3  Fedora database created by build process (empty)  isle_site  Drupal site database created by build process (empty, default)   Per the guidelines of the official MySQl Docker image  README , section  Initializing a fresh instance :   \"When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d. Files will be executed in alphabetical order. You can easily populate your mysql services by mounting a SQL dump into that directory and provide custom images with contributed data. SQL files will be imported by default to the database specified by the MYSQL_DATABASE variable.\" \"   By default, the  docker-compose.yml  script creates the  fedora3  database by setting environmental variables in the  environment  section of the  db  service.  The second database  isle_site  is created when the mount process  ./mysql/initscripts:/docker-entrypoint-initdb.d  occurs upon container launch.  Within this project directory, there is a directory  initscripts  which contains a SQL script  siteinit.sql  \u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 fedora\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Dockerfile\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 docker-entrypoint.sh\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 initscripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 siteinit.sql\n\u251c\u2500\u2500 site\n\u2514\u2500\u2500 web  The default contents of this script are:  Example  CREATE DATABASE isle_site CHARACTER SET utf8 COLLATE utf8_general_ci;  CREATE USER islandora_user@'127.0.0.1' IDENTIFIED BY 'islandoraisledb2017';  GRANT SELECT, INSERT, UPDATE ON islandora_docker.* TO 'islandora_user'@'127.0.0.1'\";     This script can be modified to create more databases upon container launch.      User  Password  Database  Description      root  islemysqlrootpw2017  ALL  has access to all databases with all db privileges    fedora_admin  islefeddb2017  fedora3  has access to only the  fedora3  Fedora database. No grant privileges.    islandora_user  islandoraisledb2017  isle_site  has access to only the  isle_site  Drupal site database. No grant privileges.", 
            "title": "Databases"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#ports", 
            "text": "Port 3306 on the MySQL container is mapped to 3306 on Host", 
            "title": "Ports"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#volumes", 
            "text": "./data/mysql:/var/lib/mysql   This volume is created to allow MySQL databases to persist. All MySQL data is stored here. The container can be turned off, destroyed or upgraded and this data will remain.   ./mysql/initscripts:/docker-entrypoint-initdb.d   This volume is created to allow for the creation of additional databases beyond the initial  fedora3  creation. A default empty Drupal site database is also supplied using a SQL script file called  siteinit.sql  found within the  initscripts  directory. By mounting this directory directly into the container's  docker-entrypoint-initdb.d  directory, the MySQL service is able to run the SQL script automatically upon container launch.", 
            "title": "Volumes"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#notes", 
            "text": "Please only review this if building containers manually:     The  docker-entrypoint.sh  file contained within the  mysql  folder next to the Dockerfile needs to have  755  file permissions prior to the build.    Example: \nRun  chmod 755 docker-entrypoint.sh  to fix PRIOR to the build.", 
            "title": "Notes"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-fedora/", 
            "text": "", 
            "title": "2.3 - Container - Fedora"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-gsearch/", 
            "text": "", 
            "title": "2.3 - Container - Gsearch"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-solr/", 
            "text": "", 
            "title": "2.3 - Container - Solr"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-certbot/", 
            "text": "", 
            "title": "2.3 - Container - Certbot"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-points/", 
            "text": "", 
            "title": "2.4 - ISLE Customization Overview"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-accounts/", 
            "text": "", 
            "title": "2.4 - Default accounts and passwords"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-directories/", 
            "text": "", 
            "title": "2.4 - Directories"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-yaml-files/", 
            "text": "", 
            "title": "2.4 - YAML files"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-drupal-applications/", 
            "text": "", 
            "title": "2.4 - Drupal Application"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-xacml-policies/", 
            "text": "", 
            "title": "2.4 - XACML policies"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-xslts/", 
            "text": "", 
            "title": "2.4 - XSLTs"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-drupal-modules/", 
            "text": "", 
            "title": "2.4 - Drupal Modules"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-compile-processes/", 
            "text": "", 
            "title": "2.4 - Compile Processes"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-repositories/", 
            "text": "", 
            "title": "2.4 - Repositories"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-config-tools/", 
            "text": "", 
            "title": "2.4 - Configuration tools and commands"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-logs/", 
            "text": "", 
            "title": "2.4 - Logs - How to configure logs"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-apache-manual/", 
            "text": "", 
            "title": "2.4 - SSL - Apache - How to manually configure SSL certificates"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-apache-certbot/", 
            "text": "", 
            "title": "2.4 - SSL - Apache - How to configure SSL certificates using Certbot and Lets Encrypt"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-tomcat-manual/", 
            "text": "", 
            "title": "2.4 - SSL - Tomcat - How to manually configure SSL certificates"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-tomcat-certbot/", 
            "text": "", 
            "title": "2.4 - SSL - Tomcat - How to configure SSL certificates using Certbot and Lets Encrypt"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-pre-existing/", 
            "text": "", 
            "title": "2.4 - How to migrate Customized settings, configurations and data from pre-existing sytems"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-download-files/", 
            "text": "", 
            "title": "2.4 - Configuration files overview"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-apache-files/", 
            "text": "", 
            "title": "2.4 - Apache"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-djatoka-files/", 
            "text": "", 
            "title": "2.4 - Djatoka"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-fedora-files/", 
            "text": "", 
            "title": "2.4 - Fedora"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-gsearch-files/", 
            "text": "", 
            "title": "2.4 - Gsearch"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-logrotate-files/", 
            "text": "", 
            "title": "2.4 - Logrotate"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-mysql-files/", 
            "text": "", 
            "title": "2.4 - MySQL"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-php-files/", 
            "text": "", 
            "title": "2.4 - PHP"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-solr-files/", 
            "text": "", 
            "title": "2.4 - Solr"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-topmcat-files/", 
            "text": "", 
            "title": "2.4 - Tomcat"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-security/", 
            "text": "", 
            "title": "2.4 - Security modifications"
        }, 
        {
            "location": "/2_enduser_guide/2_5_container_selection/container-selection/", 
            "text": "", 
            "title": "2.5 - ISLE Container Selection + Docker Compose Usage"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/mountpoints/", 
            "text": "", 
            "title": "2.6 - Mount Points"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/pre-existing-datastores/", 
            "text": "", 
            "title": "2.6 - How to attach pre-existing datastores to new containers"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/config-paths/", 
            "text": "", 
            "title": "2.6 - Configuration files paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-logs/", 
            "text": "", 
            "title": "2.6 - Log files paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-indicies/", 
            "text": "", 
            "title": "2.6 - Indices paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-databases/", 
            "text": "", 
            "title": "2.6 - Databases paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-triplestores/", 
            "text": "", 
            "title": "2.6 - Triplestores paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/data-migration/", 
            "text": "", 
            "title": "2.6 - How to migrate data from existing systems"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/migration-tools-scripts/", 
            "text": "", 
            "title": "2.6 - Migration Tools and scripts"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/upgrations/", 
            "text": "", 
            "title": "2.6 - Upgrations"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-sandbox/", 
            "text": "", 
            "title": "2.7 - Sandbox"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-staging/", 
            "text": "", 
            "title": "2.7 - Staging"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-production/", 
            "text": "", 
            "title": "2.7 - Production"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-workflow/", 
            "text": "", 
            "title": "2.7 - Workflow process across environments"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-git-structure/", 
            "text": "", 
            "title": "2.7 - Recommended Git structure"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-data-replications/", 
            "text": "", 
            "title": "2.7 - Data Replications and Movement"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-container-movement/", 
            "text": "", 
            "title": "2.7 - Container Movement"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/", 
            "text": "How to edit ISLE Documentation\n\n\nThanks in advance for contributions to the ISLE Documentation.\n\n\nThe Islandora Community, the ISLE Team and its stakeholders greatly appreciates all contributor's time and efforts in creating, editing, revising and growing this collected documentation.\n\n\nThe ISLE Team asks that all potential contributors please familiarize themselves with the \nDocumentation and Style Guide\n and its requirements \nPRIOR\n to committing documentation changes.\n\n\nThere are two different ways one can edit or create documentation for the ISLE project.\n\n\nPlease note:\n One will need to have signed up for a Github.com account \nhere\n prior to attempting either of these two methods.\n\n\nMethod 1: Edit page on Github.com\n\n\n\n\nOpen a web browser and navigate to the ISLE project \nrepository\n on Github.com\n\n\nClick on the \ndocs\n directory\n\n\nNavigate to and click on the desired \n.md\n file (documentation page) for editing\n\n\nLocate and click on the \npencil\n icon on the right hand side of the page. (To the right of Raw | Blame | History etc)\n\n\nThe page should now be ready for editing and the \nEdit file\n tab should display at the top. Make changes as needed.\n\n\nTo save changes for review by the ISLE project team, simply scroll down to the bottom of the page to the \nCommit Changes\n section.\n\n\nWithin the first empty field, enter a comment like \nEdited filename.md with changes to ...\n (The key is one sentence with a very minimal description)\n\n\nWithin the second empty field, if needed enter a more verbose list of comments with changes.\n\n\nClick the second radio button \nCreate a new branch for this commit and start a pull request.\n \nDO NOT CLICK THE 1ST BUTTON PLEASE!\n\n\nUpon clicking the second radio button, there should be a new field created with an entry e.g. \ngithubusername-patch-1\n\n\nClick the green \nPropose file change\n button\n\n\nA new page opens with the title \nOpen a pull request\n. The previous information from the new branch process should now populate the new fields\n\n\nClick the green \nCreate pull request\n and now the documentation changes have been submitted for review.\n\n\nAssigned ISLE  project members will review, approve or comment on the pull request as time allows.\n\n\n\n\n\n\nMethod 2: Edit page via local Mkdocs workflow\n\n\n\n\nPlease follow the \nDocumentation Requirements\n page to install Mkdocs and the appropriate \nmaterial\n theme\n\n\nOpen up a terminal and navigate to the ILSE project directory e.g. \ncd ~/ISLE\n\n\nTo start Mkdocs: \nmkdocs serve\n\n\nOne can view the static pages by opening a browser and navigating to \nhttp://127.0.0.1:8000\n\n\nCheckout a new branch in git e.g. \ngit checkout -b new_branch\n\n\nEdit the appropriate Markdown (.md) file within the \ndocs\n directory and save the edited file. Changes are almost immediate, the page should refresh. Should errors occur and the page does not display check the terminal output for issues.\n\n\nOnce ready to push changes to the ISLE repository:  \ngit add edited-documentation-page.md\n  \n\n\ngit commit -m \"Your description of changes, why and affected files if possible\"\n  \n\n\ngit push origin new_branch\n  \n\n\nManually create a pull request on the Github page for the ISLE \nrepository\n  \n\n\nAssigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "3.1 - Contributing to Docs"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#how-to-edit-isle-documentation", 
            "text": "Thanks in advance for contributions to the ISLE Documentation.  The Islandora Community, the ISLE Team and its stakeholders greatly appreciates all contributor's time and efforts in creating, editing, revising and growing this collected documentation.  The ISLE Team asks that all potential contributors please familiarize themselves with the  Documentation and Style Guide  and its requirements  PRIOR  to committing documentation changes.  There are two different ways one can edit or create documentation for the ISLE project.  Please note:  One will need to have signed up for a Github.com account  here  prior to attempting either of these two methods.", 
            "title": "How to edit ISLE Documentation"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#method-1-edit-page-on-githubcom", 
            "text": "Open a web browser and navigate to the ISLE project  repository  on Github.com  Click on the  docs  directory  Navigate to and click on the desired  .md  file (documentation page) for editing  Locate and click on the  pencil  icon on the right hand side of the page. (To the right of Raw | Blame | History etc)  The page should now be ready for editing and the  Edit file  tab should display at the top. Make changes as needed.  To save changes for review by the ISLE project team, simply scroll down to the bottom of the page to the  Commit Changes  section.  Within the first empty field, enter a comment like  Edited filename.md with changes to ...  (The key is one sentence with a very minimal description)  Within the second empty field, if needed enter a more verbose list of comments with changes.  Click the second radio button  Create a new branch for this commit and start a pull request.   DO NOT CLICK THE 1ST BUTTON PLEASE!  Upon clicking the second radio button, there should be a new field created with an entry e.g.  githubusername-patch-1  Click the green  Propose file change  button  A new page opens with the title  Open a pull request . The previous information from the new branch process should now populate the new fields  Click the green  Create pull request  and now the documentation changes have been submitted for review.  Assigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "Method 1: Edit page on Github.com"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#method-2-edit-page-via-local-mkdocs-workflow", 
            "text": "Please follow the  Documentation Requirements  page to install Mkdocs and the appropriate  material  theme  Open up a terminal and navigate to the ILSE project directory e.g.  cd ~/ISLE  To start Mkdocs:  mkdocs serve  One can view the static pages by opening a browser and navigating to  http://127.0.0.1:8000  Checkout a new branch in git e.g.  git checkout -b new_branch  Edit the appropriate Markdown (.md) file within the  docs  directory and save the edited file. Changes are almost immediate, the page should refresh. Should errors occur and the page does not display check the terminal output for issues.  Once ready to push changes to the ISLE repository:   git add edited-documentation-page.md     git commit -m \"Your description of changes, why and affected files if possible\"     git push origin new_branch     Manually create a pull request on the Github page for the ISLE  repository     Assigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "Method 2: Edit page via local Mkdocs workflow"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/", 
            "text": "ISLE Documentation Style Guide and Requirements\n\n\nThe ISLE Team asks that all potential contributors please familiarize themselves with this guide and its requirements \nPRIOR\n to committing documentation changes.\n\n\nThis document and project has been created to provide the ISLE project team and larger Islandora community with:\n\n\n\n\n\n\nMarkdown resources, on-boarding material and tools\n\n\n\n\n\n\nHow Markdown can be used for Documentation of ISLE Projects and additional efforts\n\n\n\n\n\n\nHow \nMkdocs\n is used for the creation of static Documentation pages from Markdown files.\n\n\n\n\n\n\nDocumentation Requirements\n\n\n\n\n\n\nAll documentation will be kept within the \ndocs\n directory within the Github.com hosted git repository.\n\n\n\n\n\n\nMarkdown (.md) files are to be used for all documentation.\n\n\n\n\n\n\nAny other type of submitted file type e.g. \n.txt,.pdf,.doc,.rtf\n will not be accepted.\n\n\n\n\n\n\nMkdocs\n is to be used for the generation of static documentation pages to be hosted on Github pages or locally.\n\n\n\n\n\n\nDocumentation Style\n\n\n\n\nHow-to(s) should be written for technical and non-technical audiences alike with clear fully tested steps, explanations and outcomes.\n\n\nAssumptions of prior technical knowledge should be avoided. If additional explanations potentially exceed an appropriate file length or context, the ISLE team recommends creating a \nReferences\n section with topical URLs providing additional documentation for further reading by endusers.\n\n\nAvoid gender specific references e.g. \nhe, she, her, him\n, personification or casual first person perspective e.g. \nyou\n. Use gender-neutral terms like \"\nenduser, one, they, a person\n\" etc.\n\n\nPlease follow the \nFile Layout\n \nsection\n of the \nMkdocs\n documentation when creating new documentation sections.\n\n\n\n\nWhat is Markdown?\n\n\n\n\n\n\nMarkdown is a text to HTML conversion tool.\n\n\n\n\n\n\nThe ISLE team prefers to use the \"\nGitHub Flavored Markdown\n\" syntax.\n\n\n\n\n\n\nMarkdown was created by John Gruber of \nDaring Fireball\n fame\n\n\n\n\n\n\nWhat is Markdown?\n\n\n\n\n\n\nMarkdown Requirements\n\n\n\n\nA text editor like \nAtom\n, Textedit or Notepad.\n\n\nSaving files with the \n.md\n extension\n\n\n\n\nMarkdown Syntax\n\n\n\n\n\n\nMastering Markdown offical Github guide\n\n\n\n\n\n\nMarkdown Syntax (official Github cheat sheet)\n\n\n\n\n\n\nMarkdown cheat sheet\n\n\n\n\n\n\nMarkdown Style\n\n\n\n\n\n\nA great starter \nTemplate\n\n\n\n\n\n\nGood example of \u201chow to\u201d use a README.md. (Not all sections germane. \nExample\n\n\n\n\n\n\nMore elaborate though clean example from \nNetflix", 
            "title": "3.1 - Documentation Style Guide"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#isle-documentation-style-guide-and-requirements", 
            "text": "The ISLE Team asks that all potential contributors please familiarize themselves with this guide and its requirements  PRIOR  to committing documentation changes.  This document and project has been created to provide the ISLE project team and larger Islandora community with:    Markdown resources, on-boarding material and tools    How Markdown can be used for Documentation of ISLE Projects and additional efforts    How  Mkdocs  is used for the creation of static Documentation pages from Markdown files.", 
            "title": "ISLE Documentation Style Guide and Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#documentation-requirements", 
            "text": "All documentation will be kept within the  docs  directory within the Github.com hosted git repository.    Markdown (.md) files are to be used for all documentation.    Any other type of submitted file type e.g.  .txt,.pdf,.doc,.rtf  will not be accepted.    Mkdocs  is to be used for the generation of static documentation pages to be hosted on Github pages or locally.", 
            "title": "Documentation Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#documentation-style", 
            "text": "How-to(s) should be written for technical and non-technical audiences alike with clear fully tested steps, explanations and outcomes.  Assumptions of prior technical knowledge should be avoided. If additional explanations potentially exceed an appropriate file length or context, the ISLE team recommends creating a  References  section with topical URLs providing additional documentation for further reading by endusers.  Avoid gender specific references e.g.  he, she, her, him , personification or casual first person perspective e.g.  you . Use gender-neutral terms like \" enduser, one, they, a person \" etc.  Please follow the  File Layout   section  of the  Mkdocs  documentation when creating new documentation sections.", 
            "title": "Documentation Style"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#what-is-markdown", 
            "text": "Markdown is a text to HTML conversion tool.    The ISLE team prefers to use the \" GitHub Flavored Markdown \" syntax.    Markdown was created by John Gruber of  Daring Fireball  fame    What is Markdown?", 
            "title": "What is Markdown?"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-requirements", 
            "text": "A text editor like  Atom , Textedit or Notepad.  Saving files with the  .md  extension", 
            "title": "Markdown Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-syntax", 
            "text": "Mastering Markdown offical Github guide    Markdown Syntax (official Github cheat sheet)    Markdown cheat sheet", 
            "title": "Markdown Syntax"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-style", 
            "text": "A great starter  Template    Good example of \u201chow to\u201d use a README.md. (Not all sections germane.  Example    More elaborate though clean example from  Netflix", 
            "title": "Markdown Style"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-mkdocs-requirements/", 
            "text": "Documentation Requirements\n\n\nThis project uses \nMkdocs\n for its documentation.\n\n\n\n\n\"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"\n \n- Mkdocs\n\n\n\n\nTo install Mkdocs:\n\n\n\n\nPlease follow their \nguide\n for the appropriate operating system\n\n\n\n\nThis projects uses the \nmaterial\n theme.\n\n\nTo install the \nmaterial\n theme.\n\n\n\n\nPlease follow this \nguide\n - or -\n\n\n\n\nInstall the latest version of Material with pip:\n\n\npip install mkdocs-material", 
            "title": "3.1 - Mkdocs Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-mkdocs-requirements/#documentation-requirements", 
            "text": "This project uses  Mkdocs  for its documentation.   \"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"   - Mkdocs   To install Mkdocs:   Please follow their  guide  for the appropriate operating system   This projects uses the  material  theme.  To install the  material  theme.   Please follow this  guide  - or -   Install the latest version of Material with pip:  pip install mkdocs-material", 
            "title": "Documentation Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-modify-ansible-scripts/", 
            "text": "", 
            "title": "3.2 - Considerations for future modification of ansible scripts"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-ansible-scripts-customize/", 
            "text": "", 
            "title": "3.2 - How to customize the Ansible scripts"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-ansible-resources/", 
            "text": "", 
            "title": "3.2 - Ansible Resources"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-overview-docker/", 
            "text": "", 
            "title": "3.3 - Overview of Docker and Docker Compose"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-inventory/", 
            "text": "", 
            "title": "3.3 - Inventory and description of customization elements"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-compose/", 
            "text": "", 
            "title": "3.3 - How to customize Docker Compose files"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-dockerfile/", 
            "text": "", 
            "title": "3.3 - How to customize Dockerfiles"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/", 
            "text": "What is Docker?\n\n\n\n\n\"Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.\"\n\n\n- Opensource.com\n\n\n\n\nReference:\n\n\n\n\nhttps://www.docker.com/\n\n\nhttps://www.docker.com/what-docker\n\n\nhttps://www.docker.com/technologies/overview#/software_infrastructure\n\n\nhttps://docs.docker.com/engine/docker-overview/\n\n\n\n\nWhat are Docker Containers?\n\n\n\n\n\"A container image is a lightweight, stand-alone, executable package of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. A container is a runtime instance of a docker image.\"\n  \n\n\n\"The concept is borrowed from Shipping Containers, which define a standard to ship goods globally. Docker defines a standard to ship software.\"\n\n \n- Docker.com\n\n\n\n\nA Docker container consists of:\n\n\n\n\na Docker image\n\n\nAn execution environment\n\n\nA standard set of instructions\n\n\n\n\nReference:\n\n\n\n\nhttps://opensource.com/resources/what-are-linux-containers?intcmp=7016000000127cYAAQ\n\n\nhttps://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/\n\n\n\n\nWhat are Docker Images?\n\n\n\n\n\"An image is an inert, immutable, file that's essentially a snapshot of a container. Images are created with the build command, and they'll produce a container when started with run. Images are stored in a Docker registry such as registry.hub.docker.com\"\n\n\n- stackoverflow\n\n\n\n\n\n\nhttps://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/\n\n\nhttps://docs.docker.com/engine/reference/commandline/images/\n\n\n\n\nWhat is Docker Compose?\n\n\n\n\nFor this project, Docker Compose is used as an \norchestration\n tool to run and manage all containers.\n\n\n\n\n\n\n\"Orchestration is the automated arrangement, coordination, and management of computer systems, middleware, and services.\"\n\n\n- Wikipedia\n\n\n\"Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application's services. Then, using a single command, you create and start all the services from your configuration.\"\n\n\n- Docker Compose\n\n\n\n\nReference:\n\n\n\n\nhttps://docs.docker.com/compose/overview/\n\n\nhttps://docs.docker.com/compose/\n\n\nhttps://docs.docker.com/compose/environment-variables/\n\n\n\n\nWhat is Docker Hub\n\n\n\n\n\"Docker Hub is a cloud-based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker Cloud so you can deploy images to your hosts. Provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.\"\n\n\n- Docker Hub\n\n\n\n\n\n\nhttps://docs.docker.com/docker-hub/\n\n\nhttps://hub.docker.com/\n\n\n\n\nDocker Documentation\n\n\n\n\nhttps://docs.docker.com/\n\n\nDocker MySQL Documentation \nhttps://github.com/docker-library/docs/tree/master/mysql#mysql_database", 
            "title": "3.3 - Docker Resources"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker", 
            "text": "\"Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.\"  - Opensource.com   Reference:   https://www.docker.com/  https://www.docker.com/what-docker  https://www.docker.com/technologies/overview#/software_infrastructure  https://docs.docker.com/engine/docker-overview/", 
            "title": "What is Docker?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-are-docker-containers", 
            "text": "\"A container image is a lightweight, stand-alone, executable package of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. A container is a runtime instance of a docker image.\"     \"The concept is borrowed from Shipping Containers, which define a standard to ship goods globally. Docker defines a standard to ship software.\" \n  - Docker.com   A Docker container consists of:   a Docker image  An execution environment  A standard set of instructions   Reference:   https://opensource.com/resources/what-are-linux-containers?intcmp=7016000000127cYAAQ  https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/", 
            "title": "What are Docker Containers?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-are-docker-images", 
            "text": "\"An image is an inert, immutable, file that's essentially a snapshot of a container. Images are created with the build command, and they'll produce a container when started with run. Images are stored in a Docker registry such as registry.hub.docker.com\"  - stackoverflow    https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/  https://docs.docker.com/engine/reference/commandline/images/", 
            "title": "What are Docker Images?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker-compose", 
            "text": "For this project, Docker Compose is used as an  orchestration  tool to run and manage all containers.    \"Orchestration is the automated arrangement, coordination, and management of computer systems, middleware, and services.\"  - Wikipedia  \"Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application's services. Then, using a single command, you create and start all the services from your configuration.\"  - Docker Compose   Reference:   https://docs.docker.com/compose/overview/  https://docs.docker.com/compose/  https://docs.docker.com/compose/environment-variables/", 
            "title": "What is Docker Compose?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker-hub", 
            "text": "\"Docker Hub is a cloud-based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker Cloud so you can deploy images to your hosts. Provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.\"  - Docker Hub    https://docs.docker.com/docker-hub/  https://hub.docker.com/", 
            "title": "What is Docker Hub"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#docker-documentation", 
            "text": "https://docs.docker.com/  Docker MySQL Documentation  https://github.com/docker-library/docs/tree/master/mysql#mysql_database", 
            "title": "Docker Documentation"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-hub/", 
            "text": "", 
            "title": "3.4 - Overview of Docker Hub System"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-build-images/", 
            "text": "", 
            "title": "3.4 - Docker Build Images"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-update-build-images/", 
            "text": "", 
            "title": "3.4 - How to update Docker build images"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-tagging-policy/", 
            "text": "", 
            "title": "3.4 - Docker Tagging Policy"
        }, 
        {
            "location": "/4_nongit/demos/", 
            "text": "", 
            "title": "4.1 - Demos"
        }, 
        {
            "location": "/4_nongit/video-examples/", 
            "text": "", 
            "title": "4.2 - Video Examples"
        }
    ]
}